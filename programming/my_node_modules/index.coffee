###

"making it all right"

A no holds barred library for making the V8 engine useful to me,
specifically.

Principles:

- One object, one job
- Favor composition over inhertiance
- Favor functional over object-oriented.
- Flat inheritance tree is fine

- Meta operations on meta objects
 - MetaFoo.metaFoo someInstance, someDetails: 'some data'
 - $.sys.create, not $.root.create

- Separate inheritance/composition from namespace
 - $.meta.whatever isn't necessarily a child of $meta
 - 'global' namespace is how objects interact with their context
 - All objects constructed with a namespace

- Messages sent to objects are about those objects



Objects:

- Root
 - What is common amongst all objects ever
 - child of Class
 - Metachild of null?

###

define Root: null

###

- MethodCallHandler
 - child of Meta

- HandlerMap
 - has
  - methods : Namespace<name : String, handlerId : Identifier>

- MessageDispatcher
 - has
  - HandlerMap handlers
  - PatternMap patterns

 - delegates
  - handlers
   - add/list/remove
  - patterns
   - add/list/match/remove

  - does
   - findHandler(messageName, args...) : 

  - listHandlers()                        : Map<handlerId, handler>

  - addMessagePattern(pattern, handlerId)
  - lookupMethod(messageName)             : found    MatchedMethod
  - define

- MatchedMethod
 - has
  - sender   : Root
  - receiver : Root
  - caller   : MessageDispatcher
  - definer  : MessageDispatcher

 - does send(messageName, args...)

###



###

- Meta
 - Scaffolding for the MOP
 - Parent to Class
 - child of Root
 - Metachild of null?

###


###

- Class
 - Scaffolding for OP
 - child of Root
 - Metachild of Meta

###


###

- Sys
 - Gateway to all things privilidged
 - child of Meta

###


###

- Function
 - child of Root

###


###

- Namespace
 - child of 
 - Has members

###


###

- Member
 - child of Root
 - Has namespace
 - Has name

###


###

- Method
 - child of Member

Other stuff

Verb usage

 - 'create'  instantiates  an entity
 - 'destroy' deconstructs  an entity

 - 'delete'  is never used

 - 'add'     associates    an entity with a set
 - 'remove'  disassociates an entity from a set

 - 'set'     associates    an entity with a key
 - 'get'     fetches       an entity its    key
 - 'unset'   disassociates an entity from a key

 - 'match'   groups the members of a collection by match quality
 - 'lookup'  is 

 - 'fetch'   has latency and resource cost

###


