
Welcome to Cold World.

Enter one of the following commands:

        create name password            To create a new character
        connect name passsword          To connect to an existing character
        @quit                           To leave

The user "Crag" does not exist.
There was a problem creating your character:
ERROR: No such parameter password.
Thrown by interpreter opcode SET_OBJ_VAR.
~paramnf in #48.init_user (defined on #40), line 4
~methoderr in #48.initialize (defined on #1), line 13
~methoderr in #0.create_object (defined on #0), line 9
~methoderr in #0.spawn_sender (defined on #0), line 7
~methoderr in #44.spawn (defined on #1), line 23
~methoderr in #44.spawn (defined on #40), line 5
~methoderr in #0.create_user (defined on #0), line 9
~methoderr in #46.create_cmd (defined on #19), line 16
~methoderr in #46.parse_line (defined on #19), line 23

Welcome to Cold World.

Enter one of the following commands:

        create name password            To create a new character
        connect name passsword          To connect to an existing character
        @quit                           To leave

The user "Crag" does not exist.
* * * Connected * * *
Nowhere
You see nothing special.
--> $sys
--> []
--> [["definer * this * eval *", 'eval_as_to_cmd], ["as * eval *", 'eval_as_cmd], ["eval *", 'eval_cmd], ["@program * on *", 'program_cmd], ["@show *", 'show_cmd], ["@params *", 'params_cmd], ["@methods *", 'methods_cmd], ["@verbs *", 'verbs_cmd], ["@list * on *", 'list_cmd], ["@dig * to *", 'dig_to_cmd], ["@dig *", 'dig_cmd], ["@who", 'who_cmd], ["@doing *", 'doing_cmd], ["@quit", 'quit_cmd], ["i?nventory", 'inventory_cmd], ["p?age * with *", 'page_cmd], ["sample_edit *", 'sample_edit_cmd]]
I don't understand that.
I don't understand that.
--> [$admin_1, $admin, $programmer, $builder, $user, $proto_user, $has_commands, $person, $container, $located, $vr, $described, $has_verbs, $root]
Enter text for method help_cmd.
ERROR: The first argument (0) is not a dictionary.
Thrown by function dict_add().
~type in #41.compile (defined on #1), line 8
~methoderr in #48.program_done (defined on #44), line 9
~methoderr in #48.programming_line (defined on #44), line 6
~methoderr in #48.parse_command (defined on #44), line 10
