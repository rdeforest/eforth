                          ***************************
                          *  Welcome to LambdaMOO!  *
                          ***************************
                                       
                      Running Version 1.8.2 of LambdaMOO

PLEASE NOTE:
   LambdaMOO is a new kind of society, where thousands of people voluntarily
come together from all over the world.  What these people say or do may not
always be to your liking; as when visiting any international city, it is wise
to be careful who you associate with and what you say.
   The operators of LambdaMOO have provided the materials for the buildings of
this community, but are not responsible for what is said or done in them.  In
particular, you must assume responsibility if you permit minors or others to
access LambdaMOO through your facilities.  The statements and viewpoints
expressed here are not necessarily those of the wizards, Pavel Curtis,
or Roger Crew, and those parties disclaim any responsibility for them.

NOTICE FOR JOURNALISTS AND RESEARCHERS:
  The citizens of LambdaMOO request that you ask for permission from all
direct participants before quoting any material collected here.

For assistance either now or later, type `help'.
The lag is low; there are 84 connected.
*** Connected ***
Storage room
Boxes, crates, scraps of stuff, and a dead rat are strewn about this small room. The air and everything else are dusty. Cough, cough. A hammock has been strung between two walls, and a single 60 watt bulb casts a dim light about the place.
There is new activity on the following lists:
    *Server-Hackers (#24451)             9 new messages
    *Core-DB-Issues (#8175)              4 new messages
    *Site-Issues (#72243)                8 new messages
    *Ballot:StopReaping (#62497)         8 new messages
Last connected Thu Aug  3 10:48:32 2006 PDT from dsl081-175-009.sea1.dsl.speakeasy.net
There is new news.  Type `news' to read all news or `news new' to read just new news.
< connected: Crag. Total: 85 >
15 messages on *Core-DB-Issues (#8175):
 5019:  Mar 15 15:04   Miral (#107983)        Re: Suggested addition: $local.ma
 5020:  Mar 15 15:21   Diopter (#98842)       Re: Suggested addition: $local.ma
 5021:  Mar 15 15:33   Galatea (#122047)      Re: Suggested addition: $local.ma
 5024:  May  5 16:09   Galatea (#122047)      $network:open()
 5025:  May  6 06:02   Nosredna (#2487)       Re: $network:open()
 5026:  May  7 10:36   Quad (#105557)         (None.)
 5027:  May  7 17:59   Miral (#107983)        Re: $network:open()
 5028:  May  9 23:31   Galatea (#122047)      Re: $network:open()
 5029:  May 10 00:00   Miral (#107983)        Re: $network:open()
 5032:  May 10 01:34   Galatea (#122047)      $player:notify()
>5033:  May 12 14:43   Nosredna (#2487)       Re: $player:notify()
 5035:+ Jun 13 09:43   Phoenix (#118034)      $paranoid_db:set_kept_lines and #
 5036:+ Jun 13 13:11   Nosredna (#2487)       Re: $paranoid_db:set_kept_lines a
 5038:+ Jun 15 02:19   Gandalf (#110777)      (None.)
 5039:+ Jun 15 14:07   Diopter (#98842)       $paranoid_db:gc
-----+
15 messages on *Server-Hackers (#24451):
1080:  Mar  3 07:35   Luke-Jr (#115349)      Standalone MOO applications possib
1081:  May 15 10:13   ThwartedEfforts (#69976)   I hacked up something to do "m
1082:  May 15 11:51   Diopter (#98842)       > and adding automatic preemption 
1083:  May 15 15:24   ThwartedEfforts (#69976)   There is no "core", since ther
1084:  May 15 15:28   ThwartedEfforts (#69976)   Threads were/are created by #0
1085:  May 15 15:31   ThwartedEfforts (#69976)   Oh, I wanted to add that, whil
1086:+ Jun 29 22:37   Anodos (#21528)        MOO 2.0
1087:+ Jun 30 04:31   Loufah (#116455)       > I'd prefer a MOO which used a 'r
1088:+ Jun 30 09:57   Xeric (#112019)        WhiteRabbit (Doug Orleans) nearly 
1089:+ Jun 30 10:11   stucky (#108696)       Or ask him for his dissertation wh
1090:+ Jun 30 10:16   Xeric (#112019)        He only NEARLY wrote it on that to
1091:+ Jul  4 08:36   Karl (#49702)          Issues to consider
1092:+ Jul  4 12:52   Xeric (#112019)        Also keep in mind that the core is
1093:+ Jul  8 17:07   Luke-Jr (#115349)      Automatic C "bindings"
1094:+ Aug  2 22:07   Pete_the_Rat (#108035)   Re: Issues to consider
----+
Message 1086 on *Server-Hackers (#24451):
Date:     Thu Jun 29 22:37:12 2006 PDT
From:     Anodos (#21528)
To:       *Server-Hackers (#24451)
Subject:  MOO 2.0

I've been thinking for a while about writing a new MOO server. I'm somewhat frustrated by the limitations of Lambda's MOOcode, and I'd prefer a MOO which used a 'real' language like Python or Ruby, and a more versatile mode for uploading code, perhaps via a subversion repository.

I'm just trying to work out what the basic necessary features the server would have. My thoughts so far:

* If I am going to permit multiple non-wizard programmers, as we have here, the the language will need some support for a permissions system.

* It needs to be able to modify code in place in a running system.

* To maintain persistance, the state of objects in the language would need to be backed by a database.

Hmm. Doing this with any existing language could be tricky.

Anodos
--------------------------
Message 1087 on *Server-Hackers (#24451):
Date:     Fri Jun 30 04:31:09 2006 PDT
From:     Loufah (#116455)
To:       *Server-Hackers (#24451)

> I'd prefer a MOO which used a 'real' language like Python or Ruby

Have you seen http://www.strout.net/python/poo/ ?
--------------------------
Message 1088 on *Server-Hackers (#24451):
Date:     Fri Jun 30 09:57:45 2006 PDT
From:     Xeric (#112019)
To:       *Server-Hackers (#24451)

WhiteRabbit (Doug Orleans) nearly wrote his PhD thesis on the issues of shared programming languages.  If he ever deigns to MOO again you could ask him what he learned.
--------------------------
Message 1089 on *Server-Hackers (#24451):
Date:     Fri Jun 30 10:11:38 2006 PDT
From:     stucky (#108696)
To:       *Server-Hackers (#24451)

Or ask him for his dissertation which should include all he learned, right?
--------------------------
Message 1090 on *Server-Hackers (#24451):
Date:     Fri Jun 30 10:16:46 2006 PDT
From:     Xeric (#112019)
To:       *Server-Hackers (#24451)

He only NEARLY wrote it on that topic.  Ultimately he wrote about AOP.
--------------------------
Message 1091 on *Server-Hackers (#24451):
Date:     Tue Jul  4 08:36:40 2006 PDT
From:     Karl (#49702)
To:       *Server-Hackers (#24451)
Subject:  Issues to consider

The are various why many 'real' languages are not suitable and why a domain specific language (perhaps like MOO, ColdC, etc, but maybe different). is actually quite appropriate.

Firstly, as you mention, is the issue of security.  A language like Java, Python, etc. simply isn't designed with the notion that the programmer should be denied the priviledge to mutate objects at well.

Secondly is the issue of the object model.  It could be argued (in some other discussion) that the prototype model that MOO and others have is a more suitable model for an in-world extensible system.

Thirdly is something you didn't mention at all, which is very important for a system with multiple connected users, is a policy for managing concurrency.  MOO has a very simplistic model, which basically maintains one big lock around the entire world while a 'transaction' (verb) is running; in other words, only one transaction runs at a time, and it is strictly boxed in terms of how many 'ticks' it is able to consume.  This solves a host of problems, the most important ones being that it effectively blocks (most) programmers from creating race condition and deadlock scenarios, and discourages programmers from writing programs which consume all the CPU resources of the system.  It ain't perfect, and the system can still be exploited, but it's miles ahead of what an out-of-the-box 'real' language like Python will give you.

The next step up from MOO-style concurrency would perhaps be a full-blown transactional model ala a 'real' database server.

Fourthly, you allude to the issue of persistence.  This is hardly just something you 'bolt' on after the fact if you want it to behave at all performantly.  MOO's persistence isn't really ideal, but it does work.  ColdMUD, et al implemented something quite a bit more complicated with some limited success.  But in both cases persistence is really part of the runtime itself, along with concurrency, permissions, and garbage collection (an area I won't even touch in this discussion, but huge as well.)

Fifth, when using a 'real' language runtime like Python, etc. you will find that many of the libraries and off-the-shelf components that make the 'real' language attractive in the first place become unusable because of permissions and world-safety issues, which kind of mitigates the whole purpose of using the 'real' language in the first place.

Finally, there are advantages to be gained from using a domain-specific language.  While MOO doesn't do much of this, systems like the latest version of Inform (adventure game authoring system) provide a syntax, object model, and authoring tools that allow common in-game relationships to be modeled easier.  Consider MOO's automatic handling of the .location/.contents relationship -- having a system which 'understands' these kinds of common patterns is actually very handy, especially for novice programmers.  Also having a DSL means the syntax can be tailored to users of a certain skill level.

Just some things to consider. While MOO is well over a decade old, the reasons nobody has 'replaced' it yet has more to do with the difficulty of building a better system than is immediately obvious.

Ask yourself what is to be gained from using an existing language, when it is the system _runtime_ that is probably the most complicated portion of the system.  Myself, I find learning new programming languages easier, much easier than writing a concurrent, network accessible, transactional, secure, object oriented, multiuser database.
--------------------------
Message 1092 on *Server-Hackers (#24451):
Date:     Tue Jul  4 12:52:43 2006 PDT
From:     Xeric (#112019)
To:       *Server-Hackers (#24451)

Also keep in mind that the core is vastly larger and more complex than the server.  If MOO hadn't attracted the right group of people in the early days to build a DB, the server itself wouldn't matter.
--------------------------
Message 1093 on *Server-Hackers (#24451):
Date:     Sat Jul  8 17:07:49 2006 PDT
From:     Luke-Jr (#115349)
To:       *Server-Hackers (#24451)
Subject:  Automatic C "bindings"

Just in case anyone is interested, I have some partial support for automatic C bindings (or at least a framework for implementing such bindings in MOO-code)

Syntax: call_ffi (STR library, STR func-name, STR return-c-type, LIST arguments)
'arguments' is a list of {STR c-type, value}

Examples:
        call_ffi("", "puts", "int", {{"char *", "test"}});
        call_ffi("", "printf", "int", {{"char *", "lala %c fofo\n"}, {"char", 65}});
        call_ffi("libm.so", "exp", "double", {{"double", 3.}});

Pondering ways to support C++ bindings with only adding MOO-code.
The constructors and destructors are really the only problem (symbol mangling aside)-- static functions, for example, work fine.
--------------------------
Message 1094 on *Server-Hackers (#24451):
Date:     Wed Aug  2 22:07:52 2006 PDT
From:     Pete_the_Rat (#108035)
To:       *Server-Hackers (#24451)
Subject:  Re: Issues to consider

>  Date:     Tue Jul  4 08:36:40 2006 PDT
>  From:     Karl (#49702)
>  To:       *Server-Hackers (#24451)
>  Subject:  Issues to consider
>  
>  Ask yourself what is to be gained from using an existing language,
>  when it is the system _runtime_ that is probably the most
>  complicated portion of the system.  Myself, I find learning new
>  programming languages easier, much easier than writing a
>  concurrent, network accessible, transactional, secure, object
>  oriented, multiuser database.

I think your last sentence covers things rather nicely.
--------------------------
Message 841 on *News (#123):
Date:     Thu Jul 13 00:27:39 2006 PDT
From:     ARB Elections Core (#52221)
To:       *News (#123)
Subject:  ARB election results
Sender:   Petitioner (#4)

   The election to fill vacancies on the LambdaMOO Architecture Review Board has come to a close with the following results:

       Yes        No   Abstain   *   Candidate
                                     
        65        12         6   *   Legion (#69858)
        50        13         6   *   Profane (#30788)
        46        15         8   *   Kagan (#102427)

The name(s) marked with a plus (+) or asterisk (*) above have acquired more `yes' votes than `no' votes; those marked with an asterisk (*) had the greatest spreads between `yes' and `no' and have therefore been elected.
--------------------------
There is new activity on the following lists:
    *Core-DB-Issues (#8175)              4 new messages
    *Site-Issues (#72243)                8 new messages
    *Ballot:StopReaping (#62497)         8 new messages
-- End of listing
Message 5035 on *Core-DB-Issues (#8175):
Date:     Tue Jun 13 09:43:06 2006 PDT
From:     Phoenix (#118034)
To:       *Core-DB-Issues (#8175)
Subject:  $paranoid_db:set_kept_lines and #6:@paranoid

[This is a repost - I removed the previous message because I noticed that (of course) I messed it up.]
There's an inconsistency in the max number of lines allowed here, so I've come up with the following solution:

@prop $paranoid_db.max_lines 30 r Hacker
@edit #6:@paranoid
del 19
say kept = $paranoid_db:set_kept_lines(this, y);
s/y,/kept,/20
save

@edit $paranoid_db:set_kept_lines
s/20/this.max_lines/1
del 6
say this.(l) = kept;
say return kept;
ins ^6
say kept = min(args[2], maximum);
save
done

Edited versions of the two verbs are available on #118034.

Phoenix
--------------------------
Message 5036 on *Core-DB-Issues (#8175):
Date:     Tue Jun 13 13:11:11 2006 PDT
From:     Nosredna (#2487)
To:       Phoenix (#118034) and *Core-DB-Issues (#8175)
Subject:  Re: $paranoid_db:set_kept_lines and #6:@paranoid

Implemented.
--------------------------
Message 5038 on *Core-DB-Issues (#8175):
Date:     Thu Jun 15 02:19:16 2006 PDT
From:     Gandalf (#110777)
To:       *Core-DB-Issues (#8175)

Found a bug in the $paranoid_db implementation: $paranoid_db:gc erases properties every three days! $paranoid_db.max_lines got erased at midnight Lambda time.

Here's a suggested fix:

@prop $paranoid_db.exempt_from_deletion {} r Hacker
;;$paranoid_db.exempt_from_deletion = {"exempt_from_deletion", "max_lines"};
@prop $paranoid_db.max_lines 30 r Hacker
@edit $paranoid_db:gc
ins _4 "exempt = this.exempt_from_deletion;
ins +1
enter
  if(x in (exempt))
    continue;
  endif
.
save
--------------------------
Message 5039 on *Core-DB-Issues (#8175):
Date:     Thu Jun 15 14:07:34 2006 PDT
From:     Diopter (#98842)
To:       *Core-DB-Issues (#8175)
Subject:  $paranoid_db:gc

 4:  threshold = 60 * 60 * 24 * 3;
15:      elseif (index(x, "pdata"))
16:        if (who.last_disconnect_time < time() - threshold && who.last_connect_time < time() - threshold)
17:          this.(x) = {};
18:        endif

I think this means anyone who's been connected for more than 3 days can have their data zapped, even if they're online and active.  Can line 16 be changed to

16:        if (who.last_disconnect_time < time() - threshold && !(who in connected_players()))
--------------------------
There is new activity on the following lists:
    *Site-Issues (#72243)                8 new messages
    *Ballot:StopReaping (#62497)         8 new messages
-- End of listing
===== *Site-Issues (#72243) (8 messages) =====

Message 56 on *Site-Issues (#72243):
Date:     Tue May 23 19:27:59 2006 PDT
From:     Rog (#4292)
To:       *Wizard-List (#6428) and *Site-Issues (#72243)
Subject:  lambda.moo.mud.org mail server

so, this past weekend, wotan, my 2000-vintage Dell win2k box where the mail and webservers run, which is distinct from alberich [my 2003-vintage Debian box where the MOO server runs], got toasted by a bad device-driver install -- capsule summary:  QuickTime can blow me -- sufficiently badly that I had to do a full OS reinstall to be able to boot it again.

The webserver is now back up but the mail server is misbehaving and rather than waste more time debugging it and figuring that continuing to run Microsoft IIS with my duct-tape+chickenwire backend is asking for trouble eventually, I'm biting the bullet and switching over to something more real on the Debian box (which will be faster and, I hope, better able to deal with the spam load, which as you probably know has increased MASSIVELY in the last few years).

But until I get this set up, the lambda.moo.mud.org mailing lists are effectively down (well okay, *I* can send stuff to them, but the outside world can't because I've blocked port 25).

Outgoing mail service (@netforward and the like...) should be unaffected, since that's going via the speakeasy smarthost.
--------------------------
Message 57 on *Site-Issues (#72243):
Date:     Thu Jun 15 23:05:10 2006 PDT
From:     Rog (#4292)
To:       *Wizard-List (#6428) and *Site-Issues (#72243)
Subject:  Re: lambda.moo.mud.org mail server

>  I'm biting the bullet and switching over to [a] more real
>  [mail server] on the Debian box ...
>  But until I get this set up, the lambda.moo.mud.org mailing lists
>  are effectively down

ok, the something more real is now running, and we've got incoming mail once more.
--------------------------
Message 58 on *Site-Issues (#72243):
Date:     Sun Jun 25 12:52:30 2006 PDT
From:     The_Ant (#118824)
To:       *Site-Issues (#72243)
Subject:  mud.org DNS issues

Hi!
I'm not exactly sure if this is the right place for this but there's a DNS issue with mud.org domain.
It was not renewed and domain resolution is currently unavailable. This means that anybody trying to reach LambdaMOO via lambda.moo.mud.org will be unable to do so.
Doing a whois on mud.org does not yield any usefull information as it appears that everything on that record is bogus.

Maybe somebody here is able to contact the registrar for the domain and try to resolve this situation. In the meantime LambdaMOO can only be reached either by IP address or via some other domain name. This will also have impact on email delivery both to lambda external mailing lists (I believe some of them are accessible from the outside) and/or Lambda's netforwarded email.

Regards,
The_Ant
--------------------------
Message 59 on *Site-Issues (#72243):
Date:     Sun Jun 25 13:00:39 2006 PDT
From:     Etoile (#113614)
To:       *Site-Issues (#72243)

I forwarded that to *wiz as the description of *site indicates Rog does not read this list.
--------------------------
Message 60 on *Site-Issues (#72243):
Date:     Sun Jun 25 13:06:26 2006 PDT
From:     Etoile (#113614)
To:       *Site-Issues (#72243)

Also, a search on the physical address given in the WHOIS returns something about Logik Systems Inc and the phone number (619) 544-0721 ...if anybody feels like calling.
--------------------------
Message 61 on *Site-Issues (#72243):
Date:     Sun Jun 25 13:25:21 2006 PDT
From:     stucky (#108696)
To:       *Site-Issues (#72243)

I believe the owner of mud.org has been notified.
--------------------------
Message 62 on *Site-Issues (#72243):
Date:     Sun Jun 25 20:28:44 2006 PDT
From:     Nosredna (#2487)
To:       *Site-Issues (#72243)

I just posted the following on the LambdaMOO Status Blog (http://lambdamoo.blogspot.com, for future reference):  The the mud.org domain is nonfunctional, thus LambdaMOO is unreachable except by direct IP address (which is 69.17.114.80) until this is repaired. Some bureaucratic screwup; the owner of mud.org states it is paid up until 2007, but of course bureaucracies don't work on weekends. Hopefully tomorrow it'll be taken care of.
--------------------------
Message 63 on *Site-Issues (#72243):
Date:     Mon Jun 26 17:41:05 2006 PDT
From:     Nosredna (#2487)
To:       *Site-Issues (#72243)

As people have no doubt figured out, the DNS issue is now resolved.
--------------------------

===== *Ballot:StopReaping (#62497) (8 messages) 

Message 143 on *Ballot:StopReaping (#62497):
Date:     Sat May 20 16:50:08 2006 PDT
From:     Nosredna (#2487)
To:       active (#91798) and *Ballot:StopReaping (#62497)
Subject:  Re: ghost

OK, I think I got it all.  Made one small change which is to print out that there was motion to the .ghosts list, so the reaper would know what was going on.  This entailed moving the movement after other printouts so I could say "and moved to .ghosts".

BTW, instead of posting to *reapers which you can't read, you could have discussion on *preapers.  The discussion of the help text is not all that hot and heavy, just messing about with some wording.  I have the idea that Paragraph is going to install it, but if I'm wrong, perhaps it could clue me.

--Nosredna
--------------------------
Message 144 on *Ballot:StopReaping (#62497):
Date:     Sat May 20 21:57:13 2006 PDT
From:     Les_C (#98773)
To:       *Ballot:StopReaping (#62497)

#41111:active_claims, line 4:  Type mismatch
.. called from #6:my_huh (this == #98773), line 35
.. called from #7069:my_huh (this == #98773), line 2
.. called from #26026:my_huh (this == #98773), line 2
.. called from #40099:my_huh (this == #98773), line 4
.. called from #219:do_huh, line 13
.. called from #1:huh (this == #17), line 2
(End of traceback)
--------------------------
Message 145 on *Ballot:StopReaping (#62497):
Date:     Sat May 20 22:28:16 2006 PDT
From:     active (#91798)
To:       *Ballot:StopReaping (#62497)
Subject:  #41111:@reap-aliases alias_db change (take III)

Kudos on the improvement and #41111:rclaim didn't need a change, that's right.  But you missed the change of the insert call I mentioned.  Let's try it a different way:
@edit #41111:@reap-aliases
del 37-40
enter
if (old = this.alias_db:find_player(who))
  reaped_aliases = $set_utils:union(reaped_aliases, old[3]);
endif
this.alias_db:insert(who, {time(), player, reaped_aliases});
.
com

Also, the substitute in #41111:active_claims didn't work right.  I got Les_C to confirm for me and post the previous traceback... so it wouldn't be just active claiming that :active_claims is broke ;)
@args #41111:active_claims this none this
@edit #41111:active_claims
del 4
"for x in (this.estate.claims)
com
--------------------------
Message 146 on *Ballot:StopReaping (#62497):
Date:     Sat May 20 22:50:35 2006 PDT
From:     active (#91798)
To:       *Ballot:StopReaping (#62497) and *Public-Reapers (#69688)
Subject:  Living Wills & Epitaphs

I have a couple of additional suggestions, and I am not sure if they will require a petition.  Either way, I welcome comments.  Here are my suggestions:
1) Modify @will to implement "living wills" such that those who want to ensure they are reaped regardlessly can do so.  If a hard-reap, their stuff would still get checked out.
2) Modify the Epitaph/Gravestone system in the Undertaker's Cottage (#101792).  The Epitaph Registry (#15588) is a setup Yib made for regular players to write epitaphs for themselves and others for gravestone's to be made with specified enscription when a player is reaped.  But if a player is never to be reaped (a ghost/in acoma), then perhaps something should be done with the epitaph.  My thoughts are:
A) An empty gravestone is made, and if the player re-awakens the gravestone becomes an epitaph again...
B) A mausoleum plaque is made, and if the player re-awakens the plaque becomes an epitaph again...
C) The Undertaker a bounty (note parchment) on the soul for whom the epitaph is placed... If the player re-awakens the bounty becomes an epitaph again...
--------------------------
Message 147 on *Ballot:StopReaping (#62497):
Date:     Sun May 21 06:32:14 2006 PDT
From:     Nosredna (#2487)
To:       Les_C (#98773) and *Ballot:StopReaping (#62497)

Fixed active_claims
--------------------------
Message 148 on *Ballot:StopReaping (#62497):
Date:     Sun May 21 06:33:51 2006 PDT
From:     Nosredna (#2487)
To:       active (#91798) and *Ballot:StopReaping (#62497)
Subject:  Re: #41111:@reap-aliases alias_db change (take III)

#41111:@reap-aliases fixed.
--------------------------
Message 149 on *Ballot:StopReaping (#62497):
Date:     Sun May 21 11:49:03 2006 PDT
From:     active (#91798)
To:       *Ballot:StopReaping (#62497)
Subject:  Finishing Implementation

I am guessing "living wills" and Undertaker "bounties" for lost souls will require seperate petitions/ballots, so I think after #3223.reaping is updated by Paragraph, this ballot can be closed.  If someone else wants to write a petition for them, they are more than welcome.  I have begun the petitions process for *P:Alias-Transfer, regarding the transfer of aliases.
Also, I would like to hereby thank Nosredna for being so quick to review, improve on, and implement all the posted code to this list.  It was fun to team-up with her on this.

active
--------------------------
Message 150 on *Ballot:StopReaping (#62497):
Date:     Sun May 21 14:32:05 2006 PDT
From:     Nosredna (#2487)
To:       active (#91798) and *Ballot:StopReaping (#62497)
Subject:  Re: Finishing Implementation

Aw, you just liked ordering a wizard around ;-)
--------------------------

===== End of new mail ========================
Did you get all of that? [Enter `yes' or `no']
Last-read-dates updated
