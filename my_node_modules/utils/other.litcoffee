    CoffeeScript = require 'coffee-script'
    examine = require 'utils/examine'

    module.exports = (opts) ->
      if opts.enhanceCoreClasses
        Object.assign Object.prototype, {} # examine stuff

        Object.assign String.prototype,
          left: (width, more = "") ->
            if @length < width
              this + " ".repeat width - @length
            else
              this.substr(@length - more.length) + more

          right: (width, more = "") ->
            if @length < width
              " ".repeat width - @length + this
            else
              this.substr(@length - more.length) + more

          center: (width, more = "") ->
            if @length < width
              pad = " ".repeat Math.ceil (width - @length) / 2
              (pad + this + pad).substr 0, width
            else
              this.substr(@length - more.length) + more


      loadCoffee: (path) ->
        for variation in [path, path + ".coffee"]
          try
            if 'object' is typeof stats = fs.statSync variation
              found = [variation, stats]
              break

        if not found
          try
            where = require.resolve path
            found = [where, fs.statSync where]

        if not found
          throw new Error "Could not resolve #{path} as file or module"

        [where, stats] = found

        CoffeeScript.eval fs.readFileSync(found[0]).toString 'utf-8'



