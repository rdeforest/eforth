expect    = require 'expect.js'

AsyncCall     =
AsyncThrottle =
  null

testId        = 'testId' + Math.random().toString()[2..6]

{ syncFn
  asyncFn
  promiseFn
} = require '../utils/test-functions'

module.exports =
  AsyncThrottle:
    'constructor':
      'exists': ->
        AsyncThrottle = require 'throttle'

      'creates an empty queue': ->
        throttle = new AsyncThrottle
        expect(throttle.running().length).to.be(0)

    'instance':
      'accepts a call for queuing': ->
        throttle = new AsyncThrottle
        throttle.queueCall ->

      'starts queued functions': (done) ->
        throttle = new AsyncThrottle
        testCall = throttle.queueCall -> done()

      "tracks 'in flight' call count": (done) ->
        throttle = new AsyncThrottle 1

        throttle.queueCall ->
          setTimeout (->
            done()
          ), 100

        expect(throttle.running().length).to.be(1)

      "call end updates 'in flight'": (done) ->
        throttle = new AsyncThrottle 1

        almostDone = -> setTimeout (->
          if throttle.running().length is 0
            done()
          else
            done new Error "queue should be empty"
        ), 30

        throttle.queueCall ->
          setTimeout almostDone, 100

        expect(throttle.running().length).to.be(1)

