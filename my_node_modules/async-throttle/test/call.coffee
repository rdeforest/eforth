expect    = require 'expect.js'

AsyncCall =
testCall  =
  null

testId    = 'testId' + Math.random().toString()[2..6]

{ syncFn
  asyncFn
  promiseFn
} = require '../utils/test-functions'

module.exports =
  AsyncCall:
    'constructor':
      'exists': ->
        AsyncCall = require 'call'

      'takes an id and fn as args': ->
        testCall = new AsyncCall testId, syncFn

      'exposes id as .id': ->
        testCall = new AsyncCall testId, syncFn
        expect(testCall.id).to.be(testId)

      'exposes fn as .fn': ->
        testCall = new AsyncCall testId, syncFn
        expect(testCall.fn).to.be(syncFn)

      'emits "started"  on start'   : (done) ->
        testCall = new AsyncCall testId, syncFn
        testCall.on 'started', -> done()
        testCall.start()

      'emits "returned" on success' : (done) ->
        testCall = new AsyncCall testId, syncFn
        testCall.on 'returned',       -> done()
        testCall.on 'threw',    (err) -> done err
        testCall.on 'barfed',   (err) -> done err
        testCall.start()

