registry = {}

# Can't just "return exists" because children will call super and won't
# necessarily know what to do with the result? I think we want a kind of mixin
# here?

{createHash} = crypto = require('crypto')

defaultKeyFn = (args, instance) ->
  hash = (createHash 'sha256')
  hash.update JSON.stringify args
  hash.digest 'base64'

allDbs = []

# Momizing constructors, whee!
singleton = (keyFn, constructor) ->
  if arguments.length < 1
    throw new Error """
    usage:
      class ClassName
        constructor: singleton [keyFn], constructorFn
    """

  if arguments.length < 2
    [keyFn, constructor] = [defaultKeyFn, keyFn]

  allDbs.push db = {}

  (args...) ->
    key = keyFn args, this

    if key is undefined
      key = defaultKeyFn args, this

    if exists = db[key]
      exists
    else
      db[key] = constructor.apply this, args

if false
  class Named
    constructor: singleton (info = {}) ->
      {@name = this.constructor.name} = info

module.exports = singleton

module.exports.debug =
  known: allDbs
