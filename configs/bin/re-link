#!/usr/bin/perl

# Update symlinks in ~ to point to $project_root/home

use strict;
use warnings;

use File::Basename;
use Cwd;

my $verbosity = 1;

my $projectRoot = getProjectRoot();

relinkDir($ENV{HOME}, $projectRoot . "/home");

sub vLog {
  my ($level, $message) = @_;

  if (!$message) {
    ($level, $message) = (1, $level);
  }

  if ($level <= $verbosity) {
    print $message, "\n";
  }
}

# Assumes script is in $root/bin or something
sub getProjectRoot {
    return Cwd::realpath(dirname($0) . "/..");
}

sub relinkItem {
    my ($item, $dest) = @_;

    return if $item =~ qr{/\..?$};

    print "relinkItem($item, $dest)\n";

    if (-d $item) {
        relinkDir($item, $dest);
    } else {
        relinkFile($item, $dest);
    }
}

sub relinkFile {
    my ($home, $src) = @_;

    if (-e $home && !-l $home) {
        warn "skipping file $home: exists and isn't a link\n";
    }

    unlink $src;
    symlink $home, $src;
}

sub relinkDir {
    my ($homeDir, $srcDir) = @_;

    ! -d $srcDir and die "relinkDir called with non-directory '$srcDir'";

    vLog("Updating $homeDir from $srcDir\n");

    if (-l $srcDir) {
        if (-e $homeDir && !-l $homeDir) {
          warn "Skipped $homeDir: expected symlink.\n";
          return;
        }

        unlink $srcDir;
        symlink $homeDir, $srcDir;
        return;
    }

    if (!-e $homeDir) {
        mkdir $homeDir;
    }

    if (!-d $homeDir) {
        warn "Skipped $homeDir: expected directory.\n";
        return;
    }

    opendir(C, $srcDir);
    while(my $item = readdir(C)) {
        relinkItem("$homeDir/$item", "$srcDir/$item");
    }
}
