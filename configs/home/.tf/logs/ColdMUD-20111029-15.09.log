ColdGOO

    create  name password    To create a new character
    connect name password    To connect to an existing character
    @quit                    To leave

!The user "Crag" does not exist.
*** Connected ***
Nowhere
You see nothing special.
Enter text for method display_methods.
Method compiled.
--> $root
Methods:
--> $admin_1
Methods:
    $root.name()
    $root.name_str()
--> $admin_1
Methods:
    $root.init_root()
    $root.notify_ancestors(event_name, [rest])
    $root.initialize()
    $root.uninitialize()
    $root.change_parents(parents)
    $root.chparents(parents)
    $root.will_inherit(obj)
    $root.name()
    $root.name_str()
    $root.owners()
    $root.is_owned_by(obj)
    $root.public()
    $root.fertile()
    $root.set_fertile(val)
    $root.set_name(new_name)
    $root.set_public(val)
    $root.set_owners(owners_arg)
    $root.add_owner(obj)
    $root.del_owner(obj)
    $root.spawn([suffix])
    $root.destroy()
    $root.add_parameter(name)
    $root.parameters()
    $root.del_parameter(name)
    $root.del_method(name)
    $root.methods()
    $root.parents()
    $root.children()
    $root.ancestors()
    $root.find_method(name)
    $root.find_next_method(name, after)
    $root.list_method(name)
    $root.method_args(name)
    $root.compile(code, name)
    $root.show()
    $root.has_ancestor(obj)
    $root.eval(code, [dest])
    $root.implements(interface)
    $root.data()
    $root.all_children()
--> $admin_1
Methods:
    $root.del_owner(obj)
    $root.del_parameter(name)
    $root.del_method(name)
--> $admin_1
Methods:
    $root.is_owned_by(obj)
--> $admin_1
@program $root.find_next_method
    arg name, after;
    
    if (!public && !.is_owned_by(sender()))
        throw(~perm, "Not public and sender not an owner.");
    return (> find_next_method(name, after) <);
.
--> ['name, 'owners, 'public, 'child_index, 'fertile, 'inited]
Enter text for method display_vars.
Method compiled.
--- $root:
Children: [#0, #2, #3, #4, #5, #6, #7, #12, #13, #14, #40, #48]
Owned by: [#1]
Variables:
    $root:name == 'root
    $root:owners == [$root]
    $root:public == 1
    $root:child_index == 0
    $root:fertile == 0
    $root:inited == 0
---
--- $admin_1:
Child of: [#39]
Owned by: [#51]
Variables:
---
--- $admin_1:
Child of: [#39]
Owned by: [#51]
Variables:
    $programmer:inited is unset
    $programmer:programming == 0
    $programmer:program_buf == 0
    $programmer:current_object == $admin_1
    $user:password == "lm0k4NTZu//Xw"
    $user:doing == ""
    $user:connected_at == 1319926176
    $user:last_command_at == 1319927375
    $user:editor == 0
    $user:editor_method == 0
    $user:connections == [$connection_1]
    $located:inited is unset
    $located:location == $nowhere
    $container:contents == []
    $vr:vr_name == "Crag"
    $described:description == "You see nothing special."
    $has_verbs:verbs == #[]
    $has_commands:commands == []
    $has_commands:shortcuts == []
    $root:name == 'admin_1
    $root:owners == [$admin_1]
    $root:public == 1
    $root:child_index == 0
    $root:fertile == 0
    $root:inited == 1
---
--- $string:
Child of: [#7]
Owned by: [#9]
Methods:
    $string.matchr(pat, str)
    $string.substr(str, begin, [end])
---
--- $list:
Child of: [#7]
Owned by: [#8]
Methods:
    $list.indent(prefix, lines)
    $list.range(x, y)
    $list.to_string(l, sep)
    $list.to_english(l, [rest])
    $list.map(l, method, [args])
    $list.map_on(l, object, method, [args])
    $list.filter(l, method, [args])
    $list.filter_on(l, object, method, [args])
    $list.sort(lst)
    $list._sort(lst, x, y)
    $list.columnize(l, n, [rest])
    $list.map_tostr(l)
    $list.english_vr_object_list(l, [otherargs])
---
!I don't understand that.
!I don't understand that.
!I don't understand that.
!I don't understand that.
!I don't understand that.
!I don't understand that.
!I don't understand that.
!I don't understand that.
!I don't understand that.
!I don't understand that.
!I don't understand that.
!I don't understand that.
!I don't understand that.
Enter text for method summarize_object.
Method compiled.
--- $admin_1 - (defines 0 methods and 0 variables)
Child of: [#39]
Owned by: [#51]
Methods:
---
--- $root - (defines 40 methods and 6 variables)
Children: [#0, #2, #3, #4, #5, #6, #7, #12, #13, #14, #40, #48]
Owned by: [#1]
---
Enter text for method summarize_object.
Method compiled.
--- $root - (defines 40 methods and 6 variables)
Children: [$sys, $server_args, $server, $socket, $frob_class, $user_db, $utils, $has_verbs, $verb_cache, $has_commands, $help_node, $lock_parser]
Owned by: [$root]
---
--- $server - (defines 6 methods and 5 variables)
Child of: [$root]
Owned by: [$server]
Methods:
    $server.log_tb(tb)
    $server.start()
    $server.new_listener()
    $server.stop()
    $server.port([new])
    $server.handler_class([new])
---
--- $list - (defines 13 methods and 0 variables)
Child of: [$utils]
Owned by: [$list]
Methods:
    $list.indent(prefix, lines)
    $list.range(x, y)
    $list.to_string(l, sep)
    $list.to_english(l, [rest])
    $list.map(l, method, [args])
    $list.map_on(l, object, method, [args])
    $list.filter(l, method, [args])
    $list.filter_on(l, object, method, [args])
    $list.sort(lst)
    $list._sort(lst, x, y)
    $list.columnize(l, n, [rest])
    $list.map_tostr(l)
    $list.english_vr_object_list(l, [otherargs])
---
!Line 1: Unknown function typeof.
--> 'string
--> "foobar"
--> [3]
--> []
