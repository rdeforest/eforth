Waterpoint: TOO LATE, LOSER[312]

*** Connected ***
#$#mcp version: 2.1 to: 2.1
The Dense Forest
The trees crowd around thickly, and a heavy carpet of pine needles and broken branches cover the ground.  A park bench is here.  The afternoon sun shines brightly.  It is warm.  The forest opens up into a clearing to the south.  You hear the sounds of water from an opening to the northeast.  A dark path leads a short distance west into the woods to a large, sagging wooden structure.
Last connected Thu Mar  2 09:52:51 2006 PST from dsl081-175-009.sea1.dsl.speakeasy.net
There is new news.  Type `news all' to read all news or `news' to read just new news.
There is new activity on the following lists:
    *News                       4 new messages
    *Bug-reports                31 new messages
    *welcome-messages           3 new messages
    *core                       20 new messages
#$#mcp-negotiate-can 442696342 package: mcp-negotiate min-version: 1.0 max-version: 2.0
#$#mcp-negotiate-can 442696342 package: mcp-cord min-version: 1.0 max-version: 1.0
#$#mcp-negotiate-can 442696342 package: dns-org-mud-moo-simpleedit min-version: 1.0 max-version: 1.0
#$#mcp-negotiate-can 442696342 package: dns-com-awns-ping min-version: 1.0 max-version: 1.0
#$#mcp-negotiate-can 442696342 package: dns-com-awns-widget min-version: 1.0 max-version: 1.0
#$#mcp-negotiate-can 442696342 package: dns-com-awns-eliza min-version: 1.0 max-version: 1.0
#$#mcp-negotiate-can 442696342 package: dns-com-turtleback-browse min-version: 1.0 max-version: 1.0
#$#mcp-negotiate-can 442696342 package: dns-com-awns-visual min-version: 1.0 max-version: 1.1
#$#mcp-negotiate-can 442696342 package: dns-com-ben-tfstatus min-version: 1.0 max-version: 1.0
#$#mcp-negotiate-can 442696342 package: dns-com-awns-buddy min-version: 1.0 max-version: 1.0
#$#mcp-negotiate-can 442696342 package: dns-com-awns-status min-version: 1.0 max-version: 1.0
#$#mcp-negotiate-can 442696342 package: dns-com-att-research-twin-window min-version: 1.0 max-version: 1.0
#$#mcp-negotiate-can 442696342 package: dns-com-nowhere-hello min-version: 0.1 max-version: 0.1
#$#mcp-negotiate-can 442696342 package: dns-com-awns-rehash min-version: 1.0 max-version: 1.0
#$#mcp-negotiate-can 442696342 package: dns-com-awns-ispell min-version: 1.0 max-version: 1.0
#$#mcp-negotiate-can 442696342 package: dns-com-awns-desktop min-version: 1.0 max-version: 1.0
#$#mcp-negotiate-can 442696342 package: dns-com-edumacation-im min-version: 1.0 max-version: 1.0
#$#mcp-negotiate-can 442696342 package: dns-com-edumacation-racko min-version: 1.0 max-version: 1.0
#$#mcp-negotiate-can 442696342 package: dns-com-awns-getset min-version: 1.0 max-version: 1.0
#$#mcp-negotiate-can 442696342 package: dns-com-awns-displayurl min-version: 1.0 max-version: 1.0
#$#mcp-negotiate-can 442696342 package: dns-com-edumacation-update min-version: 1.0 max-version: 1.0
#$#mcp-negotiate-can 442696342 package: dns-com-awns-jtext min-version: 1.0 max-version: 1.0
#$#mcp-negotiate-can 442696342 package: dns-com-edumacation-song min-version: 1.0 max-version: 1.0
#$#mcp-negotiate-can 442696342 package: dns-com-nop-sqmoo-objlist min-version: 1.0 max-version: 1.0
#$#mcp-negotiate-can 442696342 package: dns-com-nop-sqmoo-verblist min-version: 1.0 max-version: 1.0
#$#mcp-negotiate-can 442696342 package: dns-com-awns-serverinfo min-version: 1.0 max-version: 1.0
#$#mcp-negotiate-can 442696342 package: dns-com-awns-timezone min-version: 1.0 max-version: 1.0
#$#mcp-negotiate-can 442696342 package: dns-com-awns-googlewhack min-version: 1.0 max-version: 1.0
#$#mcp-negotiate-can 442696342 package: dns-com-fyigm-mypkg min-version: 1.5 max-version: 2.0
#$#mcp-negotiate-can 442696342 package: dns-com-nop-sqmoo-verbtext min-version: 1.0 max-version: 1.0
#$#mcp-negotiate-can 442696342 package: dns-org-waterpoint-tellpriority min-version: 1.0 max-version: 1.0
#$#mcp-negotiate-can 442696342 package: dns-com-fyigm-lex min-version: 1.0 max-version: 1.0
#$#mcp-negotiate-end 442696342
Name           Location                      Idle Time   Doing/Idle            
----           --------                      ---------   ----------            
Janus          Airport                       9 days                            
k              Sandy beach                   3 days                            
Barry          Coastal path                  a day                             
Roy            Airport                       a day                             
Xythian        Tent                          23 hours                          
Eclipse        Airport                       19 hours    1974                  
Mordred        Airport                       17 hours                          
Jim            Airport                       13 hours                          
Rob            Orchard                       13 hours                          
Tobin          Coastal path                  6 hours                           
Clay           Chart Room                    4 hours                           
Charkes        Airport                       3 hours                           
Chris          Airport                       2 hours                           
Kyle           Airport                       2 hours                           
Ben            Airport                       2 hours                           
Wayne          Helipad                       an hour     reunions...           
Matthew        Airport                       an hour                           
Tari           Airport                       an hour     post office           
JoD            Airport                       an hour                           
keith          Airport                       an hour     socio-genetic experime
Thigpen        Airport                       an hour                           
AEnigma        Crew quarters  (USS Reliant)  an hour     lunch                 
Marn           Airport                       53 minutes                        
Becky          Airport                       23 minutes                        
pj             Airport                       8 minutes                         
Feoh           Airport                       4 minutes                         
Dea            Airport                       3 minutes                         
rgm            Airport                       2 minutes                         
Kenny          Airport                       47 seconds  Conspiracy            
stucky         Airport                       5 seconds                         
Ken            Airport                       5 seconds                         
Crag           Dense forest                  0 seconds                         

Total: 32 people, 7 of whom have been active recently.
You're on Woodpoint island and the airport is on Waterpoint island.
Heading for the the shore of the lagoon so you can get a ferry.
The Lagoon Overlook
The Path to the Lagoon
The Shore of the Lagoon
The sand is coarse and not very expansive here.  A set of thick wooden poles are set into the sand, forming sort of a makeshift dock for small boats to tie up to.  A driftwood log is here.  The afternoon sun shines brightly.  It is warm.  A path up the lagoon wall leads southeast into the mainland.  The lagoon to the west beckons you to enter.
Crag has arrived.
You're on Woodpoint island and the airport is on Waterpoint island.
Try taking a ferry from the shore of the lagoon.
-----
`HELP FERRY' NOT FOUND
======================

Sorry, but no help is available on `ferry'.  If you can't find what you're looking for, you may want to send mail (see `help mail'[1]) to *Bug-reports.

The Shore of the Lagoon
The sand is coarse and not very expansive here.  A set of thick wooden poles are set into the sand, forming sort of a makeshift dock for small boats to tie up to.  A driftwood log is here.  The afternoon sun shines brightly.  It is warm.  A path up the lagoon wall leads southeast into the mainland.  The lagoon to the west beckons you to enter.
That is not a valid command.
Azure Lagoon (in the water)
The rocky lagoon wall describes a near perfect circle, about ten feet above the water, broken only at the north, where it opens up to the ocean.  Not actually named for the color of the water, which is more a murky greenish, it's claimed to have been named for the shade bathers turn when they spend too long in the frigid waters.  A passable shore is visible to the east.  The gentle curve of Barber's Falls rumbles off to the south.
Barber's Falls
Named for the distinctive comb-like shape the water makes as it cascades over the curved lip of the lagoon, the falls rush quietly from a height of about ten feet.  The afternoon sun shines brightly.  It is warm.
That is not a valid command.
That is not a valid command.
Obvious exits: lagoon (lagoon, north, n, and azure).
Azure Lagoon (in the water)
The rocky lagoon wall describes a near perfect circle, about ten feet above the water, broken only at the north, where it opens up to the ocean.  Not actually named for the color of the water, which is more a murky greenish, it's claimed to have been named for the shade bathers turn when they spend too long in the frigid waters.  A passable shore is visible to the east.  The gentle curve of Barber's Falls rumbles off to the south.
Obvious exits: lagoon shore (lagoon shore, shore, east, and e), Barber's Falls (falls, south, s, barber's, and barber), and lagoon mouth (lagoon mouth, mouth, north, and n).
The Mouth of the Lagoon (in the water)
You are floating near the coast.  A break in the coastline directly to the south opens up into a gorgeous lagoon.  The coastline continues to the west.  In the water to the north you can see the Blueferry.
Near the Blueferry (in the water)
You're floating in the water near the blue ferry.  From this angle, you can easily see that the ferry is painted a bright, visible blue.  The deck of the ferry is much drier than here.  There is a certain feeling in the area.  A ladder leads up to the deck of the ferry.  In the water to the south you can see Woodpoint island.
The Deck
The ferry is about thirty feet long and ten feet wide at the stern. The deck is mostly empty space with handholds, as the engines are below and the bridge above has the controls.  There is a certain feeling in the area.  A ladder leads up to the bridge.  A rope ladder leads over the side and down into the water.
You climb up the ladder...
The Bridge
The bridge of the blue ferry is sparsely furnished and open to the elements.  The command console occupies the center of the bridge.  A crewman occupies the command chair behind the command console.  A ladder leads down to the passenger deck.
You see a compass, Ken's navigational unit, a crewman, two watermelon seeds, a shrimp, an ivy league pez, three fortune cookies, a peanut butter pez, an Abby treat, a cracker, two ritz bits, a ripe tomato, and a note titled "piloting the blueferry" here.
-----
There appears to be some writing on the note ...

NOTE TITLED "PILOTING THE BLUEFERRY"
====================================

You can yell commands to the crewman on the bridge.
  Commands that are useful:
     come to <heading>
     {full|half|quarter} speed
     all stop
     intercept <island or ship name>

Note the intercept code is not yet smart enough to navigate around things in the way along the intercept course, so you might need to navigate around an island.

http://waterpoint.moo.mud.org:8080/big_ocean_map is a handy tool for navigating.

This UI will improve eventually and this kind of ferry will be integrated with the 'page ferry' mechanism.

(You finish reading.)
That is not a valid command.
Crag says, "intercept waterpoint"
Couldn't sit you down.  Available seats:  the command chair (full).
Crag yells from the bridge, "come to north"
Crag says, "quarter speed"
You see no creman here.
Crag [to the crewman]: intercept waterpoint
Crag [to the crewman]: come to north
Blueferry is moving at 0.0 ft/sec at a heading of 180 deg.
Name                   Bearing  Range       Course              Time
----                   -------  -----       ------              ----
Woodpoint island       199 deg  551.7 feet
Ferry #3               345 deg  4.6 miles   0.0 ft/sec@180 deg
Ferry #5               2 deg    7.6 miles   0.0 ft/sec@349 deg
USS Reliant            357 deg  7.6 miles   0.0 ft/sec@360 deg
Folly                  351 deg  7.7 miles   0.0 ft/sec@45 deg
Black Seas Barracuda   359 deg  7.7 miles   0.0 ft/sec@354 deg
Waterpoint lighthouse  0 deg    7.8 miles
Waterpoint island      358 deg  7.8 miles
Red October            359 deg  7.8 miles   0.0 ft/sec@0 deg
Firepoint island       91 deg   8.4 miles
Flying Dutchman        91 deg   8.6 miles   0.0 ft/sec@90 deg
Firepoint Watch Tower  86 deg   9.4 miles
jetsam                 25 deg   9.7 miles   0.0 ft/sec@0 deg
Ferry #2               17 deg   10.2 miles  0.0 ft/sec@14 deg
Ferry #4               25 deg   11.2 miles  0.0 ft/sec@250 deg
Waterpoint summit      358 deg  11.2 miles
Justice                342 deg  11.5 miles  0.0 ft/sec@92 deg
dolphins               346 deg  16.5 miles  81.1 mph@262 deg
tower                  48 deg   22.9 miles
Casepoint island       3 deg    24.3 miles
jetsam                 21 deg   28.4 miles  0.0 ft/sec@0 deg
Iceberg                28 deg   31.6 miles
Icepoint island        21 deg   33.1 miles
Tinypoint island       53 deg   36.6 miles
----                   -------  -----       ------              ----
That is not a valid command.
-----
HELP ON THE BRIDGE
==================

No help found.

bridge (aka #3226 and Blueferry bridge)
Owned by Ken.
The bridge of the blue ferry is sparsely furnished and open to the elements.
You see a command console, a command chair, a wheel, a throttle, a compass, Ken's navigational unit, a lookout, a crewman, two watermelon seeds, a watermelon seed, a shrimp, a fortune cookie, an ivy league pez, three fortune cookies, a peanut butter pez, an Abby treat, a cracker, a fortune cookie, two ritz bits, a ritz bit, a ripe tomato, and a note titled "piloting the blueferry" here.
Crag is here.
Obvious verbs:
  forward/fore/f/aft/a/starboard/s/sb/port/p/st
  say/yell/shout <anything>
Crag says, "come to north"
Try this instead:  aft
You can't go that way.
You can't go that way.
Crag yells from the bridge, "come to north"
You climb down the ladder...
The Deck
The ferry is about thirty feet long and ten feet wide at the stern. The deck is mostly empty space with handholds, as the engines are below and the bridge above has the controls.  There is a certain feeling in the area.  A ladder leads up to the bridge.  A rope ladder leads over the side and down into the water.
That is not a valid command.
Near the Blueferry (in the water)
You're floating in the water near the blue ferry.  From this angle, you can easily see that the ferry is painted a bright, visible blue.  The deck of the ferry is much drier than here.  There is a certain feeling in the area.  A ladder leads up to the deck of the ferry.  In the water to the south you can see Woodpoint island.
near the blueferry (aka #2938, north of the blueferry, south of the blueferry, east of the blueferry, and west of the blueferry)
Owned by Ken.
You're floating in the water near the blue ferry.  From this angle, you can easily see that the ferry is painted a bright, visible blue.  The deck of the ferry is much drier than here.
You see some mana here.
Crag is here.
The mana is too diffuse to hold.
mana (aka #6886, manas, some manas, all manas, all the manas, all of the manas, unit of mana, and units of mana)
Owned by James.
You can't quite see it, but there's something about this spot.
Obvious verbs:
  d*rop mana
  g*et/t*ake mana
  gi*ve/ha*nd mana to <anything>
The Mouth of the Lagoon (in the water)
You are floating near the coast.  A break in the coastline directly to the south opens up into a gorgeous lagoon.  The coastline continues to the west.  In the water to the north you can see the Blueferry.
Azure Lagoon (in the water)
The rocky lagoon wall describes a near perfect circle, about ten feet above the water, broken only at the north, where it opens up to the ocean.  Not actually named for the color of the water, which is more a murky greenish, it's claimed to have been named for the shade bathers turn when they spend too long in the frigid waters.  A passable shore is visible to the east.  The gentle curve of Barber's Falls rumbles off to the south.
Azure Lagoon (aka #4117 and lagoon)
Owned by AEnigma.
The rocky lagoon wall describes a near perfect circle, about ten feet above the water, broken only at the north, where it opens up to the ocean.  Not actually named for the color of the water, which is more a murky greenish, it's claimed to have been named for the shade bathers turn when they spend too long in the frigid waters.
Crag is here.
Obvious verbs:
  splash/dunk <anything>
-----
`HELP FERRY' NOT FOUND
======================

Sorry, but no help is available on `ferry'.  If you can't find what you're looking for, you may want to send mail (see `help mail'[1]) to *Bug-reports.

Name           Location                      Last Disconnected                 
----           --------                      -----------------                 
Ferry owner    lost at sea                   Never

Total: 1 person, who has not been active recently.
Please go to a dock before trying to summon a ferry.
There is more than one place named "dock".
The Mouth of the Lagoon (in the water)
You are floating near the coast.  A break in the coastline directly to the south opens up into a gorgeous lagoon.  The coastline continues to the west.  In the water to the north you can see the Blueferry.
Please go to a dock before trying to summon a ferry.
Near the Blueferry (in the water)
You're floating in the water near the blue ferry.  From this angle, you can easily see that the ferry is painted a bright, visible blue.  The deck of the ferry is much drier than here.  There is a certain feeling in the area.  A ladder leads up to the deck of the ferry.  In the water to the south you can see Woodpoint island.
Please go to a dock before trying to summon a ferry.
The Mouth of the Lagoon (in the water)
You are floating near the coast.  A break in the coastline directly to the south opens up into a gorgeous lagoon.  The coastline continues to the west.  In the water to the north you can see the Blueferry.
Azure Lagoon (in the water)
The rocky lagoon wall describes a near perfect circle, about ten feet above the water, broken only at the north, where it opens up to the ocean.  Not actually named for the color of the water, which is more a murky greenish, it's claimed to have been named for the shade bathers turn when they spend too long in the frigid waters.  A passable shore is visible to the east.  The gentle curve of Barber's Falls rumbles off to the south.
Barber's Falls
Named for the distinctive comb-like shape the water makes as it cascades over the curved lip of the lagoon, the falls rush quietly from a height of about ten feet.  The afternoon sun shines brightly.  It is warm.
You can't go that way.
That is not a valid command.
Obvious exits: lagoon (lagoon, north, n, and azure).
Azure Lagoon (in the water)
The rocky lagoon wall describes a near perfect circle, about ten feet above the water, broken only at the north, where it opens up to the ocean.  Not actually named for the color of the water, which is more a murky greenish, it's claimed to have been named for the shade bathers turn when they spend too long in the frigid waters.  A passable shore is visible to the east.  The gentle curve of Barber's Falls rumbles off to the south.
Obvious exits: lagoon shore (lagoon shore, shore, east, and e), Barber's Falls (falls, south, s, barber's, and barber), and lagoon mouth (lagoon mouth, mouth, north, and n).
The Shore of the Lagoon
The sand is coarse and not very expansive here.  A set of thick wooden poles are set into the sand, forming sort of a makeshift dock for small boats to tie up to.  A driftwood log is here.  The afternoon sun shines brightly.  It is warm.  A path up the lagoon wall leads southeast into the mainland.  The lagoon to the west beckons you to enter.
A ferry has been summoned.  It will arrive momentarily.
Ferry #1 pulls up to the dock.
Crag sits on the driftwood log.
Crag stands up from the driftwood log.
Ferry #1
A small, light ferry with powerful engines for speeding people on their way.  There are some controls on the helm console.  Ferry #1 is docked at the shore of the lagoon.  A small pamphlet entitled "How to operate a ferry" is here.
You see an industrial-strength idler-repellent fogger and a blue police box here.
The industrial-strength idler-repellent fogger, sensing motion, activates.
That is not a valid command.
-----
There appears to be some writing on the note ...

HOW TO OPERATE A FERRY
======================

Instructions for operating ferries.  First, get to a dock and page or enter a ferry.  But, if you're reading this, you're probably in a ferry.  I'll include the instructions as they would be if you're a child of Ben's DWIM (#500) in brackets (if different) after the instruction.

>start with helm
[start]

(This starts the engines.  The engines will stop automatically when you dock.)

>launch with helm
[launch]

(This launches the ferry from where it's docked.)

>nav helm to <island>

(Example: "nav helm to icepoint".  This sets the navigation system to track to a given island.  The helm will be turned automatically.  Right now basic ferries can only go to islands.)

>throttle helm to 100

(You can set the throttle anywhere from 1-100 or so.  This will help you go beyond a snail's pace.)

While in transit, you should do "watch helm" to see your progress.  If you start heading away from the island, you've overshot.  This is especially easy with Tinypoint.  See below about adjusting your course.  Type "ignore helm" to stop watching.  You can also do "show beacons with helm".  This will show your distance and heading to the islands and other beacons.

In some cases (like going north from the Waterpoint docks), you may need to get into the open ocean by going due east (90 degrees) for a while.  (Note: north is 0, east is 90, south is 180, west is 270, and degrees in between these from 0-359 are possible.)

To do this, do "turn helm to 90" (or another appropriate direction) before setting the throttle.  It's beneficial to be watching the helm at this point.  set the throttle to 100, as above.  After a while, you can turn the helm to the bearing shown by the helm.

Final word: It's useful to be able to check your own progress on http://waterpoint.moo.mud.org:8080/ocean_map if you have web access.

Send any comments regarding this note to AEnigma (#251)

(You finish reading.)
Crag starts the engines.  The engines rumble to life.
[with the ferry controls]
Crag casts the dock lines off and pilots Ferry #1 out to sea.
That is not a valid command.
Navigation system will track Waterpoint island.
Crag sets a course for Waterpoint island.
Crag sets the throttle to 100 percent (477.3 mph).
You are now watching the helm.
[477.3 mph @ 359 degrees (north); Waterpoint island is 5.0 miles at a bearing of 359 degrees (north)]
[477.3 mph @ 359 degrees (north); Waterpoint island is 3.7 miles at a bearing of 359 degrees (north)]
[the ferry controls]
Crag sets the throttle to 30 percent (143.2 mph).
[143.2 mph @ 359 degrees (north); Waterpoint island is 3.3 miles at a bearing of 359 degrees (north)]
[the ferry controls]
Crag sets the throttle to 10 percent (47.7 mph).
[47.7 mph @ 359 degrees (north); Waterpoint island is 3.2 miles at a bearing of 359 degrees (north)]
[47.7 mph @ 359 degrees (north); Waterpoint island is 3.0 miles at a bearing of 359 degrees (north)]
[47.7 mph @ 359 degrees (north); Waterpoint island is 2.9 miles at a bearing of 359 degrees (north)]
[47.7 mph @ 359 degrees (north); Waterpoint island is 2.8 miles at a bearing of 359 degrees (north)]
[47.7 mph @ 359 degrees (north); Waterpoint island is 2.6 miles at a bearing of 359 degrees (north)]
[47.7 mph @ 359 degrees (north); Waterpoint island is 2.5 miles at a bearing of 359 degrees (north)]
[47.7 mph @ 359 degrees (north); Waterpoint island is 2.4 miles at a bearing of 359 degrees (north)]
[47.7 mph @ 359 degrees (north); Waterpoint island is 2.2 miles at a bearing of 359 degrees (north)]
[47.7 mph @ 359 degrees (north); Waterpoint island is 2.1 miles at a bearing of 359 degrees (north)]
[47.7 mph @ 359 degrees (north); Waterpoint island is 2.0 miles at a bearing of 359 degrees (north)]
[47.7 mph @ 359 degrees (north); Waterpoint island is 1.8 miles at a bearing of 359 degrees (north)]
[47.7 mph @ 359 degrees (north); Waterpoint island is 1.7 miles at a bearing of 359 degrees (north)]
[47.7 mph @ 359 degrees (north); Waterpoint island is 1.6 miles at a bearing of 359 degrees (north)]
[47.7 mph @ 359 degrees (north); Waterpoint island is 1.4 miles at a bearing of 359 degrees (north)]
[47.7 mph @ 359 degrees (north); Waterpoint island is 1.3 miles at a bearing of 359 degrees (north)]
[47.7 mph @ 359 degrees (north); Waterpoint island is 1.2 miles at a bearing of 359 degrees (north)]
[47.7 mph @ 359 degrees (north); Waterpoint island is 1.0 miles at a bearing of 359 degrees (north)]
[47.7 mph @ 359 degrees (north); Waterpoint island is 0.9 miles at a bearing of 359 degrees (north)]
[47.7 mph @ 359 degrees (north); Waterpoint island is 0.8 miles at a bearing of 359 degrees (north)]
[47.7 mph @ 359 degrees (north); Waterpoint island is 0.6 miles at a bearing of 359 degrees (north)]
[47.7 mph @ 359 degrees (north); Waterpoint island is 0.5 miles at a bearing of 359 degrees (north)]
[the ferry controls]
Crag sets the throttle to 30 percent (143.2 mph).
[143.2 mph @ 359 degrees (north); Waterpoint island is 0.3 miles at a bearing of 359 degrees (north)]
Crag pilots Ferry #1 into the harbor and docks.
Crag stops the engines.  The engines fall silent.
-----
There appears to be some writing on the note ...

HOW TO OPERATE A FERRY
======================

Instructions for operating ferries.  First, get to a dock and page or enter a ferry.  But, if you're reading this, you're probably in a ferry.  I'll include the instructions as they would be if you're a child of Ben's DWIM (#500) in brackets (if different) after the instruction.

>start with helm
[start]

(This starts the engines.  The engines will stop automatically when you dock.)

>launch with helm
[launch]

(This launches the ferry from where it's docked.)

>nav helm to <island>

(Example: "nav helm to icepoint".  This sets the navigation system to track to a given island.  The helm will be turned automatically.  Right now basic ferries can only go to islands.)

>throttle helm to 100

(You can set the throttle anywhere from 1-100 or so.  This will help you go beyond a snail's pace.)

While in transit, you should do "watch helm" to see your progress.  If you start heading away from the island, you've overshot.  This is especially easy with Tinypoint.  See below about adjusting your course.  Type "ignore helm" to stop watching.  You can also do "show beacons with helm".  This will show your distance and heading to the islands and other beacons.

In some cases (like going north from the Waterpoint docks), you may need to get into the open ocean by going due east (90 degrees) for a while.  (Note: north is 0, east is 90, south is 180, west is 270, and degrees in between these from 0-359 are possible.)

To do this, do "turn helm to 90" (or another appropriate direction) before setting the throttle.  It's beneficial to be watching the helm at this point.  set the throttle to 100, as above.  After a while, you can turn the helm to the bearing shown by the helm.

Final word: It's useful to be able to check your own progress on http://waterpoint.moo.mud.org:8080/ocean_map if you have web access.

Send any comments regarding this note to AEnigma (#251)

(You finish reading.)
Obvious exits: door of the police box (door of the police box, into the blue police box, in, in blue police box, into blue police box, inside blue police box, in police box, into police box, inside police box, in box, into box, and inside box) and out (exit, out, dock, disembark, off, and leave).
The Waterpoint Dock
The smell of saltwater is heavy in the air on the docks.   The docks themselves are weathered and held up by thick poles driven deep into the bottom of the harbor.
A small wooden sign at the end of the dock reads "page ferry to summon a ferry."
A dock bench is here.  There is a certain feeling in the area.  The afternoon sun shines brightly.  It is warm.  A ramp leads up to the harbor land.  Ferry #1 is docked here.
You see an aardvark here.
An aardvark. Not aardvarks.
aardvark (aka #3242)
Owned by Marn.
An aardvark. Not aardvarks.
Obvious verbs:
  pet aard
  @fix-commands/@fix_commands aard
  follow aard
Crag pets the aardvark.
The aardvark wurfles happily.
The Harbor
Cape Toad
The Coastal Path
Tobin is here, off in another world.
The Coastal Path
A dark wizard is here, asleep.
The Coastal Path
You see a piece of clay here.
The Coastal Path
You see fifteen of pj's armies and an Abby treat here.
The Coastal Path
You see a fishtank and a gold pezbuster here.
Barry is here, off in another world.
The Dune
You see some sand here.
Skippy is here, asleep.
The Airport
An open field with a dirt landing strip running diagonally through sea grass.  A rusty old hangar sits near the edge of the field.  A beach blanket is here.  Chris, JoD, Becky, Rob, pj, Charkes, Thigpen, and Ben are sitting on it.  A penguin named Bob is here.  Mordred, stucky, and Dea are sitting on him.  A silk buckwheat pillow is here.  Roy and Eclipse are sitting on it.  An impossibly large yet portable amphibious weatherproof couch is here.  A seagull seems to have landed here.  A dune buggy is parked here.  The box of silly hats is here celebrating Becky's birthday.  A high chair facing the wall is here.  rgm is sitting on it.  A burgundy rug is here.  Marn is sitting on it.  An innertube is here.  A red folding chair is here.  The afternoon sun shines brightly.  It is warm.  Grove Rd. disappears west into the orchard.  A dusty path leads south to a helipad.
A sign here says, `Topic: Happy Birthday to our very own Becky'
You see the URL trap, a Weather Trophy, a stock boy, a third party, a trash can, Ronald Murray, a water barrel, the Tunez DJ, a dictionary bookshelf, a homeland security monitor, the KoL boy, a can of sardines, Abby, a database meter, a 2.0.x feature list, a fetcher, and a Card Guppies game here.
pj is here.  rgm, Kenny, Ken, stucky, Dea, and Rob are daydreaming.  keith, Becky, and Mordred are dozing.  Thigpen, Marn, Matthew, Chris, Eclipse, JoD, Janus, Roy, Charkes, Kyle, and Ben are off in another world.  Tari is idling.
Crag has arrived.
A well crafted sign on a polished brass stand.
The topic sign says, `Happy Birthday to our very own Becky'
Name           Location                      Idle Time   Doing/Idle            
----           --------                      ---------   ----------            
Becky          Airport                       41 minutes                        

Total: 1 person, who has not been active recently.
Crag [to Becky]: Happy birthday!
Crag . o O ( hooray for topic signs! )
Crag . o O ( and birthdays )
Crag sits on the beach blanket between Chris and JoD.
rgm whispers to Crag, "yesterday's sign"
stucky pulls the top sheet off the topic sign, revealing `http://www.last.fm/group/Waterpoint'.
He looks like he just awoke, save for his eyes, which remain bright.  Black curly hair sits disheveled atop his head.  He hasn't shaved in a couple of days.  rgm wears a long white terry-cloth robe which looks comfortable.  He is not your fucking khakis.
He is awake and looks alert.
Carrying:
 a whistle                               two robot dog whistles
 a World Trade Center                    a pez dispenser with a llama head
 a kerchief                              a zyzzyva
 a humorous coffee mug                   a plate of quantum surprise skeleton
 a 2004 Red Sox lighter                  two shrimps
 2 gold pieces                           three marshmallows
 a cigar                                 a raven
 a wheelbarrow                           a baseball
 much                                    a waffle iron
 an OMG                                  a hermit crab carrying the mana
Crag whispers to rgm, "oops, heh"
There is new activity on the following lists:
    *News                       4 new messages
    *Bug-reports                31 new messages
    *welcome-messages           3 new messages
    *core                       20 new messages
*Review-Group, *RV, *RG  
    The review group. See the review policy linked off of the waterpoint home page.
*Review-Requests, *rvr, *requests  
    Send your review requests here!
*comics, **comics  [Public]
    A mailing list for Alex to talk about comics.
*Topography, *Geography, *theme  [Public]
    Discussion of the natural and man-made features of the island, its weather, its wildlife, its natural resources and its surrounding water.
*Boston, *bos  [Public]
    Announcements of interest to people in the Boston area (and those willing to come to the Boston area).
*mp3, *mp3s  [Public]
    For trading MP3 audio files for REVIEW PURPOSES ONLY!
*animes  [Public]
    A mailing list to discuss Japanese animation.
*macintosh, *mac, *macin, *tosh  [Public]
    Macintoshes and their ilk.
*recipes, *baking, *cooking, *food  [Public]
    A list for discussing the art of cooking.
*movies  [Public]
    A list for discussion of movies, new or old.
*games  [Public]
    Announcements and discussions of games.
*OOWP, *phrases, *pyohowp  [Public]
    Only On Waterpoint. Stuff you won't hear anywhere else.
*twin  [Public]
    Forum for TWin discussion. See also http://waterpoint.moo.mud.org/twin/
*feature-announce  [Public]
    For announcing feature objects, useful VR objects, utilities, and anything else that people would find useful, but might not know about otherwise.
    This list is intended to be inclusive rather than exclusive. If it's useful (or even just interesting), tell us about it.
*XMPP, *jabber  [Public]
    A mailing list to talk about Jabber/XMPP on MOO.
-------- end of @subscribe -------
Name           Location                      Idle Time   Doing/Idle            
----           --------                      ---------   ----------            
Janus          Airport                       9 days                            
k              Sandy beach                   3 days                            
Barry          Coastal path                  a day                             
Roy            Airport                       a day                             
Xythian        Tent                          23 hours                          
Eclipse        Airport                       20 hours    1974                  
Tobin          Coastal path                  6 hours                           
Clay           Chart Room                    4 hours                           
Charkes        Airport                       3 hours                           
Chris          Airport                       3 hours                           
Kyle           Airport                       2 hours                           
Ben            Airport                       2 hours                           
Wayne          Helipad                       2 hours     reunions...           
Matthew        Airport                       an hour                           
Tari           Airport                       an hour     post office           
JoD            Airport                       an hour                           
Thigpen        Airport                       an hour                           
Marn           Airport                       an hour                           
Becky          Airport                       46 minutes                        
AEnigma        Crew quarters  (USS Reliant)  18 minutes                        
Mordred        Airport                       17 minutes                        
Rob            Airport                       13 minutes                        
Ken            Airport                       13 minutes                        
Dea            Airport                       12 minutes                        
Kenny          Airport                       10 minutes  Conspiracy            
Jim            Helipad                       6 minutes                         
pj             Airport                       4 minutes                         
stucky         Airport                       3 minutes                         
keith          Airport                       3 minutes   socio-genetic experime
rgm            Airport                       3 minutes                         
Crag           Airport                       0 seconds                         

Total: 31 people, 5 of whom have been active recently.
Airport --- 3 minutes idle, 23 people (18 idle):
    Topic: http://www.last.fm/group/Waterpoint
     Crag, rgm, keith, stucky, and pj (and Kenny, Dea, Ken, Rob, Mordred,
     Becky, Marn, Thigpen, JoD, Tari, Matthew, Ben, Kyle, Chris, Charkes,
     Eclipse, Roy, and Janus)
Helipad --- 7 minutes idle, 2 people (both idle):
     (Jim and Wayne)
2 parties found.
A well crafted sign on a polished brass stand.
The topic sign says, `http://www.last.fm/group/Waterpoint'
Jim arrives from the helipad.
Jim sits on the burgundy rug beside Marn.
Airport --- 51 seconds idle, 24 people (22 idle):
    Topic: http://www.last.fm/group/Waterpoint
     Crag and Jim (and rgm, keith, stucky, pj, Kenny, Dea, Ken, Rob, Mordred,
     Becky, Marn, Thigpen, JoD, Tari, Matthew, Ben, Kyle, Chris, Charkes,
     Eclipse, Roy, and Janus)
1 party found.
topic sign (aka #6797 and sign)
Owned by topic-owner.
A well crafted sign on a polished brass stand.
Obvious verbs:
  write <anything> on topic
  cover topic with <anything>
  uncover topic
  remove/kick topic
  carve <anything> on topic
  shake topic
  g*et/t*ake topic
  d*rop topic
  gi*ve/ha*nd topic to <anything>
*Review-Group, *RV, *RG  
    The review group. See the review policy linked off of the waterpoint home page.
*Review-Requests, *rvr, *requests  
    Send your review requests here!
*comics, **comics  [Public]
    A mailing list for Alex to talk about comics.
*Topography, *Geography, *theme  [Public]
    Discussion of the natural and man-made features of the island, its weather, its wildlife, its natural resources and its surrounding water.
*Boston, *bos  [Public]
    Announcements of interest to people in the Boston area (and those willing to come to the Boston area).
*mp3, *mp3s  [Public]
    For trading MP3 audio files for REVIEW PURPOSES ONLY!
*animes  [Public]
    A mailing list to discuss Japanese animation.
*macintosh, *mac, *macin, *tosh  [Public]
    Macintoshes and their ilk.
*recipes, *baking, *cooking, *food  [Public]
    A list for discussing the art of cooking.
*movies  [Public]
    A list for discussion of movies, new or old.
*games  [Public]
    Announcements and discussions of games.
*OOWP, *phrases, *pyohowp  [Public]
    Only On Waterpoint. Stuff you won't hear anywhere else.
*twin  [Public]
    Forum for TWin discussion. See also http://waterpoint.moo.mud.org/twin/
*feature-announce  [Public]
    For announcing feature objects, useful VR objects, utilities, and anything else that people would find useful, but might not know about otherwise.
    This list is intended to be inclusive rather than exclusive. If it's useful (or even just interesting), tell us about it.
*XMPP, *jabber  [Public]
    A mailing list to talk about Jabber/XMPP on MOO.
-------- end of @subscribe -------
You are subscribed to the following lists:
    *News                       4 new messages
    *Bug-reports                31 new messages
    *welcome-messages           3 new messages
    *Seattle                    0 new messages
    *core                       20 new messages
    *server-hacking             0 new messages
    *help                       0 new messages
    *db-issues                  0 new messages
    *Documentation              0 new messages
    *PERIL-Ideas                0 new messages
    *building-issues            0 new messages
There is new activity on the following lists:
    *News                       4 new messages
    *Bug-reports                31 new messages
    *welcome-messages           3 new messages
    *core                       20 new messages
Message 60 on *News:
Date:     Mon Oct 31 10:59:16 2005 PST
From:     Ken
To:       *News
Subject:  Waterpoint bounce

I had to restart the server to fix a confused NAME_LOOKUP process.  It kept dying and restarting and it was doing no work at all for us.  We were entirely bereft of DNS lookups.   DNS was working normally on the machine.  Rather than continue in that aggrieved state, I restarted the server.  It seems to have fixed it.

It maaay have been related to some Debian library upgrades, though those upgrades were made many days ago...
--------------------------
Message 61 on *News:
Date:     Sun Dec 18 01:21:17 2005 PST
From:     Xythian
To:       *News
Subject:  SMTP woes

Speakeasy's increasingly militant SMTP servers have forced me to set up an SMTP server locally for outgoing mail.

The world of SMTP today is not the same one that $smtp was written in.   Setting your envelope-from to whatever-you-feel-like is no longer acceptable to most SMTP servers.   I've modified $player's netmail forwarding verb to use Reply-To rather than setting From.   I've also changed our mail_domain to "waterpoint.org" though there's no valid MX for waterpoint.org (and no listener) so it's still "not-a.valid-address" from the standpoint of delivering mail but now (I hope) upstream mailers will still deliver the messages addressed from user@waterpoint.org addresses.

Outbound mail, particularly @mail-o +netmail mail, has been broken in some form for a long time now and hopefully these changes will address the problem.
--------------------------
Message 62 on *News:
Date:     Wed Jul  5 13:55:45 2006 PDT
From:     Ben
To:       *News
Subject:  Power Outage

After an uptime just over two years, my server went down today because of a power outage.  Waterpoint probably would have been back sooner, but as you can imagine, when you don't reboot in two years you accumulate some configuration changes that aren't reflected in startup files.  In this case, my default route...
--------------------------
Message 63 on *News:
Date:     Fri Jul 21 01:40:10 2006 PDT
From:     Ben
To:       *News
Subject:  More Power Outages

Well, a second outage today wiped out the news posting about the outage an hour ago.  They're building a new subdivision next to me, so I assume they screwed something up.
--------------------------
Message 801 on *Bug-reports:
Date:     Tue Sep  6 14:00:10 2005 PDT
From:     stucky
To:       James and *Bug-reports
Subject:  Re: $string_utils:nn

>  >  number dnamec_and_number, line 6:  Verb not found
>
>  $string_utils:nn takes an object, not a list.

Verb not found is kind of an odd error to throw, in that case.
--------------------------
Kenny says, "hm, HP received the highest overall performance score for new application development and stand-alone applications."
Crag [to Kenny]: From whom?
Kenny says, "Gartner?>"
Crag says, "Hm"
rgm says, "anyone know anything about high availability / transparent failover for j2ee apps / postgres on linux?"
Crag says, "Gartner should have asked me about Service Desk"
Message 802 on *Bug-reports:
Date:     Tue Sep  6 22:44:15 2005 PDT
From:     Ben
To:       *Bug-reports

It's dealing with the unfortunate circumstance that :nn is both a method you can call with an argument and also a verb that's on all objects that you can call with no argument to get that object's :nn.  #1011 might help you though
--------------------------
Message 803 on *Bug-reports:
Date:     Wed Sep  7 05:29:43 2005 PDT
From:     James
To:       Ben and *Bug-reports

>  Date:     Tue Sep  6 22:44:15 2005 PDT
>  From:     Ben
>
>  It's dealing with the unfortunate circumstance that :nn is both a
>  method you can call with an argument and also a verb that's on all
>  objects that you can call with no argument to get that object's
>  :nn.  #1011 might help you though

Well actually ... that's the situation for the OTHER aliases of that verb, but :nn is actually only on $string_utils.  Hence the E_VERBNF from pass().
--------------------------
Message 804 on *Bug-reports:
Date:     Tue Sep 13 13:35:48 2005 PDT
From:     stucky
To:       *Bug-reports
Subject:  @lmod

>@lmod #2929
Weather Feature (#2929) [ readable ]
  Child of Generic Feature Object (#65).
  Location sea shell (#3100).
#3751:@lmod, line 91:  Permission denied
.. called from #6:my_huh (this == #1935), line 31
.. called from #50:do_huh, line 11
.. called from #1:huh (this == #2067), line 10
(End of traceback)
--------------------------
Message 805 on *Bug-reports:
Date:     Tue Sep 13 13:41:39 2005 PDT
From:     Ben
To:       *Bug-reports

I solved that problem by wizzing it.
--------------------------
Message 806 on *Bug-reports:
Date:     Sun Sep 25 16:15:26 2005 PDT
From:     Charkes
To:       *Bug-reports

Ragnar's webspace has moved.  Could someone please change #1974.base_url to http://steak.place.org/dougo/ ?  Thank you.
--------------------------
Message 807 on *Bug-reports:
Date:     Sun Sep 25 22:39:57 2005 PDT
From:     Ben
To:       *Bug-reports

Ok, done.  Someone test it!
--------------------------
Kenny [to rgm]: It never works right.
Message 808 on *Bug-reports:
Date:     Mon Oct  3 07:03:31 2005 PDT
From:     Marn
To:       *Bug-reports

Charkes is over quota by 32,638 bytes, mostly? due to his being granted the peg solitaire game, and so the block of clay isn't functioning.
--------------------------
Kenny says, "Hope that answered your question!"
Message 809 on *Bug-reports:
Date:     Mon Oct  3 09:53:45 2005 PDT
From:     Ben
To:       *Bug-reports

Fixed by @quota Charkes...
--------------------------
Message 810 on *Bug-reports:
Date:     Tue Oct  4 09:36:23 2005 PDT
From:     Marn
To:       *Bug-reports

`help statements' does not document at least: try/catch, try/finally, continue, break, and the "WHILE name ( expr ) ..." construct
--------------------------
Message 811 on *Bug-reports:
Date:     Thu Oct  6 10:07:24 2005 PDT
From:     Marn
To:       *Bug-reports
Subject:  server upgrade broke Lexicon via waifs and $player:gag_p

$player:gag_p:
...
  for x in (callers())
    if (valid(x[1]) && !is_player(x[1]))

The server upgrade causes waifs to appear in callers(), resulting in $player:gag_p dying due to its assumption that callers()[*][1] are OBJs.

(This causes Lexicon announcements to fail, since each game is a waif.)

One could argue that valid() and is_player() should accept waifs, returning 1 and 0, respectively.
--------------------------
Message 812 on *Bug-reports:
Date:     Thu Oct  6 14:44:42 2005 PDT
From:     Kenny
To:       *Bug-reports
Subject:  $you.help_text

It looks like the $you.help_text you get when you type `help $you' gets accidentally pronoun subbed.
--------------------------
Message 813 on *Bug-reports:
Date:     Thu Oct  6 15:23:57 2005 PDT
From:     Marn
To:       *Bug-reports

$code_utils:_format_traceback_frame, line 16, should be modified to produce useful output when 'this' is a waif.
--------------------------
Message 814 on *Bug-reports:
Date:     Thu Oct  6 15:25:26 2005 PDT
From:     Charkes
To:       *Bug-reports

With all these changes, what happens when someone runs a brand new JHCore with a non-waif server?
--------------------------
rgm [to Kenny]: thanks.  we'll just mark it as a $50,000 line item then we prolly won't have to do it
Message 815 on *Bug-reports:
Date:     Thu Oct  6 15:27:52 2005 PDT
From:     Marn
To:       *Bug-reports
Subject:  Re: non-waif server

>  From:     Charkes
>  With all these changes, what happens when someone runs a brand new
>  JHCore with a non-waif server?

The gag_p bug is just a `... ! E_TYPE', so it's harmless. The traceback bug can be handles by just replacing 'ths' with 'toliteral(ths)', which is similarly waif-independent.

This is something to keep in mind, though.
--------------------------
Message 816 on *Bug-reports:
Date:     Fri Oct  7 19:20:02 2005 PDT
From:     Kenny
To:       *Bug-reports
Subject:  @recreate and current object

@recreate doesn't set current object like @create does.
--------------------------
Message 817 on *Bug-reports:
Date:     Sat Oct  8 08:04:47 2005 PDT
From:     Kenny
To:       *Bug-reports
Subject:  match() and substitute()

match() seems to do the wrong thing in this case: ;substitute("%1, %2, %3, %5", match("jabber.la.gs", "
%(%([
@/]+%)@%)?%([A-Za-z0-9%.-]+%.[A-Za-z]+%)%(/%(.*%)%)?$"))
--------------------------
Message 818 on *Bug-reports:
Date:     Sat Oct  8 08:06:14 2005 PDT
From:     Kenny
To:       *Bug-reports
Subject:  match() and substitute() continued

Here's the bug: %2 shouldn't be set considering how %1 is not set.
--------------------------
Chris blinka
Message 819 on *Bug-reports:
Date:     Fri Oct 21 12:35:03 2005 PDT
From:     Marn
To:       *Bug-reports

`help <abbreviated feature verb, e.g. @lexw or @jaddb>' does not find the verb where using the full name does
--------------------------
Message 821 on *Bug-reports:
Date:     Thu Jan 12 20:00:18 2006 PST
From:     Marn
To:       *Bug-reports, James, and Rob

It appears that #2683:fission will usually not work, because the implementations of :split (#2683, #2813) expect caller_perms() to own this. The obvious trivial solution is to set_task_perms()ify :fission.
--------------------------
=> #2683 (better generic single-item collectable)
Message 822 on *Bug-reports:
Date:     Wed Jan 25 20:08:30 2006 PST
From:     James
To:       Marn, *Bug-reports, and Rob

>  Date:     Thu Jan 12 20:00:18 2006 PST
>  From:     Marn
>  To:       *Bug-reports, James, and Rob
>
>  It appears that #2683:fission will usually not work, because the
>  implementations of :split (#2683, #2813) expect caller_perms() to
>  own this. The obvious trivial solution is to set_task_perms()ify
>  :fission.

i encountered this problem long ago, er, which is basically why i never got around to changing the leaves of the indiscrete collectable to be owned by the generic owner instead of by me.  (i had to copy an insane amount of code to even get them being owned by me and not Rob ...)  set_task_perms(), btw, is not a trivial solution because it always requires security auditing.
--------------------------
Message 823 on *Bug-reports:
Date:     Mon Feb 20 14:07:23 2006 PST
From:     Marn
To:       *Bug-reports

An object can mess with @sweep if its :sweep_msg raises an error, and hide itself (and any later-arriving objects) from @sweep by suspending indefinitely.

Also, perhaps @sweep should check for event_emote verbs, and possibly other event verbs.
--------------------------
Message 824 on *Bug-reports:
Date:     Tue Feb 21 09:27:11 2006 PST
From:     Charkes
To:       *Bug-reports
Subject:  help system stuff

> ?steering
`HELP STEERING' AMBIGUOUS
[...]
`help Steering Committee'[1]                    `help steering-committee'[2]
> pick 1
`HELP STEERING' AMBIGUOUS
[repeat]

Also, the steering-committee document references JHM but not really in a buggy way.
--------------------------
Message 825 on *Bug-reports:
Date:     Sat Apr 15 19:33:01 2006 PDT
From:     Rob
To:       Craig and *Bug-reports
Subject:  dictionary traceback

>lookup persnickety in dict
#83:open, line 12:  Invalid argument
.. called from #88:get_now, line 11
.. called from #88:get get_cache, line 14
.. called from #333:lookup*! webster*! (this == #568), line 22
(End of traceback)
--------------------------
Message 826 on *Bug-reports:
Date:     Mon Apr 17 13:03:16 2006 PDT
From:     Marn
To:       *Bug-reports
Subject:  #1959:send_headers should encode_binary(line[2])

#1959:send_headers should encode_binary(line[2]). Or possibly the mistake is somewhere else, but the result of the current situation is that the tinyurl handler (#3968) attempting to send a redirect to a URL containing "~" crashes, producing a bad HTTP request.

$ curl -i 'http://waterpoint.org:8080/tu?f5b*+1'
HTTP/1.0 302 Moved Temporarily
MIME-Version: 1.0
Date: Mon, 17 Apr 2006 12:41:49 PDT
Server: JHCore/1.0 httpd/1.0
Content-Type: text/html
<H1>Server Error</H1>
<HR><PRE>
#4460:notify (this == #6521), line 5: Invalid argument
... called from #1959:send_headers (this == #6521), line 6
... called from #1959:respond_redirect_temp (this == #6521), line 3
... called from #2018:respond_redirect_temp (this == #6521), line 6
... called from #3968:.text, line 5
... called from #522:http_GET (this == #3968), line 8
... called from #2018:GET (this == #6521), line 40
... called from #1959:handle_command (this == #6521), line 12
... called from #1959:connected (this == #6521), line 8
(End of traceback)
</PRE>
</BODY></HTML>
--------------------------
Message 827 on *Bug-reports:
Date:     Sat Apr 22 15:49:51 2006 PDT
From:     Marn
To:       *Bug-reports

#522:name makes some web pages awkward to work with. It may not provide a usefully distinct value, and does not reflect how to refer to the object.

> l #5377
You see nothing special.
Contents:
  <%= $http:escape_for_html($local.geometry:web_maptitle(rmode)) %>
  controls
  Ocean Map Tools
  <%= $http:escape_for_html(this.geometry:web_maptitle(rmode)) %>
  <%= $http:escape_for_html(this.geometry:web_maptitle(rmode)) %>
  a map_moodata

> @contents #5377
The ocean_maps (#5377) contains <%= $http:escape_for_html($local.geometry:web_maptitle(rmode)) %> (#5501), controls (#4459), Ocean Map Tools (#5710), <%= $http:escape_for_html(this.geometry:web_maptitle(rmode)) %> (#6072), <%= $http:escape_for_html(this.geometry:web_maptitle(rmode)) %> (#3350), and a map_moodata (#6098).

More specifically, I wanted to edit my SVG map object, which I knew was in there but I didn't recall its exact name or objnum. I see no reasonable way to find out the proper names of the objects, whether for recognizing or editing them.
--------------------------
Message 828 on *Bug-reports:
Date:     Thu Jun  8 10:18:52 2006 PDT
From:     Kenny
To:       *Bug-reports

$dict doesn't define a :values verb. I have to use $dict:plist(target)[2] to get the effect that :values would provide.
--------------------------
Message 829 on *Bug-reports:
Date:     Thu Jun  8 13:53:14 2006 PDT
From:     Xeric
To:       *Bug-reports

ok, try that.
--------------------------
Message 830 on *Bug-reports:
Date:     Fri Jun 23 08:29:22 2006 PDT
From:     James
To:       *Bug-reports
Subject:  dictionary

>lookup sieze
[in the reference book]
#83:open, line 12:  Invalid argument
... called from #88:get_now, line 11
... called from #88:get get_cache, line 14
... called from #333:lookup*! webster*! (this == #4688), line 22
... called from #6:last_huh (this == #316), line 51
... called from #50:do_huh, line 17
... called from #1:huh (this == #1323), line 10
(End of traceback)
--------------------------
Message 831 on *Bug-reports:
Date:     Fri Jul 21 01:39:14 2006 PDT
From:     Ben
To:       *Bug-reports
Subject:  on login after restart

#0:user_created user_connected, line 9:  Resource limit exceeded
--------------------------
Message 832 on *Bug-reports:
Date:     Fri Jul 21 01:40:49 2006 PDT
From:     Xeric
To:       *Bug-reports

$startup still isn't.  but maybe that error I got will shed some light
--------------------------
Message 250 on *welcome-messages:
Date:     Wed Feb 15 15:23:33 2006 PST
From:     Ken
To:       *welcome-messages

Waterpoint: false genericity

--------------------------
Message 251 on *welcome-messages:
Date:     Sat Apr 22 15:48:19 2006 PDT
From:     Barry
To:       *welcome-messages

Waterpoint: something 3000

--------------------------
Message 252 on *welcome-messages:
Date:     Wed Jul 12 20:38:16 2006 PDT
From:     Barry
To:       *welcome-messages

Waterpoint: TOO LATE, LOSER

--------------------------
Message 130 on *core:
Date:     Wed Jul 20 08:51:27 2005 PDT
From:     Ben
To:       *core

Is this thing on???  I wrote a #522:name that extracts the <title> from the document since most of them end up with names like "default".  Of course now some of them end up with names like <%= $http:escape_for_html...  Comments?
--------------------------
Kenny [to rgm]: I was on a project where they had like 3 levels of failover and millions of lines of code and when one failed, it caused the other to fail, etc
Message 131 on *core:
Date:     Sun Jul 24 22:15:01 2005 PDT
From:     James
To:       *core
Subject:  extra viewpoint dependence

Okay, so all day i've been hacking on pronoun_sub and naming.  The upshot of this is, when $local.comp_utils.test is set to a true value, instead of getting messages like:

  James eyes James's FAQ and himself warily.
  Xplat kicks James's FAQ in the neck.

and for James:

  You eye James's FAQ and yourself warily.
  Xplat kicks James's FAQ in the neck.

you see something more like:

  James eyes his FAQ and himself warily.
  Xplat kicks James's FAQ in the neck.

and for James:

  You eye your FAQ and yourself warily.
  Xplat kicks your FAQ in the neck.

This only applies to messages printed through $local.comp_utils:act.  I could have applied it to $you:say_action too, but I didn't want the inevitable problems to cause too much breakage.

This change involved a massive amount of new machinery:

  * A way of attaching an object to handle a particular name flag for a particular object (or tree thereof):
    - $local.name_builder
    - $local.name_builder:modname
    - $name_utils:find_builders
    - $name_utils.dummy_builder
  * A parallel set of pronoun_sub and naming verbs to discover the set of viewpoints that need to be respected:
    - $pronoun_sub:mentioned
    - $pronoun_sub:mentioned_do
    - $pronoun_sub:mentioned_segment
    - $pronoun_sub:mentioned_* (parallelling :sub_*)
    - *:mentioned_* (for sub_special)
    - #1:name_mentioned
    - $local.name_builder:mentioned
  * A parallel set of pronoun_sub, naming and other verbs to do pronoun-subbing in a viewpoint-dependent context:
    - $string_utils:pronoun_sub_for
    - $pronoun_sub:do_for
    - $pronoun_sub:do_segment_for
    - $pronoun_sub:sub4_*
    - *:sub4_* (for sub_special)
    - #1:name_for
    - $local.name_builder:for_pre
    - $local.name_builder:for_post
    - #1:p[sopqr][cu]?_for
    - $none:p[sopqr][cu]?_for
    - #1:"verb_sub_for noun_sub_for"
    - $gender:"verb_sub_for_proxy noun_sub_for_proxy"
  * Some utilities for handling the contexts:
    - $language:mention
  * Some particular name builders
    - $namebuilder_i
    - $namebuilder_d
    - #1:"namebuilder_i namebuilder_d"
  * Glue to hook all this up for testing
    - $local.comp_utils:say
    - $local.comp_utils.test
    - changes to $local.comp_utils:act

Needless to say, with so much new stuff added in a hurry there are bound to be a lot of bugs.  Particularly in need of work are $pronoun_sub:mentioned_special and :sub4_special -- they should fall back nicely like :name_for does if the verbs they're looking for don't exist.  However, there could be anything including blatantly obvious tracebacks in any of the parts I haven't exercised yet.

For now I've left .test set to 0 since I won't be active to handle bugs for quite some time, but if somewiz would like to play with the new stuff in the meantime, filfre.
--------------------------
Message 132 on *core:
Date:     Mon Jul 25 09:08:44 2005 PDT
From:     James
To:       *core
Subject:  pronoun madness update

After some more updates to handle legacy *_sub and sub_* overrides without the new supporting machinery, and a few more tests and fixes, I've decided to leave #3334.test set to 1 for now.  I did, however, add a setter verb so that anyone can set it to 0 if they're having problems.  (Only the usual suspects can set it to 1.)

So if you're having traceback problems, {list} problems, etc and suspect the new stuff, report the bug and do ``@set #3334.test to 0''.  If you're not a programmer ... well, hopefully you can find one.  They're pretty common.
--------------------------
Kenny says, "CORBA hell"
Message 133 on *core:
Date:     Wed Sep 14 16:48:20 2005 PDT
From:     James
To:       *core
Subject:  $note:examine_key

Changed this to print the encryption key as well as the regular key, when appropriate.
--------------------------
Kenny has eight aliases: Kenny, keny, kenn, pain, suffering, million_dollars, Gwailo, and kR.
Message 134 on *core:
Date:     Thu Sep 29 14:56:13 2005 PDT
From:     Clay
To:       *core
Subject:  extraction bug

Core extraction failed:
#3497:dcd_2 (this == #6914), line 86: Could not access network utils (#83).trusted.
.. called from #3497:dcd_1 (this == #6914), line 72
.. called from #3459:http_GET, line 10
(End of traceback)
--------------------------
rgm says, "geeze, all these postgres replication projects are in beta"
Message 135 on *core:
Date:     Thu Sep 29 15:13:54 2005 PDT
From:     Ben
To:       *core

SHould be fixed.
--------------------------
Kenny [to rgm]: Which J2EE container do you use?
rgm says, "jboss 3.2.8"
Message 136 on *core:
Date:     Thu Sep 29 15:34:02 2005 PDT
From:     Clay
To:       *core

i'm still getting the same traceback...
--------------------------
Kenny [to rgm]: Oh, we haven't used JBoss's clustering
Message 137 on *core:
Date:     Thu Sep 29 16:58:32 2005 PDT
From:     Ben
To:       Clay and *core

 This time for sure!!
--------------------------
Message 138 on *core:
Date:     Fri Sep 30 06:34:30 2005 PDT
From:     Clay
To:       *core

yep, all better. thanks!
--------------------------
Message 139 on *core:
Date:     Wed Nov 16 17:29:58 2005 PST
From:     Ben
To:       *core

$cord:init_for_module line 4: raises E_PERMS (instead of E_PERM)
--------------------------
Message 140 on *core:
Date:     Wed Nov 16 17:31:15 2005 PST
From:     Ben
To:       *core

#1943:closed line 3 is too cute for its own good
--------------------------
Last modified Wed Nov 16 17:44:32 2005 PST by Xythian (#199).
#1943:"closed" this none this
 1:  "Usage:  :closed()";
 2:  "";
 3:  if (caller != $cord)
 4:    raise(E_PERM);
 5:  endif
 6:  $cord:closed(this);
 7:  "version: 1.0 Fox Wed Jul  5 17:58:16 1995 EDT";
Message 141 on *core:
Date:     Wed Nov 16 17:33:56 2005 PST
From:     Ben
To:       *core

$smtp:sendmail line 41 probably means to deref headers, not subject
--------------------------
Message 142 on *core:
Date:     Wed Nov 16 17:37:00 2005 PST
From:     Ben
To:       *core

#1683:_emit_property_set line 16 uses undef'd vars o, p
--------------------------
Message 143 on *core:
Date:     Wed Nov 16 17:39:22 2005 PST
From:     Ben
To:       *core

$admin_group:@return line 27 uses `who' probably  means `whom' ahahaha like anyone has EVER RUN THIS EVER
--------------------------
Kenny says, "They actually wrote their own failover code by synchronizing state"
-----
$ADMIN_GROUP:@RETURN
====================

@return [<admin>] to <admin group>

Add <admin> back to the active list of members of <admin group>.  <admin> defaults to the player.

Message 144 on *core:
Date:     Wed Nov 16 17:41:15 2005 PST
From:     Ben
To:       *core

$who_options:show_who_listing line 65 uses undef'd `datad', `widthsd'
--------------------------
Message 145 on *core:
Date:     Wed Nov 16 17:46:51 2005 PST
From:     Ben
To:       *core

$english:name_list_for forgets to initialize `context', also the verbdoc says it's :name_list
--------------------------
Message 146 on *core:
Date:     Wed Nov 16 17:48:36 2005 PST
From:     Ben
To:       *core

$pronoun_sub:do_segment_for line 22 returns undef'd `context' and verbdoc claims it's :do_segment
--------------------------
rgm [to Kenny]: do you have to use special APIs and change code, or can you just point server1 -> server2 with a line in an xML config file
rgm suspects code changes needed
Kenny [to rgm]: You have to use special code for JBoss from what I can remember
rgm says, "then i have no idea what to do on the network layer"
Kenny | http://www.onjava.com/pub/a/onjava/2003/08/20/jboss_clustering.html
rgm [to Kenny]: awesome, that's even our version (sorta)
Kenny [to rgm]: I think I have some of this in my JBoss books at home
Ben says, "zot."
Obvious exits: west (west, w, and orchard), dune (dune, southeast, and se), south (south, s, helipad, and heliport), and mouth of the water barrel (mouth of the water barrel, opening of the water barrel, top of the water barrel, into water barrel, in, in water barrel, inside water barrel, in barrel, into barrel, inside barrel, mouth of barrel, opening of barrel, and top of barrel).
Crag wanders
Crag stands up from the beach blanket.
You head west through the orchard.
The Orchard
Row after row of dead trees are all that remain of this once thriving orchard.  An apple tree grows here.  The afternoon sun shines brightly.  It is warm.  Grove Rd. wanders east and west.  A small brown foot path wanders north.
You see Nakai here.
Once a gleeman, Nakai has grown tired of travel, and has come to this island to share stories with and serve drinks to the people here.  His thick beard is said to give him strength in battle, but it is probably just another tale, as he enjoys to tell tales of his past.  Around his neck he wears a ruby necklace, but he hesitates to tell tales of it.
He is idling.
Obvious exits: west (west and w), east (east and e), and North (North and n).
You walk north, ducking beneath dead trees branches, hiking up and down over irrigation berms.
The Apple Tree
You are near the trunk of a single apple tree brimming with fruit.  Several white bee boxes are sitting here.  A branch, full of fruit, hangs lower than the others.  There is a certain feeling in the area.  The afternoon sun shines brightly.  It is warm.  A small brown foot path disappears south into the orchard.  A clearing opens up to the north.  Branches hang over your head.
You can hear the hum-buzz of ten thousand bees.
You see no "bees" here.
Obvious exits: south (south and s), north (north and n), and climb (climb, up, and u).
You walk north, ducking beneath some low branches.
The Meadow
You are in a wide meadow, overflowing with sea grass and tangerine colored wild flowers. Tall sprays of purple haze sway in the wind around your waist.  There is a certain feeling in the area.  The afternoon sun shines brightly.  It is warm.  The orchard is south.  The meadow continues northeast, up the side of a rolling foothill. You can see some buildings nestled midway to the top.  A dense thicket of trees and bushes borders the meadow on the west and north sides.
You see a small wicker wastebasket here.
The air smells of freshly cut hay.
There's nowhere to sit.
You are empty-handed.
Objects owned by Crag (from #0 to #7051):
  6K  #289 Crag                      *[meadow]
-- 1 object.  Total bytes: 6,231.---------------------------------------------
Obvious exits: south (south and s), northeast (northeast, ne, up, and u), and thicket (thicket, woods, forest, trees, bushes, north, n, northwest, nw, west, w, southwest, and sw).
The thicket is too dense to enter.
The root class(#1) has 189 kids.
Mail Distribution Center (#42)   Generic Mail Recipient (#41)   generic gender object (#64)   Generic Help Database (#30)   Limbo (#15)   Guest Log (#12)   Player Last_huh Verbs (#11)   Login Commands (#10)   Generic Option Package (#60)   Generic Feature Object (#65)   Error Generator (#66)   pronoun substitution (#69)   Generic Pronoun_sub Translator (#73)   Tag Root (#92)   Address Root (#112)   Out Of Band Commands (#117)   link dispatcher tag (#127)   generic admin group (#168)   generic event dispatching object (#113)   generic utilities (#151)   generic event handler (#137)   everything (#144)   all (#105)   generic thing (#5)   here (#187)   administration (#176)   server options (#196)   name-subbing dummy object (#136)   startup handler (#198)   checkpointer (#181)   syslog (#190)   Generic BigList Resident (#75)   http (#88)   New Generic Database (#79)   generic source or sink (#195)   sizer (#231)   Object #282 (#282)   churning depths (#460)   dependent tracking object (#464)   Object #600 (#600)   RNET connection (#534)   generic environment (#699)   generic weather (#705)   object #777 (#777)   Object #800 (#800)   sea gull (#768)   junk (#673)   generic brain (#826)   generic command processor (#868)   object #888 (#888)   Object #900 (#900)   NNTP News Boy (#911)   waterpoint time (#412)   sun (#606)   Nobody's RPG Doll (#808)   generic command processor (#956)   state (#756)   Prototype Conceptual Dependency Object (#989)   generic listener (#1084)   old verbs (#1213)   generic disease (#1498)   idle watcher (#1079)   generic property farm (#1747)   generic source or sink (#1484)   Object #1800 (#1800)   Scuba Diving Db (#1267)   Generic SRPG V2 Doll (#1826)   generic weather (#1450)   MCP 2.1 (#1912)   MCP 2.1 parser (#1942)   generic MCP 2.1 session (#1721)   MCP package registry (#1784)   Cord Dispatcher (#1944)   generic cord stub (#1943)   generic message dispatch object (#1922)   party utils (#1913)   Object #1976 (#1976)   Object #1998 (#1998)   Object #2001 (#2001)   Object #1997 (#1997)   generic event class (#1960)   generic listener (#1987)   generic daemon service handler (#1807)   HTML utility (#1473)   ocean visibility (#2045)   idle thing (#2213)   Frand's text generator (#1938)   NERF Treasure Repository (#1972)   generic treasure autospawn (#2312)   stars master (#2323)   SMTP (#1897)   Object #484 (#484)   form (#1889)   Generic TWin form (#2367)   generic TWin parser component (#2296)   generic TWin connection (#2351)   generic widget event type (#2097)   XML parser (#1729)   Generic Deck (#2503)   Generic Cardgame Ruleset (#2321)   Waterpoint character creation (#1927)   generic posted file (#2465)   generic deferred character request (#2530)   Generic Cardgame Strategy Module (#1386)   NNTP Daemon (#2471)   POP3 Daemon (#2314)   POP3 Worker (#652)   Card Counter (#2252)   astrolabe (#2480)   root waif (#302)   fake ocean (#2230)   MOO ASP compiler (#2659)   generic object something (#2809)   generic file (#2646)   XML-RPC (#2834)   generic player group (#2542)   generic network connection wrapper (#2643)   systran (#2824)   FTP (#2878)   generic connection wrapper (#2514)   generic puppet (#2800)   generic security (#2919)   generic weight and/or measure (#3347)   Object #3456 (#3456)   Object #3450 (#3450)   generic SASL authentication mechanism (#3593)   generic core extraction dummy (#3497)   face (#3694)   clothes (#3634)   CVS utilities (#3826)   generic coordinate patch (#3851)   generic brain module (#4005)   Object #283 (#283)   Ocean Error Property Farm (#4245)   s-expression parser (#3507)   generic bitstream (#4631)   TWin Forms Tank (#4664)   Hex Stuff (#4746)   generic transient object (#4521)   #3993 (#3993)   Object #4800 (#4800)   Object #810 (#810)   Object #4601 (#4601)   localtest (#3608)   lagsample (#4942)   Object #3332 (#3332)   Object #5000 (#5000)   Object #3373 (#3373)   Object #5065 (#5065)   Object #2444 (#2444)   Object #3434 (#3434)   welcome (#5106)   generic M-channel (#3255)   Fract state (#5333)   generic workspace (#5418)   Object #5560 (#5560)   Object #5555 (#5555)   Object #5335 (#5335)   Object #5533 (#5533)   Object #3553 (#3553)   Object #3535 (#3535)   moo-code parser (#3594)   foo (#3523)   tuest (#1501)   chasing combat robot brain (#4998)   generic communication form (#5649)   Object #5353 (#5353)   Object #3353 (#3353)   Object #5355 (#5355)   Object #5535 (#5535)   Object #5553 (#5553)   stationary combat robot brain (#5609)   cowardly robot brain (#5350)   generic Lexicon game registry (#5597)   Object #4656 (#4656)   recursive-descent parser (#5618)   SIMP server (#5424)   room coordinate database (#2069)   Object #6100 (#6100)   data type class (#6174)   d10stats (#3745)   nephilim (#5817)   sla (#6080)   diceprobs (#3730)   oceandata (#6054)   generic core extraction dummy (#6005)   materials namespace (#5025)   generic name builder (#6123)   generic public namespace (#1666)
Object #5335 (#5335) [ readable ]
  Owned by James (#316).
  Child of root class (#1).
  Location tin of magic numbers (#5784).
-------------------------------- finished ---------------------------------
Object #5335 (#5335) [ readable ]
  Owned by James (#316).
  Child of root class (#1).
  Location tin of magic numbers (#5784).
-------------------------------- finished ---------------------------------
;verbs(#5335) => {}
Obvious exits: south (south and s), northeast (northeast, ne, up, and u), and thicket (thicket, woods, forest, trees, bushes, north, n, northwest, nw, west, w, southwest, and sw).
You hike through the tall grass, making your way up a cow path.
High Meadow
You are standing in a high meadow. Tall grass bends flat beneath fierce wind.  A 200 year old barn stands formidable against all odds. A sod-covered ramp slopes up to wagon doors in the side of the barn.  The wind continues to whip your hair around.  The wind parts wild wheat around a small bench.  There is a certain feeling in the area.  The afternoon sun shines brightly.  It is warm.  A cow path wanders southwest into the lower meadow.  Wagon doors to the barn are cracked open.  A small white farmhouse sits off to the west.
The wind is stiff.
You haven't specified which "barn" you mean.
Obvious exits: southwest (southwest and sw), wagon doors (wagon doors, doors, door, north, n, up, u, and barn), and west (west, w, house, and farmhouse).
You walk up the wide ramp, slide the wagon door open, and squeeze inside.
The Barn
You are standing in the wagon hold.  A broken down wagon has one axle cradled on field stone.  There is a certain feeling in the area.  The wagon door to high meadow is cracked open.  A wooden ladder climbs up through a small opening.  A livestock doorway leads north.
Your eyes take a moment to adjust.
You climb up the small ladder.
Threshing Floor
Weathered planks form a generous floor, and wind comes whistling in through cracks in the walls.  Hay is heaped up into a giant mound.  There is a certain feeling in the area.  A wooden ladder pokes up through a hole in the floor.  Another ladder leads up to a loft.
The air is sweet from alfalfa.
You climb up the thin ladder.
The Hayloft
The upper reaches of the barn. Bales of hay are neatly stacked for the winter.  There is a certain feeling in the area.  When you look below, you can see a huge mound of hay on the threshing floor.
A small mouse scurries into the hay.
Obvious exits: jump (jump, down, and d).
You *JUMP* WHHHHEEEEEE!!!!!!! PHLAM! WHOOOSH!
Threshing Floor
Weathered planks form a generous floor, and wind comes whistling in through cracks in the walls.  Hay is heaped up into a giant mound.  There is a certain feeling in the area.  A wooden ladder pokes up through a hole in the floor.  Another ladder leads up to a loft.
Hay dust settles all around you.
Obvious exits: ladder (ladder, down, and d) and up (up and u).
You grab hold of the ladder, swing around, and carefully climb down.
The Barn
You are standing in the wagon hold.  A broken down wagon has one axle cradled on field stone.  There is a certain feeling in the area.  The wagon door to high meadow is cracked open.  A wooden ladder climbs up through a small opening.  A livestock doorway leads north.
You dust some hay off your clothes.
Obvious exits: wagon door (wagon door, door, south, s, and out), up (up and u), and north (north and n).
You walk north through the barn.
The Painting Studio
A small room that has been converted into a painting studio.  There is a certain feeling in the area.  A small doorway leads south.
The air smells of paint thinner.
Obvious exits: south (south, s, and out).
You walk south through the doorway.
The Barn
You are standing in the wagon hold.  A broken down wagon has one axle cradled on field stone.  There is a certain feeling in the area.  The wagon door to high meadow is cracked open.  A wooden ladder climbs up through a small opening.  A livestock doorway leads north.
The air is musty.
You slide the wagon door open, walk outside, and down the sod wagon ramp.
High Meadow
You are standing in a high meadow. Tall grass bends flat beneath fierce wind.  A 200 year old barn stands formidable against all odds. A sod-covered ramp slopes up to wagon doors in the side of the barn.  The wind continues to whip your hair around.  The wind parts wild wheat around a small bench.  There is a certain feeling in the area.  The afternoon sun shines brightly.  It is warm.  A cow path wanders southwest into the lower meadow.  Wagon doors to the barn are cracked open.  A small white farmhouse sits off to the west.
A stiff breeze nearly topples you over.
Obvious exits: southwest (southwest and sw), wagon doors (wagon doors, doors, door, north, n, up, u, and barn), and west (west, w, house, and farmhouse).
You make your way down the cow path. The tall grasses of the meadow rise up to greet you.
The Meadow
You are in a wide meadow, overflowing with sea grass and tangerine colored wild flowers. Tall sprays of purple haze sway in the wind around your waist.  There is a certain feeling in the area.  The afternoon sun shines brightly.  It is warm.  The orchard is south.  The meadow continues northeast, up the side of a rolling foothill. You can see some buildings nestled midway to the top.  A dense thicket of trees and bushes borders the meadow on the west and north sides.
You see a small wicker wastebasket here.
The air is sweet.
A handsome wicker trash receptacle.
It is empty.
The thicket is too dense to enter.
=> {#42, #41, #64, #30, #15, #12, #11, #10, #60, #65, #66, #69, #73, #92, #112, #117, #127, #168, #113, #151, #137, #144, #105, #5, #187, #176, #196, #136, #198, #181, #190, #75, #88, #79, #195, #231, #282, #460, #464, #600, #534, #699, #705, #777, #800, #768, #673, #826, #868, #888, #900, #911, #412, #606, #808, #956, #756, #989, #1084, #1213, #1498, #1079, #1747, #1484, #1800, #1267, #1826, #1450, #1912, #1942, #1721, #1784, #1944, #1943, #1922, #1913, #1976, #1998, #2001, #1997, #1960, #1987, #1807, #1473, #2045, #2213, #1938, #1972, #2312, #2323, #1897, #484, #1889, #2367, #2296, #2351, #2097, #1729, #2503, #2321, #1927, #2465, #2530, #1386, #2471, #2314, #652, #2252, #2480, #302, #2230, #2659, #2809, #2646, #2834, #2542, #2643, #2824, #2878, #2514, #2800, #2919, #3347, #3456, #3450, #3593, #3497, #3694, #3634, #3826, #3851, #4005, #283, #4245, #3507, #4631, #4664, #4746, #4521, #3993, #4800, #810, #4601, #3608, #4942, #3332, #5000, #3373, #5065, #2444, #3434, #5106, #3255, #5333, #5418, #5560, #5555, #5335, #5533, #3553, #3535, #3594, #3523, #1501, #4998, #5649, #5353, #3353, #5355, #5535, #5553, #5609, #5350, #5597, #4656, #5618, #5424, #2069, #6100, #6174, #3745, #5817, #6080, #3730, #6054, #6005, #5025, #6123, #1666}
-----
`HELP FERTILE' NOT FOUND
========================

Sorry, but no help is available on `fertile'.  If you can't find what you're looking for, you may want to send mail (see `help mail'[1]) to *Bug-reports.

root class (#1) [ readable fertile ]
  Owned by Core-Wizard (#191).
  Child of ** none ** (#-1).
-------------------------------- finished ---------------------------------
-----
`HELP GPS' NOT FOUND
====================

Sorry, but no help is available on `gps'.  If you can't find what you're looking for, you may want to send mail (see `help mail'[1]) to *Bug-reports.

Crag (#289) [ (player) programmer ]
  Child of generic programmer (#52).
  Location meadow (#1106).
-------------------------------- finished ---------------------------------
The verb :! is on   Crag(#289)--generic player(#6)
    #6:!*                       unknown hacker (#35) r d    any any any
-------------------------------- finished ---------------------------------
The verb :$ is nowhere to be found.
The verb :% is on   Thinking Feature(#68)
The verb :^ is nowhere to be found.
Verb addition not permitted:  Quota exceeded.
Crag has a total building quota of 0 bytes.
His total usage was 6,231 as of Fri Aug  4 01:00:01 2006 PDT.
Crag is over quota by 6,231 bytes.
Name           Location                      Idle Time   Doing/Idle            
----           --------                      ---------   ----------            
Xythian        Tent                          a day                             

Total: 1 person, who has not been active recently.
-----
`HELP QUOTA' AMBIGUOUS
======================

Sorry, the topic `quota' is ambiguous.  I don't know which of the following topics you mean:

`help @quota'[1]        `help quota-policy'[2]  

-----
QUOTA POLICY
============

To get more quota, ask Ken.   He'll probably give it to you.  Quota is usually given out in pretty big chunks (except the intial "now you're a programmer" grant, which is usually 25k or 50k).  

Crag (#289) [ (player) programmer ]
  Child of generic programmer (#52).
  Location meadow (#1106).
-------------------------------- finished ---------------------------------
Name           Location                      Idle Time   Doing/Idle            
----           --------                      ---------   ----------            
Ken            Airport                       an hour                           

Total: 1 person, who has not been active recently.
Message sent to Ken.
(from the tent ) Xythian | Crag's quota set to 150000.
The packrat comes down the slope to the northeast.
The packrat scurries south into the orchard.
You page Xythian, "Thanks!"
Crag has a total building quota of 150,000 bytes.
His total usage was 6,231 as of Fri Aug  4 01:00:01 2006 PDT.
Crag may create up to 143,769 more bytes of objects, properties, or verbs.
Objects owned by Crag (from #0 to #7051):
  6K  #289 Crag                      *[meadow]
-- 1 object.  Total bytes: 6,231.---------------------------------------------
Verb added [1] (0).
Object #289 does not define that verb, but its ancestor #4 does.
#4:"@kids" any none none
 1:  "'@kids <obj>' - List the children of an object. This is handy for seeing whether anybody's actually using your carefully-wrought public objects.";
 2:  thing = player:my_match_object(dobjstr);
 3:  if (!$command_utils:object_match_failed(thing, dobjstr))
 4:    kids = children(thing);
 5:    if (kids)
 6:      player:notify(tostr(thing:dnamec(), "(", thing, ") has ", length(kids), " kid", length(kids) == 1 ? "" | "s", "."));
 7:      player:notify(tostr($string_utils:names_of(kids)));
 8:    else
 9:      player:notify(tostr(thing:dnamec(), "(", thing, ") has no kids."));
10:    endif
11:  endif
#$#dns-org-mud-moo-simpleedit-content 442696342 reference: "#289:^kids any none none" name: "MOO verb: #289:^kids any none none" type: moo-code content*: "" _data-tag: 5627879231445290
#$#: 5627879231445290
root class (#1) [ readable fertile ]
  Owned by Core-Wizard (#191).
  Child of ** none ** (#-1).
.key                        ** unreadable **
.aliases                 Core-Wizard (#191)    r c    {"root class"}
.description             Core-Wizard (#191)    r c    ""
.visible                 unknown hack (#35)    r      1
.integrate_room_msg      Core-Wizard (#191)    r c    ""
.integrate_player_msg    Core-Wizard (#191)    r c    ""
.integrate_container_msg Core-Wizard (#191)    r c    ""
.unique                  Core-Wizard (#191)    r c    1
.proper                  Core-Wizard (#191)    r c    0
.integrate_in            unknown hack (#35)    r      {#150}
.handlers                unknown hack (#35)    r      {}
.number                  unknown hack (#35)    r      1
.offered                 Core-Wizard (#191)    r      #-1
.object_size             Quota (#192)          r      {72155, 1154678400}
.review_marks            Xonny (#202)          r      {}
.review_history             ** unreadable **
-------------------------------- finished ---------------------------------
#-1:Input to EVAL, line 4:  Property not found
... called from built-in function eval()
... called from #52:eval_cmd_string (this == #289), line 21
... called from #52:eval eval-d eval+d (this == #289), line 16
(End of traceback)
-----
`HELP CORE' AMBIGUOUS
=====================

Sorry, the topic `core' is ambiguous.  I don't know which of the following topics you mean:

`help core-copyright'[1]                        `help core-index'[2]
`help core-license'[3]  

-----
CORE UTILITY HELP TOPICS
========================

$biglist_utils[1]       $building_utils[2]      $code_utils[3]
$command_utils[4]       $english[5]             $english_utils[6]
$exit[7]                $gender_utils[8]        $generic_db[9]
$generic_editor[10]     $generic_help[11]       $generic_options[12]
$help[13]               $housekeeper[14]        $integration_utils[15]
$list_utils[16]         $lock_utils[17]         $login[18]
$macmoose_utils[19]     $mail_agent[20]         $mail_recipient[21]
$math_utils[22]         $name_utils[23]         $no_one[24]
$object_utils[25]       $openable_container[26]
$parse_utils[27]        $perm_utils[28]         $player_db[29]
$quota_utils[30]        $room[31]               $room_matching_utils[32]
$seq_utils[33]          $set_utils[34]          $string_utils[35]
$time_utils[36]         $trig_utils[37]         $walking_utils[38]
$who_utils[39]          $wiz_utils[40]          core-index[41]
mail-format[42]         mail-recipient[43]      mail-resolve[44]
mail-system[45]         MR-access[46]           MR-naming[47]
MR-reading[48]          MR-searching[49]        MR-sequences[50]
MR-subscribing[51]      MR-writing[52]          object-matching[53]
receiving-mail[54]      sending-mail[55]        

-----
CORE UTILITY HELP TOPICS
========================

$biglist_utils[1]       $building_utils[2]      $code_utils[3]
$command_utils[4]       $english[5]             $english_utils[6]
$exit[7]                $gender_utils[8]        $generic_db[9]
$generic_editor[10]     $generic_help[11]       $generic_options[12]
$help[13]               $housekeeper[14]        $integration_utils[15]
$list_utils[16]         $lock_utils[17]         $login[18]
$macmoose_utils[19]     $mail_agent[20]         $mail_recipient[21]
$math_utils[22]         $name_utils[23]         $no_one[24]
$object_utils[25]       $openable_container[26]
$parse_utils[27]        $perm_utils[28]         $player_db[29]
$quota_utils[30]        $room[31]               $room_matching_utils[32]
$seq_utils[33]          $set_utils[34]          $string_utils[35]
$time_utils[36]         $trig_utils[37]         $walking_utils[38]
$who_utils[39]          $wiz_utils[40]          core-index[41]
mail-format[42]         mail-recipient[43]      mail-resolve[44]
mail-system[45]         MR-access[46]           MR-naming[47]
MR-reading[48]          MR-searching[49]        MR-sequences[50]
MR-subscribing[51]      MR-writing[52]          object-matching[53]
receiving-mail[54]      sending-mail[55]        

=> #1 (root class)
Object #289 does not define that verb, but its ancestor #4 does.
#4:"@kids" any none none
 1:  "'@kids <obj>' - List the children of an object. This is handy for seeing whether anybody's actually using your carefully-wrought public objects.";
 2:  thing = player:my_match_object(dobjstr);
 3:  if (!$command_utils:object_match_failed(thing, dobjstr))
 4:    kids = children(thing);
 5:    if (kids)
 6:      player:notify(tostr(thing:dnamec(), "(", thing, ") has ", length(kids), " kid", length(kids) == 1 ? "" | "s", "."));
 7:      player:notify(tostr($string_utils:names_of(kids)));
 8:    else
 9:      player:notify(tostr(thing:dnamec(), "(", thing, ") has no kids."));
10:    endif
11:  endif
System Object (#0) [ readable ]
  Owned by Core-Wizard (#191).
  Child of builtin function definitions (#158).
  Location generic room (#3).
.builder                 Core-Wizard (#191)    r c    #4
.login                   Core-Wizard (#191)    r      #10
.last_huh                Core-Wizard (#191)    r      #11
.guest_log               Core-Wizard (#191)    r      #12
.last_restart_time       Core-Wizard (#191)    r c    1153471118
.biglist                 Core-Wizard (#191)    r c    #13
.big_mail_recipient      Core-Wizard (#191)    r c    #14
.limbo                   Core-Wizard (#191)    r c    #15
.registration_db         Core-Wizard (#191)    r c    #16
.new_player_log          Core-Wizard (#191)    r c    #17
.verb_help               Core-Wizard (#191)    r c    #20
.core_help               Core-Wizard (#191)    r c    #21
.prog_help               Core-Wizard (#191)    r c    #22
.wiz_help                Core-Wizard (#191)    r c    #23
.shutdown_task           Core-Wizard (#191)    r c    E_NONE
.wiz_utils               Core-Wizard (#191)    r c    #24
.site_db                 Core-Wizard (#191)    r c    #25
.math_utils              Core-Wizard (#191)    r c    #26
.set_utils               Core-Wizard (#191)    r c    #27
.builtin_function_help   Core-Wizard (#191)    r c    #28
.new_prog_log            Core-Wizard (#191)    r c    #29
.generic_help            Core-Wizard (#191)    r c    #30
.guest                   Core-Wizard (#191)    r      #31
.seq_utils               Core-Wizard (#191)    r c    #32
.quota_log               Core-Wizard (#191)    r c    #33
.you                     unknown hack (#35)    r      #34
.hacker                  Core-Wizard (#191)    r c    #35
.generic_db              Core-Wizard (#191)    r c    #79
.shutdown_message        Core-Wizard (#191)    r c    ""
.shutdown_time           Core-Wizard (#191)    r c    1144034169
.no_one                  Core-Wizard (#191)    r      #36
.player_db               Core-Wizard (#191)    r      #37
.player_class            Core-Wizard (#191)    r c    #6
.gender_utils            Core-Wizard (#191)    r      #38
.trig_utils              Core-Wizard (#191)    r c    #26
.time_utils              Core-Wizard (#191)    r c    #39
.editor_help             Core-Wizard (#191)    r c    #40
.mail_recipient          Core-Wizard (#191)    r c    #41
.mail_agent              Core-Wizard (#191)    r c    #42
.mail_editor             Core-Wizard (#191)    r c    #43
.note_editor             Core-Wizard (#191)    r c    #44
.verb_editor             Core-Wizard (#191)    r c    #45
.generic_editor          Core-Wizard (#191)    r c    #46
.object_utils            Core-Wizard (#191)    r c    #47
.lock_utils              Core-Wizard (#191)    r c    #48
.gripe_recipients        Core-Wizard (#191)    r c    {#2}
.dump_interval           Core-Wizard (#191)    r c    18000
.list_utils              Core-Wizard (#191)    r c    #49
.command_utils           Core-Wizard (#191)    r c    #50
.player                  Core-Wizard (#191)    r c    #6
.wiz                     Core-Wizard (#191)    r c    #51
.prog                    Core-Wizard (#191)    r c    #52
.code_utils              Core-Wizard (#191)    r c    #53
.help                    Core-Wizard (#191)    r c    #54
.nothing                 Core-Wizard (#191)    r c    #-1
.failed_match            Core-Wizard (#191)    r c    #-3
.ambiguous_match         Core-Wizard (#191)    r c    #-2
.perm_utils              Core-Wizard (#191)    r c    #134
.building_utils          Core-Wizard (#191)    r c    #19
.string_utils            Core-Wizard (#191)    r c    #18
.news                    Core-Wizard (#191)    r c    #146
.note                    Core-Wizard (#191)    r c    #9
.container               Core-Wizard (#191)    r c    #130
.thing                   Core-Wizard (#191)    r c    #5
.exit                    Core-Wizard (#191)    r c    #7
.room                    Core-Wizard (#191)    r c    #3
.player_start            Core-Wizard (#191)    r c    #70
.root_class              Core-Wizard (#191)    r c    #1
.recycler                Core-Wizard (#191)    r c    #55
.garbage                 Core-Wizard (#191)    r c    #56
.mail_options            Core-Wizard (#191)    r c    #57
.edit_options            Core-Wizard (#191)    r c    #58
.display_options         Core-Wizard (#191)    r c    #59
.generic_options         Core-Wizard (#191)    r c    #60
.maxint                  Core-Wizard (#191)    r c    2147483647
.minint                  Core-Wizard (#191)    r c    -2147483648
.list_options            Core-Wizard (#191)    r c    #61
.error                   Core-Wizard (#191)    r c    #66
.newt_log                Core-Wizard (#191)    r c    #109
.toad_log                Core-Wizard (#191)    r c    #62
.site_log                Core-Wizard (#191)    r c    #62
.housekeeper             Core-Wizard (#191)    r c    #63
.feature                 Core-Wizard (#191)    r      #65
.pronoun_sub             Core-Wizard (#191)    r      #69
.they                    Core-Wizard (#191)    r      #71
.login_watcher           Core-Wizard (#191)    r c    #84
.english                 Core-Wizard (#191)    r      #72
.language                Core-Wizard (#191)    r      #72
.integration_utils       Core-Wizard (#191)    r c    #74
.network                 Core-Wizard (#191)    r c    #83
.country_db              Core-Wizard (#191)    r      #95
.jtext                   Core-Wizard (#191)    r      #93
.list_editor             Core-Wizard (#191)    r      #108
.feature_help            Core-Wizard (#191)    r      #102
.jaddress                Core-Wizard (#191)    r      #114
.misc_options            Core-Wizard (#191)    r      #115
.client_options          Core-Wizard (#191)    r      #120
.out_of_band             Core-Wizard (#191)    r c    #117
.building_options        Core-Wizard (#191)    r c    #126
.it                      Core-Wizard (#191)    r c    #159
.nobody                  Core-Wizard (#191)    r c    #36
.furniture               Core-Wizard (#191)    r c    #81
.sittable                Core-Wizard (#191)    r c    #80
.I                       Core-Wizard (#191)    r c    #165
.everything              Core-Wizard (#191)    r c    #144
.all                     Core-Wizard (#191)    r c    #105
.nowhere                 Core-Wizard (#191)    r c    #-1
.admin_group             Core-Wizard (#191)    r c    #168
.steering_committee      Core-Wizard (#191)    r c    #142
.db_group                Core-Wizard (#191)    r c    #153
.unix_group              Core-Wizard (#191)    r c    #152
.community_group         Core-Wizard (#191)    r c    #170
.tech_group              Core-Wizard (#191)    r c    #169
.admin_mail_recipient    Core-Wizard (#191)    r c    #110
.registrar               Core-Wizard (#191)    r c    #111
.event_dispatcher        Core-Wizard (#191)    r c    #113
.prog_group              Core-Wizard (#191)    r c    #128
.openable_container      Core-Wizard (#191)    r c    #8
.containing_object       Core-Wizard (#191)    r c    #150
.utils                   Core-Wizard (#191)    r c    #151
.biglist_utils           Core-Wizard (#191)    r c    #13
.english_utils           Core-Wizard (#191)    r c    #72
.boot_log                Core-Wizard (#191)    r c    #86
.help_editor             Core-Wizard (#191)    r      #177
.object_help             Core-Wizard (#191)    r c    #179
.tester                  Core-Wizard (#191)    r      #100
.failed_help             Core-Wizard (#191)    r      #131
.who_options             Core-Wizard (#191)    r c    #90
.who_utils               Core-Wizard (#191)    r c    #90
.event_handler           Core-Wizard (#191)    r c    #137
.eval_options            Core-Wizard (#191)    r c    #141
.he                      Core-Wizard (#191)    r c    #161
.she                     Core-Wizard (#191)    r c    #162
.e                       Core-Wizard (#191)    r c    #163
.we                      Core-Wizard (#191)    r c    #164
.plural_you              Core-Wizard (#191)    r c    #166
.either                  Core-Wizard (#191)    r c    #167
.splat                   Core-Wizard (#191)    r c    #171
.gender                  Core-Wizard (#191)    r c    #64
.neuter                  Core-Wizard (#191)    r c    #159
.egotistical             Core-Wizard (#191)    r c    #165
.plural                  Core-Wizard (#191)    r c    #71
.royal                   Core-Wizard (#191)    r c    #164
.male                    Core-Wizard (#191)    r c    #161
.female                  Core-Wizard (#191)    r c    #162
.Spivak                  Core-Wizard (#191)    r c    #163
.second                  Core-Wizard (#191)    r c    #34
.second_plural           Core-Wizard (#191)    r c    #166
.singular                Core-Wizard (#191)    r c    #159
.none                    Core-Wizard (#191)    r c    #172
.topic                   Core-Wizard (#191)    r c    #185
.builder_help            Core-Wizard (#191)    r      #160
.name_utils              Core-Wizard (#191)    r      #183
.guest_help              Core-Wizard (#191)    r      #174
.parse_utils             Core-Wizard (#191)    r      #121
.admin                   Core-Wizard (#191)    r      #176
.core_wizard             Core-Wizard (#191)    r      #191
.first_wizard            Core-Wizard (#191)    r c    #2
.door                    Core-Wizard (#191)    r      #125
.ftp                     Core-Wizard (#191)    r c    #3953
.__core_init_phase       Core-Wizard (#191)    r      0
.quota_utils             Core-Wizard (#191)    r c    #180
.window                  Core-Wizard (#191)    r c    #186
.server_options          Core-Wizard (#191)    r      #196
.walking_utils           Core-Wizard (#191)    r      #189
.maxfloat                Core-Wizard (#191)    r c    1.79769313486231e+308
.checkpointer            Core-Wizard (#191)    r      #181
.startup                 Core-Wizard (#191)    r c    #198
.syslog                  Core-Wizard (#191)    r      #190
.core_extraction_time    Core-Wizard (#191)    r      845851679
.generic_biglist_home    Core-Wizard (#191)    r      #75
.http                    Core-Wizard (#191)    r c    #88
.module                  Core-Wizard (#191)    r      #1716
.review_group            Xonny (#202)          r      #230
.property_farm           Xythian (#199)        r      #1747
.modules                 Xythian (#199)        r      #1743
.smtp                    Core-Wizard (#191)    r c    #1897
.cord                    Core-Wizard (#191)    r c    #1944
.mcp                     Core-Wizard (#191)    r c    #1912
.parse_options           Core-Wizard (#191)    r c    #674
.ftp_client              Core-Wizard (#191)    r c    #2878
.local                   Ben (#269)            r c    #848
.building_group          Xythian (#199)        r      #813
.TWin                    Ken (#200)            r      #2285
.waif                    Xeric (#999)          r      #302
.macmoose_utils          Xythian (#199)        r      #1902
.documentation_group     Xythian (#199)        r      #2901
.first_restart_time      Xythian (#199)        r      845958877
.room_matching_utils     Xythian (#199)        r      #444
.policy_help             Xythian (#199)        r      #4536
.admin_help              Core-Wizard (#191)    r c    #4723
.jhcore_help             Core-Wizard (#191)    r c    #4715
.dict                    Core-Wizard (#191)    r c    #3610
.namebuilder_i           Core-Wizard (#191)    r c    #2709
.namebuilder_d           Core-Wizard (#191)    r c    #5081
-------------------------------- finished ---------------------------------
System Object (#0) [ readable ]
  Owned by Core-Wizard (#191).
  Child of builtin function definitions (#158).
  Location generic room (#3).
    #0:do_login_command         Core-Wizard (#191)   rxd    this none this
    #0:server_started           Core-Wizard (#191)   rxd    this none this
    #0:core_objects(old)        unknown hacker (#35) rx     this none this
    #0:init_for_core            Core-Wizard (#191)   rxd    this none this
    #0:do_out_of_band_command   Core-Wizard (#191)   rxd    this none this
    #0:"user_created user_connected" Core-Wizard (#191) rxd this none this
    #0:"user_disconnected user_client_disconnected" Core-Wizard (#191) rxd this none this
    #0:user_reconnected         Core-Wizard (#191)   rxd    this none this
    #0:nominate_for_core(old)   unknown hacker (#35) rx     this none this
    #0:checkpoint_finished      Core-Wizard (#191)   rxd    this none this
    #0:checkpoint_started       Core-Wizard (#191)   rxd    this none this
    #0:do_command               Core-Wizard (#191)   rxd    this none this
    #0:connection_site_from_player(old) Xonny (#202) r d    this none this
    #0:do_out_of_band_command(core) Core-Wizard (#191) rxd  this none this
-------------------------------- finished ---------------------------------
#0:"core_objects(old)" this none this
 1:  saved = {#0};
 2:  for p in (properties(#0))
 3:    v = #0.(p);
 4:    if (typeof(v) == OBJ && valid(v))
 5:      saved = setadd(saved, v);
 6:    endif
 7:  endfor
 8:  for o in (saved)
 9:    p = parent(o);
10:    while (valid(p))
11:      saved = setadd(saved, p);
12:      p = parent(p);
13:    endwhile
14:  endfor
15:  return $list_utils:sort(saved);
System Object (#0) [ readable ]
  Owned by Core-Wizard (#191).
  Child of builtin function definitions (#158).
  Location generic room (#3).
-------------------------------- finished ---------------------------------
root class (#1) [ readable fertile ]
  Owned by Core-Wizard (#191).
  Child of ** none ** (#-1).
-------------------------------- finished ---------------------------------
#-1:Input to EVAL, line 4:  Property not found
... called from built-in function eval()
... called from #52:eval_cmd_string (this == #289), line 21
... called from #52:eval eval-d eval+d (this == #289), line 16
(End of traceback)
-----
`HELP FERTILE' NOT FOUND
========================

Sorry, but no help is available on `fertile'.  If you can't find what you're looking for, you may want to send mail (see `help mail'[1]) to *Bug-reports.

-----
`HELP CREATE' AMBIGUOUS
=======================

Sorry, the topic `create' is ambiguous.  I don't know which of the following topics you mean:

`help @create'[1]       `help create()'[2]      

-----
@CREATE
=======

Syntax:  @create <parent-object> named "<names>"

The main command for creating objects other than rooms and exits (for them, see `help @dig'[1]; it's much more convenient).

The first argument specifies the 'parent' of the new object: loosely speaking, the 'kind' of object you're creating.  You can use a `class name' such as $note, $letter, $thing, or $container; you can also specify a parent object by object number or just by name, if it's nearby.

The <names> are given in the same format as in the @rename command:

        <name-and-alias>,<alias>,...,<alias> [preferred]
        <name>:<alias>,...,<alias>           [not preferred]

See `help @rename' for a discussion of the difference between a name and an alias.
See `help naming' for a discussion of names and articles.

-----
`HELP @FERTILE' NOT FOUND
=========================

Sorry, but no help is available on `@fertile'.  If you can't find what you're looking for, you may want to send mail (see `help mail'[1]) to *Bug-reports.

-----
`HELP @SET' AMBIGUOUS
=====================

Sorry, the topic `@set' is ambiguous.  I don't know which of the following topics you mean:

`help set_connection_option()'[1]               `help set_player_flag()'[2]
`help set_property_info()'[3]                   `help set_task_perms()'[4]
`help set_verb_args()'[5]                       `help set_verb_code()'[6]
`help set_verb_info()'[7]                       `help setadd()'[8]
`help @setenv'[9]       `help @sethome'[10]     `help setremove()'[11]

-----
`HELP OBJECT' AMBIGUOUS
=======================

Sorry, the topic `object' is ambiguous.  I don't know which of the following topics you mean:

`help object-matching'[1]                       `help object_bytes()'[2]
`help objective'[3]     

-----
PROGRAMMING
===========

MOO contains a rich programming language for the creation of interesting rooms, exits, and other objects.  Help is available on the following topics concerning programming in MOO:

language[1]
      a brief reference for the syntax and semantics of the MOO language
tasks[2]
      a brief description of MOO tasks and their resource limits

@property[3]
      adding a property to an object
@rmproperty[4]
      removing a property from an object

@verb[5]
      adding a verb to an object
@rmverb[6]
      removing a verb from an object
@args[7]
      changing the syntax of a verb
@copy[8]
      copying a verb from one object to another

@program[9]
      entering the program for a verb
@list[10]
      printing a listing of the program for a verb
@edit[11]
      editing verb code
eval[12]
      executing MOO statements and expressions without writing a verb

@show[13]
      looking at all the details of an object, a property, or a verb
@display[14]
      a different way to look at those details

@parents[15]
      listing the ancestors of an object
@kids[16]
      listing the children of an object
@chparent[17]
      changing the parent of an object

@contents[18]
      listing the contents of an object
@chmod[19]
      changing the permissions on an object, a property, or a verb
@rename[20]
      changing the name of a verb or object
@currentobject[21]
      specify an object to work with

-----
@CHMOD
======

Syntax:  @chmod <object> <object-permissions>
         @chmod <object>.<prop-name> <property-permissions>
         @chmod <object>:<verb-name> <verb-permissions>
         @chmod# <object>:<verb-number> <verb-permissions>

Changes the permissions of an object, property or verb, to those given.  The following table shows what permission bits are allowed for each form of the command:

        <object-permissions>        r, w, f
        <property-permissions>      r, w, c
        <verb-permissions>          r, w, x, d

See the LambdaMOO Programmer's Manual for their meanings.

To clear all of the permissions for an object, verb, or property, use "" as the second argument.

Object #289 does not define that verb, but its ancestor #52 does.
#52:"@chmod*#" any any any
 1:  set_task_perms(player);
 2:  if (length(args) != 2)
 3:    player:notify(tostr("Usage:  ", verb, " <object-or-property-or-verb> <permissions>"));
 4:    return;
 5:  endif
 6:  {what, perms} = args;
 7:  bynumber = verb[$] == "#";
 8:  if (spec = $code_utils:parse_verbref(what))
 9:    if (!player.programmer)
10:      player:notify("You need to be a programmer to do this.");
11:      player:notify("Read `help programmer-policy' to see how to become a programmer.");
12:      return;
13:    endif
14:    if (valid(object = player:my_match_object(spec[1])))
15:      vname = spec[2];
16:      if (bynumber && (E_TYPE == (vname = $code_utils:tonum(vname)) || vname < 1))
17:        player:notify("Verb number expected.");
18:        return;
19:      endif
20:      try
21:        {owner, oldperms, names} = verb_info(object, vname);
22:        perms = $perm_utils:apply(oldperms, perms, "rwxd");
23:      except (E_VERBNF)
24:        player:notify(bynumber ? "Verb number out of range" | "That object does not define that verb.");
25:        return;
26:      except e (ANY)
27:        player:notify(e[2]);
28:        return;
29:      endtry
30:      if (!valid(owner))
31:        player:notify(tostr("That verb is owned by an invalid object (", owner, "); it needs to be @chowned."));
32:      elseif (!is_player(owner))
33:        player:notify(tostr("That verb is owned by a non-player object (", owner:name(), ", ", owner, "); it needs to be @chowned."));
34:      elseif (index(perms, "w"))
35:        player:notify("That would allow anyone to change your verb.");
36:      else
37:        try
38:          set_verb_info(object, vname, {owner, perms, names});
39:        except (E_INVARG)
40:          player:notify(tostr("\"", perms, "\" is not a valid permissions string for a verb."));
41:          return;
42:        except e (ANY)
43:          player:notify(e[2]);
44:          return;
45:        endtry
46:        player:notify(tostr("Verb permissions set to \"", perms, "\"."));
47:      endif
48:      return;
49:    endif
50:  elseif (bynumber)
51:    player:notify(tostr(verb, " can only be used for verbs."));
52:    return;
53:  elseif (index(what, ".") && (spec = $code_utils:parse_propref(what)))
54:    if (valid(object = player:my_match_object(spec[1])))
55:      pname = spec[2];
56:      if (`property_info(parent(object), pname) ! ANY')
57:        player:notify("Property permissions can be changed only on the object that defines the property.");
58:        return;
59:      endif
60:      try
61:        {owner, oldperms} = property_info(object, pname);
62:        perms = $perm_utils:apply(oldperms, perms, "rwc");
63:      except (E_PROPNF)
64:        player:notify("That object does not have that property.");
65:        return;
66:      except e (ANY)
67:        player:notify(e[2]);
68:        return;
69:      endtry
70:      result = $wiz_utils:set_property_flags(object, pname, perms);
71:      if (result == E_INVARG)
72:        player:notify(tostr("\"", perms, "\" is not a valid permissions string for a property."));
73:      elseif (typeof(result) == ERR)
74:        player:notify(tostr(result));
75:      else
76:        player:notify(tostr("Property permissions set to \"", perms, "\"."));
77:      endif
78:      return;
79:    endif
80:  elseif (valid(object = player:my_match_object(what)))
81:    try
82:      perms = $perm_utils:apply(tostr(object.r ? "r" | "", object.w ? "w" | "", object.f ? "f" | ""), perms, "rwf");
83:      object.r = index(perms, "r");
84:      object.w = index(perms, "w");
85:      object.f = index(perms, "f");
86:    except (E_PERM)
87:      player:notify("Permission denied.");
88:      return;
89:    except e (E_INVARG)
90:      player:notify(e[2]);
91:      return;
92:    endtry
93:    player:notify(tostr("Object permissions set to \"", perms, "\"."));
94:    return;
95:  endif
96:  $command_utils:object_match_failed(object, what);
-----
GENERAL INFORMATION ON $PERM_UTILS[1]
=====================================

A set of related utilities.

permissions utilities (#134) [ readable ]
  Owned by unknown hacker (#35).
  Child of generic utilities (#151).
  #134:controls                 Core-Wizard (#191)   rxd    this none this
  #134:apply                    unknown hacker (#35) rxd    this none this
  #134:controls_verb            Core-Wizard (#191)   rxd    this none this
  #134:"controls_prop controls_property" Core-Wizard (#191) rxd this none this
  #134:invoked_by_function      unknown hacker (#35) rxd    this none this
  #134:controls(core)           Core-Wizard (#191)   r d    this none this
-------------------------------- finished ---------------------------------
=> 0
=> 1
Verb added [2] (1).
#134:"apply" this none this
 1:  ":apply(permstring,mods[,allowed]) => new permstring.";
 2:  "PERMSTRING is a permissions string, MODS is a concatenation of strings of the form +<letters>, !<letters>, or -<letters>, where <letters> is a string of letters as might appear in a permissions string (`+' adds the specified permissions, `-' or `!' removes them; `-' and `!' are entirely equivalent).";
 3:  "if ALLOWED is supplied, any letters in MODS not contained in ALLOWED raises E_INVARG";
 4:  {perms, mods, ?allowed = mods} = args;
 5:  if (!mods)
 6:    return mods;
 7:  elseif (!index("!-+", mods[1]))
 8:    if (m = match(mods, tostr("[^", allowed, "]")))
 9:      raise(E_INVARG, tostr("Unknown flag:  ", mods[m[1]]));
10:    endif
11:    return mods;
12:  endif
13:  i = 1;
14:  while (i <= length(mods))
15:    if (mods[i] == "+")
16:      while ((i = i + 1) <= length(mods) && !index("!-+", mods[i]))
17:        if (!index(allowed, mods[i]))
18:          raise(E_INVARG, tostr("Unknown flag:  ", mods[i]));
19:        endif
20:        if (!index(perms, mods[i]))
21:          perms = perms + mods[i];
22:        endif
23:      endwhile
24:    else
25:      "mods[i] must be ! or -";
26:      while ((i = i + 1) <= length(mods) && !index("!-+", mods[i]))
27:        if (!index(allowed, mods[i]))
28:          raise(E_INVARG, tostr("Unknown flag:  ", mods[i]));
29:        endif
30:        perms = strsub(perms, mods[i], "");
31:      endwhile
32:    endif
33:  endwhile
34:  return perms;
=> {"key", "aliases", "description", "visible", "integrate_room_msg", "integrate_player_msg", "integrate_container_msg", "unique", "proper", "integrate_in", "handlers", "number", "offered", "object_size", "review_marks", "review_history"}
-----
`HELP UTILS' NOT FOUND
======================

Sorry, but no help is available on `utils'.  If you can't find what you're looking for, you may want to send mail (see `help mail'[1]) to *Bug-reports.

permissions utilities (#134)   generic utilities (#151)   root class (#1)
The generic utilities(#151) has 56 kids.
wizard utilities (#24)   set utilities (#27)   sequence utilities (#32)   gender utilities (#38)   math utilities (#26)   time utilities (#39)   object utilities (#47)   lock utilities (#48)   list utilities (#49)   command utilities (#50)   code utilities (#53)   permissions utilities (#134)   building utilities (#19)   string utilities (#18)   integration utils (#74)   Generic BigList Utilities (#13)   English Utilities (#72)   Name Utilities (#183)   Parsing Utilities (#121)   Generic Quota Utils Parent (#89)   walking utils (#189)   room matching utilities (#444)   resolver utils (#2402)   hex utilities (#2701)   file utilities (#2303)   measurement utilities (#2785)   xml utilities (#2844)   DNS Utilities (#3097)   financial formatting utilities (#2969)   compositing utilities (#3334)   measurement utilities (#3555)   cryptographic utilities (#3655)   bigint utilities (#3172)   html parser (#4008)   bignum utilities (#2865)   rational utilities (#4060)   Element Utilities (#4317)   data utilities (#4599)   constraint utilities (#4839)   topography utilities (#3748)   playing card utilities (#3806)   message utilities (#2475)   quicksilver utilities (#4682)   newps (#4981)   Lexicon utilities (#5117)   dictionary utilities (#3610)   MOO yak (#101)   getopt utils (#4870)   geometry utilities (#6006)   RDF utilities (#6011)   mars_utils (#4555)   ELib (#6000)   ULI utilities (#5080)   fraction utils (#5832)   reckoning utilities (#5874)   flight utilities (#6669)
object utilities (#47) [ readable ]
  Owned by Core-Wizard (#191).
  Child of generic utilities (#151).
   #47:has_property             Core-Wizard (#191)   rxd    this none this
   #47:all_properties           Core-Wizard (#191)   rxd    this none this
   #47:has_verb                 Core-Wizard (#191)   rxd    this none this
   #47:has_callable_verb        Core-Wizard (#191)   rxd    this none this
   #47:all_verbs                Core-Wizard (#191)   rxd    this none this
   #47:match_verb               Core-Wizard (#191)   rxd    this none this
   #47:isa                      Core-Wizard (#191)   rxd    this none this
   #47:ancestors                Core-Wizard (#191)   rxd    this none this
   #47:"descendants descendents" Core-Wizard (#191)  rxd    this none this
   #47:"descendants_suspended descendents_suspended" Core-Wizard (#191) rxd this none this
   #47:ordered_descendants      Core-Wizard (#191)   rxd    this none this
   #47:branches                 unknown hacker (#35) rxd    this none this
   #47:branches_suspended       Core-Wizard (#191)   rxd    this none this
   #47:leaves                   unknown hacker (#35) rxd    this none this
   #47:leaves_suspended         Core-Wizard (#191)   rxd    this none this
   #47:contains                 Core-Wizard (#191)   rxd    this none this
   #47:all_contents             Core-Wizard (#191)   rxd    this none this
   #47:findable_properties      Core-Wizard (#191)   rxd    this none this
   #47:owned_properties         Core-Wizard (#191)   rxd    this none this
   #47:property_conflicts       Core-Wizard (#191)   rx     this none this
   #47:descendants_with_property_suspended Core-Wizard (#191) rx this none this
   #47:locations                Core-Wizard (#191)   rxd    this none this
   #47:"fertile_descendants fertile_descendents" Core-Wizard (#191) rxd this none this
   #47:all_properties_suspended Core-Wizard (#191)   rxd    this none this
   #47:match_verbs(new)         unknown hacker (#35) rx     this none this
   #47:connected                unknown hacker (#35) rxd    this none this
   #47:all_contents_bfs         Ben (#269)           rxd    this none this
   #47:isa(core)                Core-Wizard (#191)   rxd    this none this
   #47:match_verbs_named        Xplat (#4014)        rxd    this none this
   #47:check_for_legacy         unknown hacker (#35) rxd    this none this
-------------------------------- finished ---------------------------------
#0:"core_objects(old)" this none this
 1:  saved = {#0};
 2:  for p in (properties(#0))
 3:    v = #0.(p);
 4:    if (typeof(v) == OBJ && valid(v))
 5:      saved = setadd(saved, v);
 6:    endif
 7:  endfor
 8:  for o in (saved)
 9:    p = parent(o);
10:    while (valid(p))
11:      saved = setadd(saved, p);
12:      p = parent(p);
13:    endwhile
14:  endfor
15:  return $list_utils:sort(saved);
-----
SETADD()
========

Syntax:  setadd (list <list>, <value>)   => list
      setremove (list <list>, <value>)   => list

Returns a copy of <list> with the given <value> added or removed, as appropriate.  `setadd()' only adds <value> if it is not already an element of <list>; <list> is thus treated as a mathematical set.  <value> is added at the end of the resulting list, if at all.  Similarly, `setremove()' returns a list identical to <list> if <value> is not an element.  If <value> appears more than once in <list>, only the first occurrence is removed in the returned copy.

    setadd({1, 2, 3}, 3)         =>   {1, 2, 3}
    setadd({1, 2, 3}, 4)         =>   {1, 2, 3, 4}
    setremove({1, 2, 3}, 3)      =>   {1, 2}
    setremove({1, 2, 3}, 4)      =>   {1, 2, 3}
    setremove({1, 2, 3, 2}, 2)   =>   {1, 3, 2}

-----
GENERAL INFORMATION ON $SET_UTILS[1]
====================================

This object is useful for operations that treat lists as sets (i.e., without concern about order and assuming no duplication).

 union(set, set, ...)        => union
 intersection(set, set, ...) => intersection

 diff*erence(set 1, set 2, ..., set n)
        => result of removing all elements of sets 2..n from set 1.
 exclusive_or(set, set, set, ...)
        => all elements that are contained in exactly one of the sets

 equals(set, set, ...)
        => true if and only if all the sets are equal
 contains(set 1, set 2, ..., set n)
        => true if and only if all of sets 2..n are subsets of set 1

Now programming Crag:core_objects[2](1).
[Type lines of input; use `.' to end or `@abort' to abort the command.]
0 errors.
Verb programmed.
Crag (#289) [ (player) programmer ]
  Child of generic programmer (#52).
  Location meadow (#1106).
-------------------------------- finished ---------------------------------
Object #289 does not define that verb, but its ancestor #4 does.
#4:"@kids" any none none
 1:  "'@kids <obj>' - List the children of an object. This is handy for seeing whether anybody's actually using your carefully-wrought public objects.";
 2:  thing = player:my_match_object(dobjstr);
 3:  if (!$command_utils:object_match_failed(thing, dobjstr))
 4:    kids = children(thing);
 5:    if (kids)
 6:      player:notify(tostr(thing:dnamec(), "(", thing, ") has ", length(kids), " kid", length(kids) == 1 ? "" | "s", "."));
 7:      player:notify(tostr($string_utils:names_of(kids)));
 8:    else
 9:      player:notify(tostr(thing:dnamec(), "(", thing, ") has no kids."));
10:    endif
11:  endif
=> "ab"
#-1:Input to EVAL, line 4:  Type mismatch
... called from built-in function eval()
... called from #52:eval_cmd_string (this == #289), line 21
... called from #52:eval eval-d eval+d (this == #289), line 16
(End of traceback)
-----
`HELP LISTADD' NOT FOUND
========================

Sorry, but no help is available on `listadd'.  If you can't find what you're looking for, you may want to send mail (see `help mail'[1]) to *Bug-reports.

Line 1:  Unknown built-in function: listadd
1 error.
-----
SETADD()
========

Syntax:  setadd (list <list>, <value>)   => list
      setremove (list <list>, <value>)   => list

Returns a copy of <list> with the given <value> added or removed, as appropriate.  `setadd()' only adds <value> if it is not already an element of <list>; <list> is thus treated as a mathematical set.  <value> is added at the end of the resulting list, if at all.  Similarly, `setremove()' returns a list identical to <list> if <value> is not an element.  If <value> appears more than once in <list>, only the first occurrence is removed in the returned copy.

    setadd({1, 2, 3}, 3)         =>   {1, 2, 3}
    setadd({1, 2, 3}, 4)         =>   {1, 2, 3, 4}
    setremove({1, 2, 3}, 3)      =>   {1, 2}
    setremove({1, 2, 3}, 4)      =>   {1, 2, 3}
    setremove({1, 2, 3, 2}, 2)   =>   {1, 3, 2}

-----
SERVER BUILT-IN FUNCTIONS
=========================

abs()[1]                acos()[2]               add_property()[3]
add_verb()[4]           asin()[5]               atan()[6]
binary_hash()[7]        boot_player()[8]        buffered_output_length()[9]
builtin-index[10]       call_function()[11]     caller_perms()[12]
callers()[13]           ceil()[14]              children()[15]
chparent()[16]          clear_property()[17]    connected_players()[18]
connected_seconds()[19]                         connection_name()[20]
connection_option()[21]                         connection_options()[22]
cos()[23]               cosh()[24]              create()[25]
crypt()[26]             ctime()[27]             db_disk_size()[28]
decode_binary()[29]     delete_property()[30]   delete_verb()[31]
disassemble()[32]       dump_database()[33]     encode_binary()[34]
equal()[35]             eval()[36]              exp()[37]
floatstr()[38]          floor()[39]             flush_input()[40]
force_input()[41]       function_info()[42]     idle_seconds()[43]
index()[44]             is_clear_property()[45]
is_member()[46]         is_player()[47]         kill_task()[48]
length()[49]            listappend()[50]        listdelete()[51]
listen()[52]            listeners()[53]         listinsert()[54]
listset()[55]           log()[56]               log10()[57]
match()[58]             max()[59]               max_object()[60]
memory_usage()[61]      min()[62]               move()[63]
notify()[64]            object_bytes()[65]      open_network_connection()[66]
output_delimiters()[67]                         parent()[68]
pass()[69]              players()[70]           properties()[71]
property_info()[72]     queue_info()[73]        queued_tasks()[74]
raise()[75]             random()[76]            read()[77]
recycle()[78]           renumber()[79]          reset_max_object()[80]
resume()[81]            rindex()[82]            rmatch()[83]
seconds_left()[84]      server_log()[85]        server_version()[86]
set_connection_option()[87]                     set_player_flag()[88]
set_property_info()[89]                         set_task_perms()[90]
set_verb_args()[91]     set_verb_code()[92]     set_verb_info()[93]
setadd()[94]            setremove()[95]         shutdown()[96]
sin()[97]               sinh()[98]              sqrt()[99]
strcmp()[100]           string_hash()[101]      strsub()[102]
substitute()[103]       suspend()[104]          tan()[105]
tanh()[106]             task_id()[107]          task_stack()[108]
ticks_left()[109]       time()[110]             tofloat()[111]
toint()[112]            toliteral()[113]        tonum()[114]
toobj()[115]            tostr()[116]            trunc()[117]
typeof()[118]           unlisten()[119]         valid()[120]
value_bytes()[121]      value_hash()[122]       verb_args()[123]
verb_code()[124]        verb_info()[125]        verbs()[126]

-----
LISTAPPEND()
============

Syntax:  listinsert (list <list>, <value> [, int <index>])   => list
         listappend (list <list>, <value> [, int <index>])   => list

These functions return a copy of <list> with <value> added as a new element.  `listinsert()' and `listappend()' add <value> before and after (respectively) the existing element with the given <index>, if provided.

The following three expressions always have the same value:

    listinsert(<list>, <element>, <index>)
    listappend(<list>, <element>, <index> - 1)
    {@<list>[1..<index> - 1], <element>, @<list>[<index>..length(<list>)]}

If <index> is not provided, then `listappend()' adds the <value> at the end of the list and `listinsert()' adds it at the beginning; this usage is discouraged, however, since the same intent can be more clearly expressed using the list-construction expression, as shown in the examples below.

    x = {1, 2, 3};
    listappend(x, 4, 2)   =>   {1, 2, 4, 3}
    listinsert(x, 4, 2)   =>   {1, 4, 2, 3}
    listappend(x, 4)      =>   {1, 2, 3, 4}
    listinsert(x, 4)      =>   {4, 1, 2, 3}
    {@x, 4}               =>   {1, 2, 3, 4}
    {4, @x}               =>   {4, 1, 2, 3}

root class (#1) [ readable fertile ]
  Owned by Core-Wizard (#191).
  Child of ** none ** (#-1).
    #1:initialize               Core-Wizard (#191)   rxd    this none this
    #1:recycle                  Core-Wizard (#191)   rxd    this none this
    #1:set_name                 Core-Wizard (#191)   rxd    this none this
    #1:name                     unknown hacker (#35) rxd    this none this
    #1:"titlec namec"           unknown hacker (#35) rxd    this none this
    #1:set_aliases              Core-Wizard (#191)   rxd    this none this
    #1:match                    unknown hacker (#35) rxd    this none this
    #1:match_object             unknown hacker (#35) rxd    this none this
    #1:set_description          Core-Wizard (#191)   rxd    this none this
    #1:description              unknown hacker (#35) rxd    this none this
    #1:look_self                unknown hacker (#35) rxd    this none this
    #1:notify                   Core-Wizard (#191)   rxd    this none this
    #1:tell                     Core-Wizard (#191)   rxd    this none this
    #1:tell_lines               unknown hacker (#35) rxd    this none this
    #1:accept                   unknown hacker (#35) rxd    this none this
    #1:moveto                   Core-Wizard (#191)   rxd    this none this
    #1:eject                    Core-Wizard (#191)   rxd    this none this
    #1:is_unlocked_for          Core-Wizard (#191)   rxd    this none this
    #1:huh                      Core-Wizard (#191)   rxd    this none this
    #1:set_message              Core-Wizard (#191)   rxd    this none this
    #1:do_examine               Core-Wizard (#191)   rxd    this none this
    #1:examine_key              Core-Wizard (#191)   rxd    this none this
    #1:examine_names            unknown hacker (#35) rxd    this none this
    #1:examine_desc             unknown hacker (#35) rxd    this none this
    #1:examine_contents         Core-Wizard (#191)   rxd    this none this
    #1:examine_verbs            Core-Wizard (#191)   rxd    this none this
    #1:room_announce*_all_but   unknown hacker (#35) rxd    this none this
    #1:init_for_core            Core-Wizard (#191)   rxd    this none this
    #1:"contents objects_for_match" unknown hacker (#35) rxd this none this
    #1:examine_verb_ok          Core-Wizard (#191)   rxd    this none this
    #1:is_listening             unknown hacker (#35) rxd    this none this
    #1:"obvious_verbs hidden_verbs help_verbs" Core-Wizard (#191) rxd this none this
    #1:examine_owner            unknown hacker (#35) rxd    this none this
    #1:announce*_all_but        unknown hacker (#35) rxd    this none this
    #1:visible                  unknown hacker (#35) rxd    this none this
    #1:"integrate_room_msg integrate_container_msg" unknown hacker (#35) rxd this none this
    #1:"dname*c iname*c"        unknown hacker (#35) rxd    this none this
    #1:"where_am_i where_are_you" unknown hacker (#35) rxd  this none this
    #1:integrate_in             unknown hacker (#35) rxd    this none this
    #1:"name_for_look_self namec_for_look_self" Core-Wizard (#191) rxd this none this
    #1:look_in                  unknown hacker (#35) rxd    this none this
    #1:integrate_player_msg     unknown hacker (#35) rxd    this none this
    #1:default_editing          unknown hacker (#35) rxd    this none this
    #1:title                    unknown hacker (#35) rxd    this none this
    #1:"name_for_tell_contents namec_for_tell_contents" unknown hacker (#35) rxd this none this
    #1:tell_lines_suspended     unknown hacker (#35) rxd    this none this
    #1:is_hidden_verb           Core-Wizard (#191)   rxd    this none this
    #1:"verb_sub noun_sub adj_sub" unknown hacker (#35) rxd this none this
    #1:exitfunc                 unknown hacker (#35) rxd    this none this
    #1:editing_for              Core-Wizard (#191)   rxd    this none this
    #1:event_*                  unknown hacker (#35) rxd    this none this
    #1:"name_and_number iname_and_number dname_and_number namec_and_number inamec_and_number dnamec_and_number" unknown hacker (#35) rxd this none this
    #1:add_handler              unknown hacker (#35) rxd    this none this
    #1:_add_handler             unknown hacker (#35) rxd    this none this
    #1:remove_handler           unknown hacker (#35) rxd    this none this
    #1:handlers_event_*         unknown hacker (#35) rxd    this none this
    #1:"ps*c po*c pr*c pp*c pq*c psu pou pru ppu pqu" unknown hacker (#35) rxd this none this
    #1:"gender gender_name"     unknown hacker (#35) rxd    this none this
    #1:"set_number set_visible set_integrate_in" unknown hacker (#35) rxd this none this
    #1:number                   unknown hacker (#35) rxd    this none this
    #1:"is_plural are_plural plural" unknown hacker (#35) rxd this none this
    #1:gender_obj               unknown hacker (#35) rxd    this none this
    #1:you                      unknown hacker (#35) rxd    this none this
    #1:modname_d                unknown hacker (#35) rxd    this none this
    #1:modname_i                unknown hacker (#35) rxd    this none this
    #1:modname_c                unknown hacker (#35) rxd    this none this
    #1:modname_p                unknown hacker (#35) rxd    this none this
    #1:base_name                unknown hacker (#35) rxd    this none this
    #1:nominate_for_core        unknown hacker (#35) rxd    this none this
    #1:help_text                unknown hacker (#35) rxd    this none this
    #1:modname_u                unknown hacker (#35) rxd    this none this
    #1:modname_titleize         unknown hacker (#35) rxd    this none this
    #1:empty_message            Core-Wizard (#191)   rxd    this none this
    #1:"empty_message_integrate_room empty_message_integrate_container" unknown hacker (#35) rxd this none this
    #1:modname_in               unknown hacker (#35) rxd    this none this
    #1:acceptable               unknown hacker (#35) rxd    this none this
    #1:modname_v                unknown hacker (#35) rxd    this none this
    #1:modname_#                unknown hacker (#35) rxd    this none this
    #1:modname_l                Core-Wizard (#191)   rxd    this none this
    #1:get_messages             Core-Wizard (#191)   rxd    this none this
    #1:get_message              Core-Wizard (#191)   rxd    this none this
    #1:@rv-approve              Xonny (#202)         r d    none none none
    #1:@rv-disapprove           Xonny (#202)         r d    none none none
    #1:examine_review_marks     Xonny (#202)         rxd    this none this
    #1:@rv-h*istory             Xonny (#202)         r d    none none none
    #1:@rv-clear                Xonny (#202)         r d    none none none
    #1:review_history           Xythian (#199)       rxd    this none this
    #1:"set_proper set_unique"  Xythian (#199)       rx     this none this
    #1:initialize(core)         Core-Wizard (#191)   rxd    this none this
    #1:match(old)               unknown hacker (#35) r d    this none this
    #1:call_from_self_*         Xplat (#4014)        rxd    this none this
    #1:init_for_core(core)      Core-Wizard (#191)   rxd    this none this
    #1:name_for                 unknown hacker (#35) rxd    this none this
    #1:name_mentioned           unknown hacker (#35) rxd    this none this
    #1:"namebuilder_i namebuilder_d" Xplat (#4014)   rxd    this none this
    #1:"verb_sub_for noun_sub_for" unknown hacker (#35) rxd this none this
    #1:"ps_for psc_for po_for poc_for pr_for prc_for pp_for ppc_for pq_for pqc_for psu_for pou_for pru_for ppu_for pqu_for" unknown hacker (#35) rxd this none this
-------------------------------- finished ---------------------------------
Last modified Tue Feb 27 20:07:54 2001 PST by Xeric (#999).
#1:"init_for_core" this none this
 1:  if ($__core_init_phase)
 2:    vnum = 1;
 3:    coreverbs = {};
 4:    while (vnum <= length(verbs(this)))
 5:      $command_utils:suspend_if_needed(0);
 6:      info = verb_info(this, vnum)[3];
 7:      if (index(info, "(old)"))
 8:        delete_verb(this, vnum);
 9:      elseif (s = match(info, "^%(.+%)(core)$"))
10:        last_modify = $verb_metadata_item(this, vnum, "Last-Modify");
11:        set_verb_code(this, target = substitute("%1", s), verb_code(this, vnum));
12:        if (last_modify)
13:          last_modify = last_modify[2];
14:          last_modify[4] = last_modify[4] + " (for core)";
15:          $set_verb_metadata_item(this, target, "Last-Modify", last_modify);
16:        endif
17:        delete_verb(this, vnum);
18:      else
19:        meta = $verb_metadata(this, vnum);
20:        if ($metadata_item(meta, "Is-Local"))
21:          delete_verb(this, vnum);
22:        elseif ($metadata_item(meta, "Has-Local-Sections"))
23:          old = verb_code(this, vnum, 0, 0);
24:          new = {};
25:          comment_re = "^\"%([^\\\"]%|\\.%)*\";$";
26:          verbdoc = 1;
27:          local = 0;
28:          dist = 0;
29:          endofdocs = 1;
30:          for i in (old)
31:            if (verbdoc && match(i, comment_re))
32:              new = {@new, i};
33:              endofdocs = endofdocs + 1;
34:            elseif (local)
35:              if (i == "\"END LOCAL CODE\";")
36:                local = 0;
37:              endif
38:            elseif (dist)
39:              if (i == "\"END DIST CODE\";")
40:                dist = 0;
41:              elseif (match(i, comment_re))
42:                new = {@new, eval("return " + i)[2]};
43:              else
44:                raise(E_INVARG, tostr("unescaped dist code in ", this, ":\"", verb_info(this, vnum)[3], "\""));
45:              endif
46:            elseif (i == "\"BEGIN LOCAL CODE\";")
47:              local = 1;
48:              if (new && new[$] == "E_NONE" && length(new) == endofdocs)
49:                new[$..$] = {};
50:              endif
51:            elseif (i == "\"BEGIN DIST CODE\";")
52:              dist = 1;
53:              if (new && new[$] == "E_NONE" && length(new) == endofdocs)
54:                new[$..$] = {};
55:              endif
56:            else
57:              verbdoc = 0;
58:              new = {@new, i};
59:            endif
60:          endfor
61:          set_verb_code(this, vnum, new);
62:          $set_verb_metadata(this, vnum, $delete_metadata_item(meta, "Has-Local-Sections"));
63:          vnum = vnum + 1;
64:        else
65:          vnum = vnum + 1;
66:        endif
67:      endif
68:    endwhile
69:    if (this == $root_class)
70:      delete_property(this, "review_marks");
71:      delete_property(this, "review_history");
72:    else
73:      this.key = 0;
74:      this.offered = $nothing;
75:    endif
76:  else
77:    $error:raise(E_PERM);
78:  endif
;verbs(#1) => {"initialize", "recycle", "set_name", "name", "titlec namec", "set_aliases", "match", "match_object", "set_description", "description", "look_self", "notify", "tell", "tell_lines", "accept", "moveto", "eject", "is_unlocked_for", "huh", "set_message", "do_examine", "examine_key", "examine_names", "examine_desc", "examine_contents", "examine_verbs", "room_announce*_all_but", "init_for_core", "contents objects_for_match", "examine_verb_ok", "is_listening", "obvious_verbs hidden_verbs help_verbs", "examine_owner", "announce*_all_but", "visible", "integrate_room_msg integrate_container_msg", "dname*c iname*c", "where_am_i where_are_you", "integrate_in", "name_for_look_self namec_for_look_self", "look_in", "integrate_player_msg", "default_editing", "title", "name_for_tell_contents namec_for_tell_contents", "tell_lines_suspended", "is_hidden_verb", "verb_sub noun_sub adj_sub", "exitfunc", "editing_for", "event_*", "name_and_number iname_and_number dname_and_number namec_and_number inamec_and_number dnamec_and_number", "add_handler", "_add_handler", "remove_handler", "handlers_event_*", "ps*c po*c pr*c pp*c pq*c psu pou pru ppu pqu", "gender gender_name", "set_number set_visible set_integrate_in", "number", "is_plural are_plural plural", "gender_obj", "you", "modname_d", "modname_i", "modname_c", "modname_p", "base_name", "nominate_for_core", "help_text", "modname_u", "modname_titleize", "empty_message", "empty_message_integrate_room empty_message_integrate_container", "modname_in", "acceptable", "modname_v", "modname_#", "modname_l", "get_messages", "get_message", "@rv-approve", "@rv-disapprove", "examine_review_marks", "@rv-h*istory", "@rv-clear", "review_history", "set_proper set_unique", "initialize(core)", "match(old)", "call_from_self_*", "init_for_core(core)", "name_for", "name_mentioned", "namebuilder_i namebuilder_d", "verb_sub_for noun_sub_for", "ps_for psc_for po_for poc_for pr_for prc_for pp_for ppc_for pq_for pqc_for psu_for pou_for pru_for ppu_for pqu_for"}
=> 0
0     --Crag
Crag says, "!0"
=> 1
The Meadow
You are in a wide meadow, overflowing with sea grass and tangerine colored wild flowers. Tall sprays of purple haze sway in the wind around your waist.  There is a certain feeling in the area.  The afternoon sun shines brightly.  It is warm.  The orchard is south.  The meadow continues northeast, up the side of a rolling foothill. You can see some buildings nestled midway to the top.  A dense thicket of trees and bushes borders the meadow on the west and north sides.
You see a small wicker wastebasket here.
-----
PROGRAMMING
===========

MOO contains a rich programming language for the creation of interesting rooms, exits, and other objects.  Help is available on the following topics concerning programming in MOO:

language[1]
      a brief reference for the syntax and semantics of the MOO language
tasks[2]
      a brief description of MOO tasks and their resource limits

@property[3]
      adding a property to an object
@rmproperty[4]
      removing a property from an object

@verb[5]
      adding a verb to an object
@rmverb[6]
      removing a verb from an object
@args[7]
      changing the syntax of a verb
@copy[8]
      copying a verb from one object to another

@program[9]
      entering the program for a verb
@list[10]
      printing a listing of the program for a verb
@edit[11]
      editing verb code
eval[12]
      executing MOO statements and expressions without writing a verb

@show[13]
      looking at all the details of an object, a property, or a verb
@display[14]
      a different way to look at those details

@parents[15]
      listing the ancestors of an object
@kids[16]
      listing the children of an object
@chparent[17]
      changing the parent of an object

@contents[18]
      listing the contents of an object
@chmod[19]
      changing the permissions on an object, a property, or a verb
@rename[20]
      changing the name of a verb or object
@currentobject[21]
      specify an object to work with

-----
LANGUAGE
========

The MOO programming language is described in excruciating detail in the LambdaMOO Programmer's Manual, available for FTP from parcftp.xerox.com in the file pub/MOO/ProgrammersManual.txt.  The online help consists of a few quick reference guides here in the help system under the following topics:

statements[1]
      the syntax and semantics of the various kinds of MOO statements
expressions[2]
      the same for the various kinds of MOO expressions
functions[3]
      a list of the primitive functions available to MOO programs

-----
EXPRESSIONS
===========

The following kinds of expressions exist in the MOO programming language:

Literals
========

        number
        # number
        # - number
        "character string"
        error-name

Literal expressions return the obvious values: numbers, object numbers, strings, and errors.

List construction
=================

        { expression , expression , ... , expression }

The list-construction expression evaluates the each of the expressions in turn and returns a list whose elements are the results of those expressions.  Any of the expressions may be prefixed with an at-sign ('@'); in this case, that expression must return a list and, rather than that list becoming an element of the final list, its elements are spliced into the final list.

Variables
=========

        name

Variable expressions return the current value of the named variable.  Variable names must start with a letter or underscore ('_') and contain only letters, digits, and underscores.  The following variables are predefined:

            OBJ, STR, LIST, ERR, NUM
            player, caller, this, verb, args
            argstr, dobj, dobjstr, prepstr, iobj, iobjstr

Their initial values are described in detail in the LambdaMOO Programmer's Manual.

Property reading
================

        expression . name
        expression . ( expression )
        $ name

Property-reading expressions return the current value of a named property on the object that is the value of the first subexpression.  In the second form, the second subexpression must return a string, the name of the property to be read.  The third form is an abbreviation for '#0.name'.

Verb calls
==========

        expression : name ( arguments )
        expression : ( expression ) ( arguments )

Verb-call expressions invoke a named verb on the object that is the value of the first subexpression, passing the given arguments.  In the second form, the second subexpression must return a string, the name of the verb to invoke.  The syntax and semantics of arguments is exactly as in the list-construction expression but no initial or final curly-braces ('{' or '}') are used.

Primitive functions
===================

        function ( arguments )

The function-call expression invokes one of the MOO primitive functions, as listed in `help functions'[1], passing the given arguments.

List indexing
=============

        expression [ expression ]

The indexing expression first evaluates the two subexpressions; call their values S and N, respectively.  S must be a string or a list and N must be a number between 1 and the length of S, inclusive.  The Nth element of S is returned.  The elements of a string are themselves one-character strings.

        expression [ expression .. expression ]

The subsequence expression first evaluates the three subexpressions; call their values S, N1, and N2, respecitively.  S must be a string or a list and N1 and N2 must be numbers.  If N1 <= N2, then both must be between 1 and the length of S, inclusive; the subsequence of S beginning at index N1 and continuing through index N2 is returned.  If N1 > N2, the empty sequence of the same type as S is returned, either "" or {}.

Assignment
==========

        name = expression
        expression . name = expression
        expression . ( expression ) = expression
        $ name = expression

Assignment expressions give new values to variables and object properties.  For the second and third forms, the expressions on the left-hand side of the '=' are evaluated first.  Then the right-hand side expression is evaluated and result is stored in the indicated variable or object property.

Arithemetic
===========

        expression + expression
        expression - expression
        expression * expression
        expression / expression
        expression % expression
        - expression

The arithmetic expressions evaluate the subexpressions, all of which must return numbers, and then perform addition, subtraction, multiplication, division, remaindering, or negation, respectively.  For addition, the subexpressions may both return strings as well; in this case, the result is the concatenation of the two strings.

Comparisons
===========

        expression == expression
        expression != expression
        expression < expression
        expression <= expression
        expression > expression
        expression >= expression

The comparison expressions evaluate the subexpressions and then test whether or not the first result is equal to, unequal to, less than, less than or equal to, greater than, or greater than or equal to the second result, respectively.  If the indicated relation holds then they return 1 and otherwise they return 0.  Comparisons of strings are performed case-insensitively, those of lists are performed on an element-by-element basis, objects are compared by their object numbers, and errors by an ordering given in the LambdaMOO Programmer's Manual.

Logical expressions
===================

        expression ? expression | expression
        expression && expression
        expression || expression
        ! expression

The logical expressions each return results based upon the truth value of their first subexpression; call the value of this expression X.  The first of these returns the value of the second subexpression if X is a true value and that of the third expression if X is a false value; the unused subexpression is not evaluated.  The definitions of 'true value' and 'false value' are given in `help truth'[2].  The expression 'E1 && E2' is an abbreviation for 'E1 ? E2 | E1' except that E1 is only evaluated once.  The expression 'E1 || E2' is an abbreviation for 'E1 ? E1 | E2' except that E1 is only evaluated once.  The expression '! E' is an abbreviation for 'E ? 0 | 1'.

List membership
===============

        expression IN expression

The list-membership expression first evaluates both subexpressions; call their values E and L, respectively.  L must be a list.  If E is an element of L, then the index of the first occurence of E in L is returned.  If E is not an element of L, then 0 is returned.

The method for disambiguating the meaning of a complex MOO expression in the absence of sufficient parentheses is described in `help precedence'[3].

=> {1, 2}
#-1:Input to EVAL, line 4:  Incorrect number of arguments
... called from built-in function eval()
... called from #52:eval_cmd_string (this == #289), line 21
... called from #52:eval eval-d eval+d (this == #289), line 16
(End of traceback)
=> {1, 2, 3}
=> {1, 2, 3, 4}
=> {1, 2}
=> 1
Now programming Crag:core_objects[2](1).
[Type lines of input; use `.' to end or `@abort' to abort the command.]
0 errors.
Verb programmed.
#289:core_objects, line 1:  Incorrect number of arguments
... called from #-1:Input to EVAL, line 4
... called from built-in function eval()
... called from #52:eval_cmd_string (this == #289), line 21
... called from #52:eval eval-d eval+d (this == #289), line 16
(End of traceback)
=> {{}, {}}
#289:core_objects, line 3:  Range error
... called from #289:core_objects, line 8
... called from #-1:Input to EVAL, line 4
... called from built-in function eval()
... called from #52:eval_cmd_string (this == #289), line 21
... called from #52:eval eval-d eval+d (this == #289), line 16
(End of traceback)
Now programming Crag:core_objects[2](1).
[Type lines of input; use `.' to end or `@abort' to abort the command.]
0 errors.
Verb programmed.
#289:core_objects, line 2:  Variable not found
... called from #-1:Input to EVAL, line 4
... called from built-in function eval()
... called from #52:eval_cmd_string (this == #289), line 21
... called from #52:eval eval-d eval+d (this == #289), line 16
(End of traceback)
Now programming Crag:core_objects[2](1).
[Type lines of input; use `.' to end or `@abort' to abort the command.]
0 errors.
Verb programmed.
#289:core_objects, line 5:  Permission denied
... called from #289:core_objects, line 8
... called from #-1:Input to EVAL, line 4
... called from built-in function eval()
... called from #52:eval_cmd_string (this == #289), line 21
... called from #52:eval eval-d eval+d (this == #289), line 16
(End of traceback)
-----
EXPRESSIONS
===========

The following kinds of expressions exist in the MOO programming language:

Literals
========

        number
        # number
        # - number
        "character string"
        error-name

Literal expressions return the obvious values: numbers, object numbers, strings, and errors.

List construction
=================

        { expression , expression , ... , expression }

The list-construction expression evaluates the each of the expressions in turn and returns a list whose elements are the results of those expressions.  Any of the expressions may be prefixed with an at-sign ('@'); in this case, that expression must return a list and, rather than that list becoming an element of the final list, its elements are spliced into the final list.

Variables
=========

        name

Variable expressions return the current value of the named variable.  Variable names must start with a letter or underscore ('_') and contain only letters, digits, and underscores.  The following variables are predefined:

            OBJ, STR, LIST, ERR, NUM
            player, caller, this, verb, args
            argstr, dobj, dobjstr, prepstr, iobj, iobjstr

Their initial values are described in detail in the LambdaMOO Programmer's Manual.

Property reading
================

        expression . name
        expression . ( expression )
        $ name

Property-reading expressions return the current value of a named property on the object that is the value of the first subexpression.  In the second form, the second subexpression must return a string, the name of the property to be read.  The third form is an abbreviation for '#0.name'.

Verb calls
==========

        expression : name ( arguments )
        expression : ( expression ) ( arguments )

Verb-call expressions invoke a named verb on the object that is the value of the first subexpression, passing the given arguments.  In the second form, the second subexpression must return a string, the name of the verb to invoke.  The syntax and semantics of arguments is exactly as in the list-construction expression but no initial or final curly-braces ('{' or '}') are used.

Primitive functions
===================

        function ( arguments )

The function-call expression invokes one of the MOO primitive functions, as listed in `help functions'[1], passing the given arguments.

List indexing
=============

        expression [ expression ]

The indexing expression first evaluates the two subexpressions; call their values S and N, respectively.  S must be a string or a list and N must be a number between 1 and the length of S, inclusive.  The Nth element of S is returned.  The elements of a string are themselves one-character strings.

        expression [ expression .. expression ]

The subsequence expression first evaluates the three subexpressions; call their values S, N1, and N2, respecitively.  S must be a string or a list and N1 and N2 must be numbers.  If N1 <= N2, then both must be between 1 and the length of S, inclusive; the subsequence of S beginning at index N1 and continuing through index N2 is returned.  If N1 > N2, the empty sequence of the same type as S is returned, either "" or {}.

Assignment
==========

        name = expression
        expression . name = expression
        expression . ( expression ) = expression
        $ name = expression

Assignment expressions give new values to variables and object properties.  For the second and third forms, the expressions on the left-hand side of the '=' are evaluated first.  Then the right-hand side expression is evaluated and result is stored in the indicated variable or object property.

Arithemetic
===========

        expression + expression
        expression - expression
        expression * expression
        expression / expression
        expression % expression
        - expression

The arithmetic expressions evaluate the subexpressions, all of which must return numbers, and then perform addition, subtraction, multiplication, division, remaindering, or negation, respectively.  For addition, the subexpressions may both return strings as well; in this case, the result is the concatenation of the two strings.

Comparisons
===========

        expression == expression
        expression != expression
        expression < expression
        expression <= expression
        expression > expression
        expression >= expression

The comparison expressions evaluate the subexpressions and then test whether or not the first result is equal to, unequal to, less than, less than or equal to, greater than, or greater than or equal to the second result, respectively.  If the indicated relation holds then they return 1 and otherwise they return 0.  Comparisons of strings are performed case-insensitively, those of lists are performed on an element-by-element basis, objects are compared by their object numbers, and errors by an ordering given in the LambdaMOO Programmer's Manual.

Logical expressions
===================

        expression ? expression | expression
        expression && expression
        expression || expression
        ! expression

The logical expressions each return results based upon the truth value of their first subexpression; call the value of this expression X.  The first of these returns the value of the second subexpression if X is a true value and that of the third expression if X is a false value; the unused subexpression is not evaluated.  The definitions of 'true value' and 'false value' are given in `help truth'[2].  The expression 'E1 && E2' is an abbreviation for 'E1 ? E2 | E1' except that E1 is only evaluated once.  The expression 'E1 || E2' is an abbreviation for 'E1 ? E1 | E2' except that E1 is only evaluated once.  The expression '! E' is an abbreviation for 'E ? 0 | 1'.

List membership
===============

        expression IN expression

The list-membership expression first evaluates both subexpressions; call their values E and L, respectively.  L must be a list.  If E is an element of L, then the index of the first occurence of E in L is returned.  If E is not an element of L, then 0 is returned.

The method for disambiguating the meaning of a complex MOO expression in the absence of sufficient parentheses is described in `help precedence'[3].

-----
PROGRAMMING
===========

MOO contains a rich programming language for the creation of interesting rooms, exits, and other objects.  Help is available on the following topics concerning programming in MOO:

language[1]
      a brief reference for the syntax and semantics of the MOO language
tasks[2]
      a brief description of MOO tasks and their resource limits

@property[3]
      adding a property to an object
@rmproperty[4]
      removing a property from an object

@verb[5]
      adding a verb to an object
@rmverb[6]
      removing a verb from an object
@args[7]
      changing the syntax of a verb
@copy[8]
      copying a verb from one object to another

@program[9]
      entering the program for a verb
@list[10]
      printing a listing of the program for a verb
@edit[11]
      editing verb code
eval[12]
      executing MOO statements and expressions without writing a verb

@show[13]
      looking at all the details of an object, a property, or a verb
@display[14]
      a different way to look at those details

@parents[15]
      listing the ancestors of an object
@kids[16]
      listing the children of an object
@chparent[17]
      changing the parent of an object

@contents[18]
      listing the contents of an object
@chmod[19]
      changing the permissions on an object, a property, or a verb
@rename[20]
      changing the name of a verb or object
@currentobject[21]
      specify an object to work with

-----
LANGUAGE
========

The MOO programming language is described in excruciating detail in the LambdaMOO Programmer's Manual, available for FTP from parcftp.xerox.com in the file pub/MOO/ProgrammersManual.txt.  The online help consists of a few quick reference guides here in the help system under the following topics:

statements[1]
      the syntax and semantics of the various kinds of MOO statements
expressions[2]
      the same for the various kinds of MOO expressions
functions[3]
      a list of the primitive functions available to MOO programs

-----
STATEMENTS
==========

The following kinds of statements exist in the MOO programming language:

Null
====

        ;

The null statement does nothing.

Expressions
===========

        expression ;

The expression statement evaluates the expression and then discards the value.

Conditional
===========

        IF ( expression ) statements ENDIF
        IF ( expression ) statements ELSE statements ENDIF
        IF ( expression )
          statements
        ELSEIF ( expression )
          statements
        ...
        ELSE
          statements
        ENDIF

The conditional statement evaluates each expression in turn and executes the statements associated with the first one to return a true value; the ELSE statements are executed if none of the expressions returns a true value.  There can be any number of ELSEIF clauses and the ELSE part is optional.  See `help truth'[1] for the definition of 'true value'.

List iteration
==============

        FOR name IN ( expression ) statements ENDFOR

The list iteration statement first evaluates the expression, which must return a list.  It then executes the statements once for each element of that list, each time with the named variable having the value of the corresponding list element.

Numeric iteration
=================

        FOR name IN [ expression .. expression ] statements ENDFOR

The numeric iteration statement first evaluates the two expressions, both of which must return numbers; call those numbers N1 and N2, respectively.  The statements are then executed once for each integer I such that N1 <= I <= N2, in increasing order; each time, the named variable has the corresponding value of I.

Indefinite iteration
====================

        WHILE ( expression ) statements ENDWHILE

The indefinite iteration statement repeatedly evaluates the expression and, each time it returns a true value, executes the statements.  The loop stops the first time that the expression returns a false value.  The definitions of 'true' and 'false' values is in `help truth'[2].

Return
======

        RETURN ;
        RETURN expression ;

The return statement evalautes the expression, if any, and returns the resulting value (or 0 if there is no expression) to the verb that called the current one.  Execution of the current verb is immediately terminated.

Fork
====

        FORK ( expression ) statements ENDFORK
        FORK name ( expression ) statements ENDFORK

The fork statement first executes the expression, which must return a number; call that number N.  It then creates a new MOO task that will, after at least N seconds, execute the statements.  When the new task begins, all variables will have the values they had at the time the FORK statement was executed.  The task executing the FORK statement immediately continues execution.  If a variable name is given after the FORK keyword, then it is assigned the 'queue ID' of the newly-created task.  The value of this variable is visible both to the task executing the fork statement and to the statements in the newly-created task.  See `help tasks'[3] for more information about forked tasks.

-----
ERRORS
======

The complete list of error codes:

    E_NONE         No error
    E_TYPE         Type mismatch
    E_DIV          Division by zero
    E_PERM         Permission denied
    E_PROPNF       Property not found
    E_VERBNF       Verb not found
    E_VARNF        Variable not found
    E_INVIND       Invalid indirection
    E_RECMOVE      Recursive move
    E_MAXREC       Too many verb calls
    E_RANGE        Range error
    E_ARGS         Incorrect number of arguments
    E_NACC         Move refused by destination
    E_INVARG       Invalid argument
    E_QUOTA        Resource limit exceeded
    E_FLOAT        Floating-point arithmetic error

-----
`HELP TRY' NOT FOUND
====================

Sorry, but no help is available on `try'.  If you can't find what you're looking for, you may want to send mail (see `help mail'[1]) to *Bug-reports.

Line 1:  parse error
1 error.
Object #289 does not define that verb, but its ancestor #4 does.
#4:"@kids" any none none
 1:  "'@kids <obj>' - List the children of an object. This is handy for seeing whether anybody's actually using your carefully-wrought public objects.";
 2:  thing = player:my_match_object(dobjstr);
 3:  if (!$command_utils:object_match_failed(thing, dobjstr))
 4:    kids = children(thing);
 5:    if (kids)
 6:      player:notify(tostr(thing:dnamec(), "(", thing, ") has ", length(kids), " kid", length(kids) == 1 ? "" | "s", "."));
 7:      player:notify(tostr($string_utils:names_of(kids)));
 8:    else
 9:      player:notify(tostr(thing:dnamec(), "(", thing, ") has no kids."));
10:    endif
11:  endif
That object does not define that verb.
Object #289 does not define that verb, but its ancestor #52 does.
Last modified Wed Aug 17 14:07:45 2005 PDT by Xplat (#4014).
#52:"@d*isplay" any none none
 1:  "@display <object>[.[property]]*[,[inherited_property]]*[:[verb]]*[;[inherited_verb]]*";
 2:  "null names for properties and verbs are interpreted as meaning all of them.";
 3:  if (player != this)
 4:    "yet another bandaid for the @shout bug ... :(  --*";
 5:    player:tell(E_PERM);
 6:    return E_PERM;
 7:  endif
 8:  opivu = {{}, {}, {}, {}, {}};
 9:  string = "";
10:  punc = 1;
11:  literal = 0;
12:  for jj in [1..length(argstr)]
13:    j = argstr[jj];
14:    if (literal)
15:      string = string + j;
16:      literal = 0;
17:    elseif (j == "\\")
18:      literal = 1;
19:    elseif (y = index(".,:;", j))
20:      opivu[punc] = {@opivu[punc], string};
21:      punc = 1 + y;
22:      string = "";
23:    else
24:      string = string + j;
25:    endif
26:  endfor
27:  opivu[punc] = {@opivu[punc], string};
28:  objname = opivu[1][1];
29:  it = this:my_match_object(objname);
30:  if ($command_utils:object_match_failed(it, objname))
31:    return;
32:  endif
33:  readable = it.owner == this || (it.r || this.wizard);
34:  cant = {};
35:  if ("" in opivu[2])
36:    if (readable)
37:      prop = properties(it);
38:    else
39:      prop = {};
40:      cant = setadd(cant, it);
41:    endif
42:    if (this:display_option("firstancestor"))
43:      what = it;
44:      while (!prop && valid(what = parent(what)))
45:        if (what.owner == this || (what.r || this.wizard))
46:          prop = properties(what);
47:        else
48:          cant = setadd(cant, what);
49:        endif
50:      endwhile
51:    endif
52:  else
53:    prop = opivu[2];
54:  endif
55:  if ("" in opivu[3])
56:    inh = {};
57:    for what in ({it, @$object_utils:ancestors(it)})
58:      if (what.owner == this || what.r || this.wizard)
59:        inh = {@inh, @properties(what)};
60:      else
61:        cant = setadd(cant, what);
62:      endif
63:    endfor
64:  else
65:    inh = opivu[3];
66:  endif
67:  for q in (inh)
68:    if (q in properties(it))
69:      prop = setadd(prop, q);
70:      inh = setremove(inh, q);
71:    endif
72:  endfor
73:  vrb = {};
74:  if ("" in opivu[4])
75:    if (readable)
76:      vrbs = verbs(it);
77:    else
78:      vrbs = {};
79:      cant = setadd(cant, it);
80:    endif
81:    what = it;
82:    if (this:display_option("firstancestor"))
83:      while (!vrbs && valid(what = parent(what)))
84:        if (what.owner == this || (what.r || this.wizard))
85:          vrbs = verbs(what);
86:        else
87:          cant = setadd(cant, what);
88:        endif
89:      endwhile
90:    endif
91:    for n in [1..length(vrbs)]
92:      vrb = setadd(vrb, {what, n});
93:    endfor
94:  else
95:    for w in (opivu[4])
96:      if (y = $object_utils:has_verb(it, w))
97:        vrb = setadd(vrb, {y[1], w});
98:      else
99:        this:notify(tostr("No such verb, \"", w, "\""));
100:      endif
101:    endfor
102:  endif
103:  if ("" in opivu[5])
104:    for z in ({it, @$object_utils:ancestors(it)})
105:      if (this == z.owner || z.r || this.wizard)
106:        for n in [1..length(verbs(z))]
107:          vrb = setadd(vrb, {z, n});
108:        endfor
109:      else
110:        cant = setadd(cant, z);
111:      endif
112:    endfor
113:  else
114:    for w in (opivu[5])
115:      if (typeof(y = $object_utils:has_verb(it, w)) == LIST)
116:        vrb = setadd(vrb, {y[1], w});
117:      else
118:        this:notify(tostr("No such verb, \"", w, "\""));
119:      endif
120:    endfor
121:  endif
122:  if ({""} in opivu || opivu[2..5] == {{}, {}, {}, {}})
123:    this:notify(tostr(it:name(), " (", it, ") [ ", it.r ? "readable " | "", it.w ? "writeable " | "", it.f ? "fertile " | "", is_player(it) ? "(player) " | "", it.programmer ? "programmer " | "", it.wizard ? "wizard " | "", "]"));
124:    if (it.owner != (is_player(it) ? it | this))
125:      this:notify(tostr("  Owned by ", valid(p = it.owner) ? p:name() | "** extinct **", " (", p, ")."));
126:    endif
127:    this:notify(tostr("  Child of ", valid(p = parent(it)) ? p:name() | "** none **", " (", p, ")."));
128:    if (it.location != $nothing)
129:      this:notify(tostr("  Location ", valid(p = it.location) ? p:name() | "** unplace (tell a wizard, fast!) **", " (", p, ")."));
130:    endif
131:  endif
132:  set_task_perms(this.owner);
133:  blankargs = this:display_option("blank_tnt") ? {"this", "none", "this"} | #-1;
134:  for b in (vrb)
135:    $command_utils:suspend_if_needed(0);
136:    {where, q} = b;
137:    short = typeof(q) == NUM ? q | strsub((y = index(q, " ")) ? q[1..y - 1] | q, "*", "");
138:    inf = verb_info(where, short);
139:    if (typeof(inf) == LIST || inf == E_PERM)
140:      name = typeof(inf) == LIST ? inf[3] | q;
141:      name = index(name, " ") ? "\"" + name + "\"" | name;
142:      line = $string_utils:left(tostr($string_utils:right(tostr(where), 6), ":", name, " "), 32);
143:      if (inf == E_PERM)
144:        line = line + "   ** unreadable **";
145:      else
146:        line = $string_utils:left(tostr(line, inf[1]:name(), " (", inf[1], ") "), 53) + ((i = inf[2] in {"x", "xd", "d", "rd"}) ? {" x", " xd", "  d", "r d"}[i] | inf[2]);
147:        vargs = verb_args(where, short);
148:        if (vargs != blankargs)
149:          if (this:display_option("shortprep") && !(vargs[2] in {"any", "none"}))
150:            vargs[2] = $code_utils:short_prep(vargs[2]);
151:          endif
152:          line = $string_utils:left(line + " ", 60) + $string_utils:from_list(vargs, " ");
153:        endif
154:      endif
155:      this:notify(line);
156:    elseif (inf == E_VERBNF)
157:      this:notify(tostr(inf));
158:      this:notify(tostr("  ** no such verb, \"", short, "\" **"));
159:    else
160:      this:notify("This shouldn't ever happen. @display is buggy.");
161:    endif
162:  endfor
163:  all = {@prop, @inh};
164:  max = length(all) < 4 ? 999 | abs(this.linelen) - 54;
165:  depth = length(all) < 4 ? -1 | 1;
166:  truncate_owner_names = length(all) > 1;
167:  for q in (all)
168:    $command_utils:suspend_if_needed(0);
169:    inf = property_info(it, q);
170:    if (inf == E_PROPNF)
171:      if (q in $code_utils.builtin_props)
172:        this:notify(tostr($string_utils:left("," + q, 25), "Built in property ", length(y = $string_utils:from_value(it.(q), 1, depth)) > max ? y[1..max] + ".." | y));
173:      else
174:        this:notify(tostr("  ** property not found, \"", q, "\" **"));
175:      endif
176:    else
177:      pname = $string_utils:left(tostr(q in properties(it) ? "." | (is_clear_property(it, q) ? " " | ","), q, " "), 25);
178:      if (inf == E_PERM)
179:        this:notify(pname + "   ** unreadable **");
180:      else
181:        oname = inf[1]:name();
182:        truncate_owner_names && (length(oname) > 12 && (oname = oname[1..12]));
183:        inf[2][1] != "r" && (inf[2][1..0] = " ");
184:        inf[2][2] != "w" && (inf[2][2..1] = " ");
185:        this:notify($string_utils:left(tostr($string_utils:left(tostr(pname, oname, " (", inf[1], ") "), 47), inf[2], " "), 54) + $string_utils:print_truncated(it.(q), max, ".."));
186:      endif
187:    endif
188:  endfor
189:  if (cant)
190:    failed = {};
191:    for k in (cant)
192:      failed = listappend(failed, tostr(k:name(), " (", k, ")"));
193:    endfor
194:    this:notify($string_utils:centre(tostr(" no permission to read ", $string_utils:english_list(failed, ", ", " or ", " or "), ". "), 75, "-"));
195:  else
196:    this:notify($string_utils:centre(" finished ", 75, "-"));
197:  endif
Crag (#289) [ (player) programmer ]
  Child of generic programmer (#52).
  Location meadow (#1106).
  #289:^kids                    Crag (#289)          r d    any none none
  #289:core_objects             Crag (#289)          rxd    this none this
-------------------------------- finished ---------------------------------
Verb permissions set to "rx".
#289:core_objects, line 2:  Task ran out of ticks
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #289:core_objects, line 8
... called from #-1:Input to EVAL, line 4
... called from built-in function eval()
... called from #52:eval_cmd_string (this == #289), line 21
... called from #52:eval eval-d eval+d (this == #289), line 16
(End of traceback)
That is not a valid command.
That is not a valid command.
You see no "@0" here.
System Object (#0) [ readable ]
  Owned by Core-Wizard (#191).
  Child of builtin function definitions (#158).
  Location generic room (#3).
-------------------------------- finished ---------------------------------
System Object (#0) [ readable ]
  Owned by Core-Wizard (#191).
  Child of builtin function definitions (#158).
  Location generic room (#3).
.builder                 Core-Wizard (#191)    r c    #4
.login                   Core-Wizard (#191)    r      #10
.last_huh                Core-Wizard (#191)    r      #11
.guest_log               Core-Wizard (#191)    r      #12
.last_restart_time       Core-Wizard (#191)    r c    1153471118
.biglist                 Core-Wizard (#191)    r c    #13
.big_mail_recipient      Core-Wizard (#191)    r c    #14
.limbo                   Core-Wizard (#191)    r c    #15
.registration_db         Core-Wizard (#191)    r c    #16
.new_player_log          Core-Wizard (#191)    r c    #17
.verb_help               Core-Wizard (#191)    r c    #20
.core_help               Core-Wizard (#191)    r c    #21
.prog_help               Core-Wizard (#191)    r c    #22
.wiz_help                Core-Wizard (#191)    r c    #23
.shutdown_task           Core-Wizard (#191)    r c    E_NONE
.wiz_utils               Core-Wizard (#191)    r c    #24
.site_db                 Core-Wizard (#191)    r c    #25
.math_utils              Core-Wizard (#191)    r c    #26
.set_utils               Core-Wizard (#191)    r c    #27
.builtin_function_help   Core-Wizard (#191)    r c    #28
.new_prog_log            Core-Wizard (#191)    r c    #29
.generic_help            Core-Wizard (#191)    r c    #30
.guest                   Core-Wizard (#191)    r      #31
.seq_utils               Core-Wizard (#191)    r c    #32
.quota_log               Core-Wizard (#191)    r c    #33
.you                     unknown hack (#35)    r      #34
.hacker                  Core-Wizard (#191)    r c    #35
.generic_db              Core-Wizard (#191)    r c    #79
.shutdown_message        Core-Wizard (#191)    r c    ""
.shutdown_time           Core-Wizard (#191)    r c    1144034169
.no_one                  Core-Wizard (#191)    r      #36
.player_db               Core-Wizard (#191)    r      #37
.player_class            Core-Wizard (#191)    r c    #6
.gender_utils            Core-Wizard (#191)    r      #38
.trig_utils              Core-Wizard (#191)    r c    #26
.time_utils              Core-Wizard (#191)    r c    #39
.editor_help             Core-Wizard (#191)    r c    #40
.mail_recipient          Core-Wizard (#191)    r c    #41
.mail_agent              Core-Wizard (#191)    r c    #42
.mail_editor             Core-Wizard (#191)    r c    #43
.note_editor             Core-Wizard (#191)    r c    #44
.verb_editor             Core-Wizard (#191)    r c    #45
.generic_editor          Core-Wizard (#191)    r c    #46
.object_utils            Core-Wizard (#191)    r c    #47
.lock_utils              Core-Wizard (#191)    r c    #48
.gripe_recipients        Core-Wizard (#191)    r c    {#2}
.dump_interval           Core-Wizard (#191)    r c    18000
.list_utils              Core-Wizard (#191)    r c    #49
.command_utils           Core-Wizard (#191)    r c    #50
.player                  Core-Wizard (#191)    r c    #6
.wiz                     Core-Wizard (#191)    r c    #51
.prog                    Core-Wizard (#191)    r c    #52
.code_utils              Core-Wizard (#191)    r c    #53
.help                    Core-Wizard (#191)    r c    #54
.nothing                 Core-Wizard (#191)    r c    #-1
.failed_match            Core-Wizard (#191)    r c    #-3
.ambiguous_match         Core-Wizard (#191)    r c    #-2
.perm_utils              Core-Wizard (#191)    r c    #134
.building_utils          Core-Wizard (#191)    r c    #19
.string_utils            Core-Wizard (#191)    r c    #18
.news                    Core-Wizard (#191)    r c    #146
.note                    Core-Wizard (#191)    r c    #9
.container               Core-Wizard (#191)    r c    #130
.thing                   Core-Wizard (#191)    r c    #5
.exit                    Core-Wizard (#191)    r c    #7
.room                    Core-Wizard (#191)    r c    #3
.player_start            Core-Wizard (#191)    r c    #70
.root_class              Core-Wizard (#191)    r c    #1
.recycler                Core-Wizard (#191)    r c    #55
.garbage                 Core-Wizard (#191)    r c    #56
.mail_options            Core-Wizard (#191)    r c    #57
.edit_options            Core-Wizard (#191)    r c    #58
.display_options         Core-Wizard (#191)    r c    #59
.generic_options         Core-Wizard (#191)    r c    #60
.maxint                  Core-Wizard (#191)    r c    2147483647
.minint                  Core-Wizard (#191)    r c    -2147483648
.list_options            Core-Wizard (#191)    r c    #61
.error                   Core-Wizard (#191)    r c    #66
.newt_log                Core-Wizard (#191)    r c    #109
.toad_log                Core-Wizard (#191)    r c    #62
.site_log                Core-Wizard (#191)    r c    #62
.housekeeper             Core-Wizard (#191)    r c    #63
.feature                 Core-Wizard (#191)    r      #65
.pronoun_sub             Core-Wizard (#191)    r      #69
.they                    Core-Wizard (#191)    r      #71
.login_watcher           Core-Wizard (#191)    r c    #84
.english                 Core-Wizard (#191)    r      #72
.language                Core-Wizard (#191)    r      #72
.integration_utils       Core-Wizard (#191)    r c    #74
.network                 Core-Wizard (#191)    r c    #83
.country_db              Core-Wizard (#191)    r      #95
.jtext                   Core-Wizard (#191)    r      #93
.list_editor             Core-Wizard (#191)    r      #108
.feature_help            Core-Wizard (#191)    r      #102
.jaddress                Core-Wizard (#191)    r      #114
.misc_options            Core-Wizard (#191)    r      #115
.client_options          Core-Wizard (#191)    r      #120
.out_of_band             Core-Wizard (#191)    r c    #117
.building_options        Core-Wizard (#191)    r c    #126
.it                      Core-Wizard (#191)    r c    #159
.nobody                  Core-Wizard (#191)    r c    #36
.furniture               Core-Wizard (#191)    r c    #81
.sittable                Core-Wizard (#191)    r c    #80
.I                       Core-Wizard (#191)    r c    #165
.everything              Core-Wizard (#191)    r c    #144
.all                     Core-Wizard (#191)    r c    #105
.nowhere                 Core-Wizard (#191)    r c    #-1
.admin_group             Core-Wizard (#191)    r c    #168
.steering_committee      Core-Wizard (#191)    r c    #142
.db_group                Core-Wizard (#191)    r c    #153
.unix_group              Core-Wizard (#191)    r c    #152
.community_group         Core-Wizard (#191)    r c    #170
.tech_group              Core-Wizard (#191)    r c    #169
.admin_mail_recipient    Core-Wizard (#191)    r c    #110
.registrar               Core-Wizard (#191)    r c    #111
.event_dispatcher        Core-Wizard (#191)    r c    #113
.prog_group              Core-Wizard (#191)    r c    #128
.openable_container      Core-Wizard (#191)    r c    #8
.containing_object       Core-Wizard (#191)    r c    #150
.utils                   Core-Wizard (#191)    r c    #151
.biglist_utils           Core-Wizard (#191)    r c    #13
.english_utils           Core-Wizard (#191)    r c    #72
.boot_log                Core-Wizard (#191)    r c    #86
.help_editor             Core-Wizard (#191)    r      #177
.object_help             Core-Wizard (#191)    r c    #179
.tester                  Core-Wizard (#191)    r      #100
.failed_help             Core-Wizard (#191)    r      #131
.who_options             Core-Wizard (#191)    r c    #90
.who_utils               Core-Wizard (#191)    r c    #90
.event_handler           Core-Wizard (#191)    r c    #137
.eval_options            Core-Wizard (#191)    r c    #141
.he                      Core-Wizard (#191)    r c    #161
.she                     Core-Wizard (#191)    r c    #162
.e                       Core-Wizard (#191)    r c    #163
.we                      Core-Wizard (#191)    r c    #164
.plural_you              Core-Wizard (#191)    r c    #166
.either                  Core-Wizard (#191)    r c    #167
.splat                   Core-Wizard (#191)    r c    #171
.gender                  Core-Wizard (#191)    r c    #64
.neuter                  Core-Wizard (#191)    r c    #159
.egotistical             Core-Wizard (#191)    r c    #165
.plural                  Core-Wizard (#191)    r c    #71
.royal                   Core-Wizard (#191)    r c    #164
.male                    Core-Wizard (#191)    r c    #161
.female                  Core-Wizard (#191)    r c    #162
.Spivak                  Core-Wizard (#191)    r c    #163
.second                  Core-Wizard (#191)    r c    #34
.second_plural           Core-Wizard (#191)    r c    #166
.singular                Core-Wizard (#191)    r c    #159
.none                    Core-Wizard (#191)    r c    #172
.topic                   Core-Wizard (#191)    r c    #185
.builder_help            Core-Wizard (#191)    r      #160
.name_utils              Core-Wizard (#191)    r      #183
.guest_help              Core-Wizard (#191)    r      #174
.parse_utils             Core-Wizard (#191)    r      #121
.admin                   Core-Wizard (#191)    r      #176
.core_wizard             Core-Wizard (#191)    r      #191
.first_wizard            Core-Wizard (#191)    r c    #2
.door                    Core-Wizard (#191)    r      #125
.ftp                     Core-Wizard (#191)    r c    #3953
.__core_init_phase       Core-Wizard (#191)    r      0
.quota_utils             Core-Wizard (#191)    r c    #180
.window                  Core-Wizard (#191)    r c    #186
.server_options          Core-Wizard (#191)    r      #196
.walking_utils           Core-Wizard (#191)    r      #189
.maxfloat                Core-Wizard (#191)    r c    1.79769313486231e+308
.checkpointer            Core-Wizard (#191)    r      #181
.startup                 Core-Wizard (#191)    r c    #198
.syslog                  Core-Wizard (#191)    r      #190
.core_extraction_time    Core-Wizard (#191)    r      845851679
.generic_biglist_home    Core-Wizard (#191)    r      #75
.http                    Core-Wizard (#191)    r c    #88
.module                  Core-Wizard (#191)    r      #1716
.review_group            Xonny (#202)          r      #230
.property_farm           Xythian (#199)        r      #1747
.modules                 Xythian (#199)        r      #1743
.smtp                    Core-Wizard (#191)    r c    #1897
.cord                    Core-Wizard (#191)    r c    #1944
.mcp                     Core-Wizard (#191)    r c    #1912
.parse_options           Core-Wizard (#191)    r c    #674
.ftp_client              Core-Wizard (#191)    r c    #2878
.local                   Ben (#269)            r c    #848
.building_group          Xythian (#199)        r      #813
.TWin                    Ken (#200)            r      #2285
.waif                    Xeric (#999)          r      #302
.macmoose_utils          Xythian (#199)        r      #1902
.documentation_group     Xythian (#199)        r      #2901
.first_restart_time      Xythian (#199)        r      845958877
.room_matching_utils     Xythian (#199)        r      #444
.policy_help             Xythian (#199)        r      #4536
.admin_help              Core-Wizard (#191)    r c    #4723
.jhcore_help             Core-Wizard (#191)    r c    #4715
.dict                    Core-Wizard (#191)    r c    #3610
.namebuilder_i           Core-Wizard (#191)    r c    #2709
.namebuilder_d           Core-Wizard (#191)    r c    #5081
-------------------------------- finished ---------------------------------
Login Commands (#10) [ readable ]
  Owned by Core-Wizard (#191).
  Child of root class (#1).
.welcome_message         Core-Wizard (#191)    r c    {"Waterpoint: TOO LATE,..
.newt_registration_string Core-Wizard (#191)   r c    "Your character registr..
.registration_string     Core-Wizard (#191)    r c    "Character creation is ..
.registration_address    Core-Wizard (#191)    r c    "fox@mars.org"
.create_enabled          Core-Wizard (#191)    r c    0
.bogus_command           Core-Wizard (#191)    r      "?"
.blank_command           Core-Wizard (#191)    r      "help"
.graylist                   ** unreadable **
.blacklist                  ** unreadable **
.redlist                    ** unreadable **
.spooflist                  ** unreadable **
.bootlist                   ** unreadable **
.newted                     ** unreadable **
.sitematch_guests        Core-Wizard (#191)    r c    1
.testers                 Core-Wizard (#191)    r      {}
.max_guests              Core-Wizard (#191)    r      0
.registration_text       Core-Wizard (#191)    r c    "Please see the Waterpo..
.who_enabled             Core-Wizard (#191)    r c    0
.request_enabled         Core-Wizard (#191)    r c    0
.preferred_registration_method Core-Wizard (#191) r c "www"
-------------------------------- finished ---------------------------------
=> {{}, {}}
root waif (#302) [ readable fertile ]
  Owned by Xeric (#999).
  Child of root class (#1).
  Location Xeric (#999).
.type                    Xeric (#999)          r      10
-------------------------------- finished ---------------------------------
SMTP (#1897) [ readable ]
  Owned by Xythian (#199).
  Child of root class (#1).
.trusts                  Xythian (#199)        r      {}
.error                   Xythian (#199)        r      "SMTP error"
.error_code              Xythian (#199)        r      "SMTP wrong response"
.debugging               Xythian (#199)        r      0
.time_format             Xythian (#199)        r c    "$d, $T $n $Y $H:$M:$S ..
.queued_mail_task        Xythian (#199)        r      1197213801
.queued_messages            ** unreadable **
.queue_interval          Xythian (#199)        r      600
-------------------------------- finished ---------------------------------
root class (#1) [ readable fertile ]
  Owned by Core-Wizard (#191).
  Child of ** none ** (#-1).
.key                        ** unreadable **
.aliases                 Core-Wizard (#191)    r c    {"root class"}
.description             Core-Wizard (#191)    r c    ""
.visible                 unknown hack (#35)    r      1
.integrate_room_msg      Core-Wizard (#191)    r c    ""
.integrate_player_msg    Core-Wizard (#191)    r c    ""
.integrate_container_msg Core-Wizard (#191)    r c    ""
.unique                  Core-Wizard (#191)    r c    1
.proper                  Core-Wizard (#191)    r c    0
.integrate_in            unknown hack (#35)    r      {#150}
.handlers                unknown hack (#35)    r      {}
.number                  unknown hack (#35)    r      1
.offered                 Core-Wizard (#191)    r      #-1
.object_size             Quota (#192)          r      {72155, 1154678400}
.review_marks            Xonny (#202)          r      {}
.review_history             ** unreadable **
-------------------------------- finished ---------------------------------
You see no "$buildre" here.
generic builder (#4) [ readable ]
  Owned by Core-Wizard (#191).
  Child of generic player (#6).
  Location generic room (#3).
.recreate_enabled        Core-Wizard (#191)    r c    1
.building_options        Core-Wizard (#191)    r c    {}
-------------------------------- finished ---------------------------------
Now programming Crag:core_objects[2](1).
[Type lines of input; use `.' to end or `@abort' to abort the command.]
0 errors.
Verb programmed.
=> {{#4, #10, #11, #12, #13, #14, #35, #15, #16, #17, #20, #21, #22, #23, #24, #25, #26, #27, #28, #29, #30, #31, #163, #36, #32, #33, #34, #79, #37, #6, #70, #78, #39, #38, #40, #41, #42, #43, #44, #45, #46, #47, #48, #251, #49, #50, #51, #52, #53, #54, #175, #119, #134, #19, #18, #146, #9, #130, #5, #7, #3, #1, #55, #56, #57, #58, #59, #60, #61, #66, #109, #62, #63, #65, #156, #6216, #69, #77, #73, #71, #84, #76, #72, #187, #105, #144, #74, #83, #95, #93, #94, #127, #147, #106, #96, #92, #98, #104, #97, #85, #87, #103, #99, #132, #133, #124, #143, #118, #129, #123, #139, #108, #102, #114, #112, #135, #91, #122, #148, #149, #178, #115, #120, #117, #126, #159, #81, #80, #165, #168, #2, #142, #153, #152, #170, #154, #169, #110, #111, #113, #128, #8, #150, #151, #86, #177, #179, #100, #131, #145, #90, #137, #141, #161, #162, #164, #166, #167, #171, #64, #172, #185, #160, #183, #136, #4607, #174, #121, #176, #191, #125, #3953, #180, #7044, #186, #196, #189, #181, #198, #190, #75, #88, #1716, #230, #1747, #1743, #1683, #1753, #1425, #1650, #1136, #1606, #1620, #1752, #1484, #2884, #2839, #1915, #1912, #1942, #1721, #1918, #1917, #1784, #1920, #4454, #4725, #1943, #1921, #1922, #1306, #1902, #1930, #1677, #2315, #1897, #1907, #1987, #2285, #2367, #2250, #2355, #307, #1051, #2313, #2351, #1811, #2247, #2370, #2220, #2382, #2331, #2277, #2457, #2215, #1911, #2270, #2168, #2345, #2352, #2325, #2307, #1661, #2372, #2401, #1717, #2383, #2264, #2348, #2289, #2440, #2306, #1477, #1630, #2310, #2358, #2284, #2442, #2467, #2330, #2350, #1855, #2282, #703, #2347, #2267, #2379, #2109, #1524, #2463, #1782, #2361, #2195, #2380, #1468, #715, #2217, #1609, #1813, #2374, #1453, #2360, #2464, #2433, #1036, #1196, #1365, #2443, #2292, #2422, #2342, #2182, #1303, #1734, #2288, #2261, #990, #2368, #2391, #2296, #1249, #2254, #2327, #2251, #2381, #2446, #2271, #2272, #2253, #2266, #2354, #2399, #1954, #2262, #2097, #2447, #2175, #4966, #5107, #5115, #2822, #1887, #1807, #2004, #3670, #67, #68, #1937, #1959, #1830, #1905, #1944, #674, #2878, #848, #637, #823, #414, #460, #671, #1197, #333, #395, #666, #808, #874, #474, #668, #444, #206, #563, #931, #412, #606, #3814, #559, #1016, #1044, #4826, #802, #1079, #1680, #1578, #1600, #743, #1527, #504, #436, #1087, #1913, #1114, #400, #830, #1111, #827, #826, #212, #940, #742, #1604, #2017, #2022, #2459, #2194, #522, #2414, #1893, #1541, #1983, #2014, #1703, #2005, #2045, #1552, #2056, #2059, #467, #1133, #4245, #4271, #2187, #4281, #3921, #4191, #2000, #3025, #4283, #4188, #4323, #2042, #5874, #1587, #262, #355, #993, #2323, #780, #4031, #1927, #2530, #1011, #2402, #2462, #2438, #2603, #2611, #2777, #2835, #2785, #2844, #667, #775, #2824, #2208, #996, #974, #3334, #6836, #6934, #6981, #3555, #3394, #2290, #3737, #4256, #3507, #4430, #3065, #6424, #4861, #7038, #2561, #4730, #4706, #5402, #2600, #4924, #4899, #4931, #4716, #4938, #3517, #2865, #4682, #4914, #5536, #5327, #5117, #2256, #5193, #4397, #3575, #5401, #5472, #5397, #3048, #5530, #5549, #3961, #4952, #5418, #5437, #3360, #3638, #4870, #5442, #3056, #560, #4409, #4921, #4891, #5796, #4995, #6006, #2069, #1636, #3968, #5082, #5721, #3571, #6174, #6011, #5731, #2236, #4555, #5416, #5080, #1989, #5025, #3464, #5717, #6123, #3748, #3335, #3336, #6727, #5269, #2500, #7000, #6864, #3444, #6454, #750, #6079, #6096, #275, #2929, #6780, #813, #302, #2901, #4536, #4723, #4715, #3610, #5203, #2709, #5081}, {"$.builder", "$.login", "$.last_huh", "$.guest_log", "$.biglist", "$.big_mail_recipient", "$.big_mail_recipient.mowner", "$.limbo", "$.registration_db", "$.new_player_log", "$.verb_help", "$.core_help", "$.prog_help", "$.wiz_help", "$.wiz_utils", "$.site_db", "$.math_utils", "$.set_utils", "$.builtin_function_help", "$.new_prog_log", "$.generic_help", "$.guest", "$.guest.default_gender", "$.guest.known_player", "$.seq_utils", "$.quota_log", "$.you", "$.generic_db", "$.player_db", "$.player_class", "$.player_class.home", "$.player_class.pronoun_sub_style", "$.player_class.timezone", "$.gender_utils", "$.editor_help", "$.mail_recipient", "$.mail_agent", "$.mail_editor", "$.note_editor", "$.verb_editor", "$.generic_editor", "$.object_utils", "$.lock_utils", "$.lock_utils.player", "$.list_utils", "$.command_utils", "$.wiz", "$.prog", "$.code_utils", "$.help", "$.help.author_feature", "$.help.author_feature.generic_personal_db", "$.perm_utils", "$.building_utils", "$.string_utils", "$.news", "$.note", "$.container", "$.thing", "$.exit", "$.room", "$.root_class", "$.recycler", "$.garbage", "$.mail_options", "$.edit_options", "$.display_options", "$.generic_options", "$.list_options", "$.error", "$.newt_log", "$.toad_log", "$.housekeeper", "$.feature", "$.feature.registry", "$.feature.registry.open", "$.pronoun_sub", "$.pronoun_sub.lambdacore", "$.pronoun_sub.generic", "$.they", "$.login_watcher", "$.login_watcher.options", "$.english", "$.english.here", "$.english.all", "$.english.everything", "$.integration_utils", "$.network", "$.country_db", "$.jtext", "$.jtext.hgroup", "$.jtext.link", "$.jtext.link.preceding", "$.jtext.link.root", "$.jtext.link.browser", "$.jtext.root", "$.jtext.vgroup", "$.jtext.header", "$.jtext.title", "$.jtext.string", "$.jtext.list_of_strings", "$.jtext.paragraph", "$.jtext.dlist", "$.jtext.plaintext", "$.jtext.list", "$.jtext.index", "$.jtext.itemize", "$.jtext.itemize_unnumbered", "$.jtext.itemize_numbered", "$.jtext.isindex", "$.jtext.hr", "$.list_editor", "$.feature_help", "$.jaddress", "$.jaddress.root", "$.jaddress.help", "$.jaddress.browser_object", "$.jaddress.note", "$.jaddress.browser_verb", "$.jaddress.browser_inherited_properties", "$.jaddress.resolved_help", "$.misc_options", "$.client_options", "$.out_of_band", "$.building_options", "$.it", "$.furniture", "$.sittable", "$.I", "$.admin_group", "$.admin_group.leader", "$.steering_committee", "$.db_group", "$.unix_group", "$.community_group", "$.community_group.feature", "$.tech_group", "$.admin_mail_recipient", "$.registrar", "$.event_dispatcher", "$.prog_group", "$.openable_container", "$.containing_object", "$.utils", "$.boot_log", "$.help_editor", "$.object_help", "$.tester", "$.failed_help", "$.failed_help.help_recipient", "$.who_options", "$.event_handler", "$.eval_options", "$.he", "$.she", "$.we", "$.plural_you", "$.either", "$.splat", "$.gender", "$.none", "$.topic", "$.builder_help", "$.name_utils", "$.name_utils.dummy", "$.name_utils.dummy_builder", "$.guest_help", "$.parse_utils", "$.admin", "$.core_wizard", "$.door", "$.ftp", "$.quota_utils", "$.quota_utils.working", "$.window", "$.server_options", "$.walking_utils", "$.checkpointer", "$.startup", "$.syslog", "$.generic_biglist_home", "$.http", "$.module", "$.review_group", "$.property_farm", "$.modules", "$.modules.module", "$.modules.module.obj_sink_player", "$.modules.module.obj_sink_note", "$.modules.module.obj_source_generic", "$.modules.module.obj_source_http", "$.modules.module.obj_source_player", "$.modules.module.obj_sink_generic_spam", "$.modules.module.obj_sink_generic", "$.modules.module.obj_generic_source_or_sink", "$.modules.module.obj_ftp_sink", "$.modules.module.obj_ftp_source", "$.modules.mcp", "$.modules.mcp.obj_mcp", "$.modules.mcp.obj_mcp.parser", "$.modules.mcp.obj_mcp.session", "$.modules.mcp.obj_mcp.package", "$.modules.mcp.obj_mcp.negotiate", "$.modules.mcp.obj_mcp.registry", "$.modules.mcp.obj_mcp.cord", "$.modules.mcp.obj_mcp.supplementary_listener", "$.modules.mcp.obj_mcp.supplementary_listener.twin_login", "$.modules.mcp.obj_cord_stub", "$.modules.mcp.obj_type_root", "$.modules.mcp.obj_message_dispatcher", "$.modules.macmoose", "$.modules.macmoose.obj_macmoose_utils", "$.modules.simpleedit", "$.modules.simpleedit.obj_simpleedit_package", "$.modules.smtp", "$.modules.smtp.obj_smtp", "$.modules.TWin", "$.modules.TWin.obj_local_generic_listener", "$.modules.TWin.obj_twin", "$.modules.TWin.obj_twin.form", "$.modules.TWin.obj_twin.form.cord_type", "$.modules.TWin.obj_twin.state_manager", "$.modules.TWin.obj_twin.parser", "$.modules.TWin.obj_twin.parser.root_widget", "$.modules.TWin.obj_twin.help", "$.modules.TWin.obj_twin.connection", "$.modules.TWin.obj_twin.listener", "$.modules.TWin.obj_twin.packages", "$.modules.TWin.obj_twin.packages.window", "$.modules.TWin.obj_twin.form_dialog", "$.modules.TWin.obj_widget_Window", "$.modules.TWin.obj_widget_Label", "$.modules.TWin.obj_widget_VBox", "$.modules.TWin.obj_widget_HBox", "$.modules.TWin.obj_widget_Space", "$.modules.TWin.obj_widget_TypeIn", "$.modules.TWin.obj_widget_Button", "$.modules.TWin.obj_widget_Fill", "$.modules.TWin.obj_widget_Separator", "$.modules.TWin.obj_widget_TextEdit", "$.modules.TWin.obj_widget_ListBox", "$.modules.TWin.obj_widget_Checkbox", "$.modules.TWin.obj_widget_Shape", "$.modules.TWin.obj_widget_Frame", "$.modules.TWin.obj_widget_Radio", "$.modules.TWin.obj_widget_RadioButton", "$.modules.TWin.obj_widget_Numeric", "$.modules.TWin.obj_widget_MenuBar", "$.modules.TWin.obj_widget_Menu", "$.modules.TWin.obj_widget_MenuSeparator", "$.modules.TWin.obj_widget_MenuButton", "$.modules.TWin.obj_widget_MenuCheckbox", "$.modules.TWin.obj_attribute_Title", "$.modules.TWin.obj_attribute_FirstFocus", "$.modules.TWin.obj_attribute_DefaultButton", "$.modules.TWin.obj_attribute_Main", "$.modules.TWin.obj_attribute_Center", "$.modules.TWin.obj_attribute_LeftAlign", "$.modules.TWin.obj_attribute_RightAlign", "$.modules.TWin.obj_attribute_Margin", "$.modules.TWin.obj_attribute_Main_Size", "$.modules.TWin.obj_attribute_Value_String", "$.modules.TWin.obj_attribute_ReadOnly", "$.modules.TWin.obj_attribute_Value_StringList", "$.modules.TWin.obj_attribute_Wrap", "$.modules.TWin.obj_attribute_Items", "$.modules.TWin.obj_attribute_Value_IntegerList", "$.modules.TWin.obj_attribute_Multiple", "$.modules.TWin.obj_attribute_Value_Boolean", "$.modules.TWin.obj_attribute_Height", "$.modules.TWin.obj_attribute_Width", "$.modules.TWin.obj_attribute_Raised", "$.modules.TWin.obj_attribute_Lowered", "$.modules.TWin.obj_attribute_Groove", "$.modules.TWin.obj_attribute_Value_Subwidget", "$.modules.TWin.obj_attribute_Value_Integer", "$.modules.TWin.obj_attribute_Min", "$.modules.TWin.obj_attribute_Max", "$.modules.TWin.obj_attribute_Slider", "$.modules.TWin.obj_attribute_Name", "$.modules.TWin.obj_attribute_Font", "$.modules.TWin.obj_attribute_LabelFont", "$.modules.TWin.obj_attribute_Private", "$.modules.TWin.obj_attribute_BgColor", "$.modules.TWin.obj_attribute_FgColor", "$.modules.TWin.obj_type_String", "$.modules.TWin.obj_type_Subwidget", "$.modules.TWin.obj_type_Boolean", "$.modules.TWin.obj_type_Integer", "$.modules.TWin.obj_type_Size", "$.modules.TWin.obj_type_Widget", "$.modules.TWin.obj_type_StringList", "$.modules.TWin.obj_type_IntegerList", "$.modules.TWin.obj_type_Symbol", "$.modules.TWin.obj_type_Font", "$.modules.TWin.obj_type_Color", "$.modules.TWin.obj_filter", "$.modules.TWin.obj_leaf", "$.modules.TWin.obj_split", "$.modules.TWin.obj_component", "$.modules.TWin.obj_attribute", "$.modules.TWin.obj_type", "$.modules.TWin.obj_type_list", "$.modules.TWin.obj_attribute_Password", "$.modules.TWin.obj_obj_attribute_Flat", "$.modules.TWin.obj_widget_TypeOut", "$.modules.TWin.obj_attribute_TypeOut", "$.modules.TWin.obj_event_set", "$.modules.TWin.obj_event_invoke", "$.modules.TWin.obj_attribute_Source", "$.modules.TWin.obj_widget_Image", "$.modules.TWin.obj_event_invoke_listbox", "$.modules.TWin.obj_event_invoke_listbox.null_event", "$.modules.TWin.obj_event_set_simple", "$.modules.TWin.obj_event", "$.modules.TWin.obj_cord_twin_window", "$.modules.TWin.obj_event_invoke_typein", "$.modules.TWin.obj_widget_tab", "$.modules.TWin.obj_widget_tabbed", "$.modules.TWin.obj_attribute_tabto", "$.modules.listeners", "$.modules.listeners.obj_daemon", "$.modules.listeners.obj_daemon_handler", "$.modules.listeners.obj_redlist_daemon", "$.modules.core_features", "$.modules.core_features.obj_stage_talk", "$.modules.core_features.obj_thinking", "$.modules.httpd", "$.modules.httpd.obj_http_handler", "$.modules.httpd.obj_auth_http_handler", "$.modules.httpd.http_daemon", "$.cord", "$.parse_options", "$.ftp_client", "$.local", "$.local.boat", "$.local.boat.launch_exit", "$.local.boat.water", "$.local.boat.water.churning_depths", "$.local.boat.water.ship_to_water", "$.local.boat.water.ship_to_water.water_to_ship_exit", "$.local.dictionary", "$.local.vehicle", "$.local.rpg", "$.local.rpg.doll", "$.local.rpg.options", "$.local.coastal_path_room", "$.local.coastal_path_room.path_zone", "$.local.room_matching_utils", "$.local.room_matching_utils.party_feature", "$.local.room_matching_utils.ship_room", "$.local.zone", "$.local.time", "$.local.time.sun", "$.local.time.sun.events", "$.local.water_exit", "$.local.peril", "$.local.peril.army", "$.local.peril.army_namebuilder", "$.local.magic_number_dispenser", "$.local.idle_watcher", "$.local.wetness", "$.local.character_request_list", "$.local.dmz", "$.local.srpg", "$.local.srpg.npc_fo", "$.local.srpg.reincarnation_room", "$.local.srpg.whos_feature", "$.local.weather", "$.local.party", "$.local.emoticon", "$.local.abby", "$.local.abby.brain", "$.local.abby.brain.van", "$.local.abby.home", "$.local.abby.a_brain", "$.local.abby.pasting_feature", "$.local.abby.matcher", "$.local.abby.parrot", "$.local.abby.generic_message", "$.local.httpd", "$.local.httpd.root", "$.local.httpd.root.object", "$.local.httpd.root.tree", "$.local.httpd.root.page", "$.local.httpd.root_page", "$.local.ocean", "$.local.ocean.events", "$.local.ocean.events.heartbeat", "$.local.ocean.events.collision", "$.local.ocean.island", "$.local.ocean.waterpoint_island", "$.local.ocean.visibility", "$.local.ocean.dock", "$.local.ocean.ferry", "$.local.ocean.ferry.room", "$.local.ocean.ship", "$.local.ocean.room_zone", "$.local.ocean.errors", "$.local.ocean.water_connection_exit", "$.local.ocean.gps", "$.local.ocean.gps.entity", "$.local.ocean.gps.span", "$.local.ocean.gps.waypoint", "$.local.ocean.gps.map", "$.local.ocean.gps.map.entity", "$.local.ocean.gps.map.bounds", "$.local.ocean.gps.map.scaleinfo", "$.local.ocean.gps.map.jsentity", "$.local.ocean.dock_boat", "$.local.ocean.reckoning", "$.local.coordinate_space", "$.local.coordinate_space.generic_object", "$.local.collectable", "$.local.spammy", "$.local.stars", "$.local.welcome_messages", "$.local.welcome_messages.welcome_message_waif", "$.local.account", "$.local.account.request", "$.local.group_waif", "$.local.resolver", "$.local.resolver.header", "$.local.resolver.header.query", "$.local.resolver.header.resource", "$.local.sema", "$.local.cane", "$.local.server_group", "$.local.measurement_utils", "$.local.xml", "$.local.xml.node", "$.local.shareable_note", "$.local.systran", "$.local.welcome_messages_recipient", "$.local.condition", "$.local.food", "$.local.comp_utils", "$.local.comp_utils.chart_waif", "$.local.comp_utils.namebuilder_represent", "$.local.comp_utils.coll_namebuilder_i", "$.local.measure_utils", "$.local.fire", "$.local.welcome_message_group", "$.local.person", "$.local.error", "$.local.sexpr", "$.local.room_shell", "$.local.fetcher", "$.local.fetcher.ocean_object", "$.local.fetcher.adaptor", "$.local.fetcher.water_room", "$.local.fetcher.home", "$.local.fetcher.police_box", "$.local.fetcher.police_box.shell", "$.local.fetcher.police_box.shell.vortex", "$.local.fetcher.police_box.shell.last_island", "$.local.xmlrpc", "$.local.xmlrpc.struct_waif", "$.local.xmlrpc.dateTime_waif", "$.local.xmlrpc.registry", "$.local.xmlrpc.server_proxy_waif", "$.local.xmlrpc.module_proxy_waif", "$.local.bignum_utils", "$.local.quicksilver_utils", "$.local.quicksilver_utils.pez", "$.local.quicksilver_utils.namebuilder_d", "$.local.sql", "$.local.lexicon", "$.local.lexicon.game_waif", "$.local.lexicon.feature", "$.local.lexicon.feature.options_package", "$.local.lexicon.game_registry", "$.local.lexicon.game_registry_book", "$.local.lexicon.twin_player", "$.local.lexicon.twin_words", "$.local.lexicon.unknown_player", "$.local.lexicon.twin_generic", "$.local.lexicon.twin_history", "$.local.lexicon.registry_range_iterator", "$.local.lexicon.registry_rule_match_iterator", "$.local.workspace", "$.local.workspace.feature", "$.local.foodstuff", "$.local.forwarder", "$.local.getopt", "$.local.packrat", "$.local.packrat.scrapheap", "$.local.packrat.black_hole_of_despair", "$.local.packrat.cheese", "$.local.matrix", "$.local.progress", "$.local.macaw", "$.local.cell", "$.local.geometry", "$.local.geometry.rcd", "$.local.geometry.ocean_object", "$.local.tinyurl", "$.local.tinyurl.feature", "$.local.dict", "$.local.csdict", "$.local.type", "$.local.rdf", "$.local.rdf.store_waif", "$.local.rdf.rdfxml_loader", "$.local.mars_utils", "$.local.crypto", "$.local.uli", "$.local.word_server", "$.local.material", "$.local.material.water", "$.local.material.black_sand", "$.local.name_builder", "$.local.topo_utils", "$.local.action", "$.local.action.generic", "$.local.action.put", "$.local.jabber", "$.local.jabber.buddy", "$.local.jabber.feature", "$.local.jabber.feature.options", "$.local.magic", "$.local.magic.generic_legs", "$.local.xmlweather", "$.local.xmlweather.options", "$.local.xmlweather.trophy", "$.local.xmlweather.trophy.winner", "$.local.xmlweather.trophy.engine", "$.local.urlutils", "$.building_group", "$.waif", "$.documentation_group", "$.policy_help", "$.admin_help", "$.jhcore_help", "$.dict", "$.dict._waif_class", "$.namebuilder_i", "$.namebuilder_d"}}
=> #5203 (dictionary waif)
Now programming Crag:core_objects[2](1).
[Type lines of input; use `.' to end or `@abort' to abort the command.]
0 errors.
Verb programmed.
=> {{#4, #10, #11, #12, #13, #14, #35, #15, #16, #17, #20, #21, #22, #23, #24, #25, #26, #27, #28, #29, #30, #31, #163, #36, #32, #33, #34, #79, #37, #6, #70, #78, #39, #38, #40, #41, #42, #43, #44, #45, #46, #47, #48, #251, #49, #50, #51, #52, #53, #54, #175, #119, #134, #19, #18, #146, #9, #130, #5, #7, #3, #1, #55, #56, #57, #58, #59, #60, #61, #66, #109, #62, #63, #65, #156, #6216, #69, #77, #73, #71, #84, #76, #72, #187, #105, #144, #74, #83, #95, #93, #94, #127, #147, #106, #96, #92, #98, #104, #97, #85, #87, #103, #99, #132, #133, #124, #143, #118, #129, #123, #139, #108, #102, #114, #112, #135, #91, #122, #148, #149, #178, #115, #120, #117, #126, #159, #81, #80, #165, #168, #2, #142, #153, #152, #170, #154, #169, #110, #111, #113, #128, #8, #150, #151, #86, #177, #179, #100, #131, #145, #90, #137, #141, #161, #162, #164, #166, #167, #171, #64, #172, #185, #160, #183, #136, #4607, #174, #121, #176, #191, #125, #3953, #180, #7044, #186, #196, #189, #181, #198, #190, #75, #88, #1716, #230, #1747, #1743, #1683, #1753, #1425, #1650, #1136, #1606, #1620, #1752, #1484, #2884, #2839, #1915, #1912, #1942, #1721, #1918, #1917, #1784, #1920, #4454, #4725, #1943, #1921, #1922, #1306, #1902, #1930, #1677, #2315, #1897, #1907, #1987, #2285, #2367, #2250, #2355, #307, #1051, #2313, #2351, #1811, #2247, #2370, #2220, #2382, #2331, #2277, #2457, #2215, #1911, #2270, #2168, #2345, #2352, #2325, #2307, #1661, #2372, #2401, #1717, #2383, #2264, #2348, #2289, #2440, #2306, #1477, #1630, #2310, #2358, #2284, #2442, #2467, #2330, #2350, #1855, #2282, #703, #2347, #2267, #2379, #2109, #1524, #2463, #1782, #2361, #2195, #2380, #1468, #715, #2217, #1609, #1813, #2374, #1453, #2360, #2464, #2433, #1036, #1196, #1365, #2443, #2292, #2422, #2342, #2182, #1303, #1734, #2288, #2261, #990, #2368, #2391, #2296, #1249, #2254, #2327, #2251, #2381, #2446, #2271, #2272, #2253, #2266, #2354, #2399, #1954, #2262, #2097, #2447, #2175, #4966, #5107, #5115, #2822, #1887, #1807, #2004, #3670, #67, #68, #1937, #1959, #1830, #1905, #1944, #674, #2878, #848, #637, #823, #414, #460, #671, #1197, #333, #395, #666, #808, #874, #474, #668, #444, #206, #563, #931, #412, #606, #3814, #559, #1016, #1044, #4826, #802, #1079, #1680, #1578, #1600, #743, #1527, #504, #436, #1087, #1913, #1114, #400, #830, #1111, #827, #826, #212, #940, #742, #1604, #2017, #2022, #2459, #2194, #522, #2414, #1893, #1541, #1983, #2014, #1703, #2005, #2045, #1552, #2056, #2059, #467, #1133, #4245, #4271, #2187, #4281, #3921, #4191, #2000, #3025, #4283, #4188, #4323, #2042, #5874, #1587, #262, #355, #993, #2323, #780, #4031, #1927, #2530, #1011, #2402, #2462, #2438, #2603, #2611, #2777, #2835, #2785, #2844, #667, #775, #2824, #2208, #996, #974, #3334, #6836, #6934, #6981, #3555, #3394, #2290, #3737, #4256, #3507, #4430, #3065, #6424, #4861, #7038, #2561, #4730, #4706, #5402, #2600, #4924, #4899, #4931, #4716, #4938, #3517, #2865, #4682, #4914, #5536, #5327, #5117, #2256, #5193, #4397, #3575, #5401, #5472, #5397, #3048, #5530, #5549, #3961, #4952, #5418, #5437, #3360, #3638, #4870, #5442, #3056, #560, #4409, #4921, #4891, #5796, #4995, #6006, #2069, #1636, #3968, #5082, #5721, #3571, #6174, #6011, #5731, #2236, #4555, #5416, #5080, #1989, #5025, #3464, #5717, #6123, #3748, #3335, #3336, #6727, #5269, #2500, #7000, #6864, #3444, #6454, #750, #6079, #6096, #275, #2929, #6780, #813, #302, #2901, #4536, #4723, #4715, #3610, #5203, #2709, #5081}, {"#0.builder", "#0.login", "#0.last_huh", "#0.guest_log", "#0.biglist", "#0.big_mail_recipient", "#0.big_mail_recipient.mowner", "#0.limbo", "#0.registration_db", "#0.new_player_log", "#0.verb_help", "#0.core_help", "#0.prog_help", "#0.wiz_help", "#0.wiz_utils", "#0.site_db", "#0.math_utils", "#0.set_utils", "#0.builtin_function_help", "#0.new_prog_log", "#0.generic_help", "#0.guest", "#0.guest.default_gender", "#0.guest.known_player", "#0.seq_utils", "#0.quota_log", "#0.you", "#0.generic_db", "#0.player_db", "#0.player_class", "#0.player_class.home", "#0.player_class.pronoun_sub_style", "#0.player_class.timezone", "#0.gender_utils", "#0.editor_help", "#0.mail_recipient", "#0.mail_agent", "#0.mail_editor", "#0.note_editor", "#0.verb_editor", "#0.generic_editor", "#0.object_utils", "#0.lock_utils", "#0.lock_utils.player", "#0.list_utils", "#0.command_utils", "#0.wiz", "#0.prog", "#0.code_utils", "#0.help", "#0.help.author_feature", "#0.help.author_feature.generic_personal_db", "#0.perm_utils", "#0.building_utils", "#0.string_utils", "#0.news", "#0.note", "#0.container", "#0.thing", "#0.exit", "#0.room", "#0.root_class", "#0.recycler", "#0.garbage", "#0.mail_options", "#0.edit_options", "#0.display_options", "#0.generic_options", "#0.list_options", "#0.error", "#0.newt_log", "#0.toad_log", "#0.housekeeper", "#0.feature", "#0.feature.registry", "#0.feature.registry.open", "#0.pronoun_sub", "#0.pronoun_sub.lambdacore", "#0.pronoun_sub.generic", "#0.they", "#0.login_watcher", "#0.login_watcher.options", "#0.english", "#0.english.here", "#0.english.all", "#0.english.everything", "#0.integration_utils", "#0.network", "#0.country_db", "#0.jtext", "#0.jtext.hgroup", "#0.jtext.link", "#0.jtext.link.preceding", "#0.jtext.link.root", "#0.jtext.link.browser", "#0.jtext.root", "#0.jtext.vgroup", "#0.jtext.header", "#0.jtext.title", "#0.jtext.string", "#0.jtext.list_of_strings", "#0.jtext.paragraph", "#0.jtext.dlist", "#0.jtext.plaintext", "#0.jtext.list", "#0.jtext.index", "#0.jtext.itemize", "#0.jtext.itemize_unnumbered", "#0.jtext.itemize_numbered", "#0.jtext.isindex", "#0.jtext.hr", "#0.list_editor", "#0.feature_help", "#0.jaddress", "#0.jaddress.root", "#0.jaddress.help", "#0.jaddress.browser_object", "#0.jaddress.note", "#0.jaddress.browser_verb", "#0.jaddress.browser_inherited_properties", "#0.jaddress.resolved_help", "#0.misc_options", "#0.client_options", "#0.out_of_band", "#0.building_options", "#0.it", "#0.furniture", "#0.sittable", "#0.I", "#0.admin_group", "#0.admin_group.leader", "#0.steering_committee", "#0.db_group", "#0.unix_group", "#0.community_group", "#0.community_group.feature", "#0.tech_group", "#0.admin_mail_recipient", "#0.registrar", "#0.event_dispatcher", "#0.prog_group", "#0.openable_container", "#0.containing_object", "#0.utils", "#0.boot_log", "#0.help_editor", "#0.object_help", "#0.tester", "#0.failed_help", "#0.failed_help.help_recipient", "#0.who_options", "#0.event_handler", "#0.eval_options", "#0.he", "#0.she", "#0.we", "#0.plural_you", "#0.either", "#0.splat", "#0.gender", "#0.none", "#0.topic", "#0.builder_help", "#0.name_utils", "#0.name_utils.dummy", "#0.name_utils.dummy_builder", "#0.guest_help", "#0.parse_utils", "#0.admin", "#0.core_wizard", "#0.door", "#0.ftp", "#0.quota_utils", "#0.quota_utils.working", "#0.window", "#0.server_options", "#0.walking_utils", "#0.checkpointer", "#0.startup", "#0.syslog", "#0.generic_biglist_home", "#0.http", "#0.module", "#0.review_group", "#0.property_farm", "#0.modules", "#0.modules.module", "#0.modules.module.obj_sink_player", "#0.modules.module.obj_sink_note", "#0.modules.module.obj_source_generic", "#0.modules.module.obj_source_http", "#0.modules.module.obj_source_player", "#0.modules.module.obj_sink_generic_spam", "#0.modules.module.obj_sink_generic", "#0.modules.module.obj_generic_source_or_sink", "#0.modules.module.obj_ftp_sink", "#0.modules.module.obj_ftp_source", "#0.modules.mcp", "#0.modules.mcp.obj_mcp", "#0.modules.mcp.obj_mcp.parser", "#0.modules.mcp.obj_mcp.session", "#0.modules.mcp.obj_mcp.package", "#0.modules.mcp.obj_mcp.negotiate", "#0.modules.mcp.obj_mcp.registry", "#0.modules.mcp.obj_mcp.cord", "#0.modules.mcp.obj_mcp.supplementary_listener", "#0.modules.mcp.obj_mcp.supplementary_listener.twin_login", "#0.modules.mcp.obj_cord_stub", "#0.modules.mcp.obj_type_root", "#0.modules.mcp.obj_message_dispatcher", "#0.modules.macmoose", "#0.modules.macmoose.obj_macmoose_utils", "#0.modules.simpleedit", "#0.modules.simpleedit.obj_simpleedit_package", "#0.modules.smtp", "#0.modules.smtp.obj_smtp", "#0.modules.TWin", "#0.modules.TWin.obj_local_generic_listener", "#0.modules.TWin.obj_twin", "#0.modules.TWin.obj_twin.form", "#0.modules.TWin.obj_twin.form.cord_type", "#0.modules.TWin.obj_twin.state_manager", "#0.modules.TWin.obj_twin.parser", "#0.modules.TWin.obj_twin.parser.root_widget", "#0.modules.TWin.obj_twin.help", "#0.modules.TWin.obj_twin.connection", "#0.modules.TWin.obj_twin.listener", "#0.modules.TWin.obj_twin.packages", "#0.modules.TWin.obj_twin.packages.window", "#0.modules.TWin.obj_twin.form_dialog", "#0.modules.TWin.obj_widget_Window", "#0.modules.TWin.obj_widget_Label", "#0.modules.TWin.obj_widget_VBox", "#0.modules.TWin.obj_widget_HBox", "#0.modules.TWin.obj_widget_Space", "#0.modules.TWin.obj_widget_TypeIn", "#0.modules.TWin.obj_widget_Button", "#0.modules.TWin.obj_widget_Fill", "#0.modules.TWin.obj_widget_Separator", "#0.modules.TWin.obj_widget_TextEdit", "#0.modules.TWin.obj_widget_ListBox", "#0.modules.TWin.obj_widget_Checkbox", "#0.modules.TWin.obj_widget_Shape", "#0.modules.TWin.obj_widget_Frame", "#0.modules.TWin.obj_widget_Radio", "#0.modules.TWin.obj_widget_RadioButton", "#0.modules.TWin.obj_widget_Numeric", "#0.modules.TWin.obj_widget_MenuBar", "#0.modules.TWin.obj_widget_Menu", "#0.modules.TWin.obj_widget_MenuSeparator", "#0.modules.TWin.obj_widget_MenuButton", "#0.modules.TWin.obj_widget_MenuCheckbox", "#0.modules.TWin.obj_attribute_Title", "#0.modules.TWin.obj_attribute_FirstFocus", "#0.modules.TWin.obj_attribute_DefaultButton", "#0.modules.TWin.obj_attribute_Main", "#0.modules.TWin.obj_attribute_Center", "#0.modules.TWin.obj_attribute_LeftAlign", "#0.modules.TWin.obj_attribute_RightAlign", "#0.modules.TWin.obj_attribute_Margin", "#0.modules.TWin.obj_attribute_Main_Size", "#0.modules.TWin.obj_attribute_Value_String", "#0.modules.TWin.obj_attribute_ReadOnly", "#0.modules.TWin.obj_attribute_Value_StringList", "#0.modules.TWin.obj_attribute_Wrap", "#0.modules.TWin.obj_attribute_Items", "#0.modules.TWin.obj_attribute_Value_IntegerList", "#0.modules.TWin.obj_attribute_Multiple", "#0.modules.TWin.obj_attribute_Value_Boolean", "#0.modules.TWin.obj_attribute_Height", "#0.modules.TWin.obj_attribute_Width", "#0.modules.TWin.obj_attribute_Raised", "#0.modules.TWin.obj_attribute_Lowered", "#0.modules.TWin.obj_attribute_Groove", "#0.modules.TWin.obj_attribute_Value_Subwidget", "#0.modules.TWin.obj_attribute_Value_Integer", "#0.modules.TWin.obj_attribute_Min", "#0.modules.TWin.obj_attribute_Max", "#0.modules.TWin.obj_attribute_Slider", "#0.modules.TWin.obj_attribute_Name", "#0.modules.TWin.obj_attribute_Font", "#0.modules.TWin.obj_attribute_LabelFont", "#0.modules.TWin.obj_attribute_Private", "#0.modules.TWin.obj_attribute_BgColor", "#0.modules.TWin.obj_attribute_FgColor", "#0.modules.TWin.obj_type_String", "#0.modules.TWin.obj_type_Subwidget", "#0.modules.TWin.obj_type_Boolean", "#0.modules.TWin.obj_type_Integer", "#0.modules.TWin.obj_type_Size", "#0.modules.TWin.obj_type_Widget", "#0.modules.TWin.obj_type_StringList", "#0.modules.TWin.obj_type_IntegerList", "#0.modules.TWin.obj_type_Symbol", "#0.modules.TWin.obj_type_Font", "#0.modules.TWin.obj_type_Color", "#0.modules.TWin.obj_filter", "#0.modules.TWin.obj_leaf", "#0.modules.TWin.obj_split", "#0.modules.TWin.obj_component", "#0.modules.TWin.obj_attribute", "#0.modules.TWin.obj_type", "#0.modules.TWin.obj_type_list", "#0.modules.TWin.obj_attribute_Password", "#0.modules.TWin.obj_obj_attribute_Flat", "#0.modules.TWin.obj_widget_TypeOut", "#0.modules.TWin.obj_attribute_TypeOut", "#0.modules.TWin.obj_event_set", "#0.modules.TWin.obj_event_invoke", "#0.modules.TWin.obj_attribute_Source", "#0.modules.TWin.obj_widget_Image", "#0.modules.TWin.obj_event_invoke_listbox", "#0.modules.TWin.obj_event_invoke_listbox.null_event", "#0.modules.TWin.obj_event_set_simple", "#0.modules.TWin.obj_event", "#0.modules.TWin.obj_cord_twin_window", "#0.modules.TWin.obj_event_invoke_typein", "#0.modules.TWin.obj_widget_tab", "#0.modules.TWin.obj_widget_tabbed", "#0.modules.TWin.obj_attribute_tabto", "#0.modules.listeners", "#0.modules.listeners.obj_daemon", "#0.modules.listeners.obj_daemon_handler", "#0.modules.listeners.obj_redlist_daemon", "#0.modules.core_features", "#0.modules.core_features.obj_stage_talk", "#0.modules.core_features.obj_thinking", "#0.modules.httpd", "#0.modules.httpd.obj_http_handler", "#0.modules.httpd.obj_auth_http_handler", "#0.modules.httpd.http_daemon", "#0.cord", "#0.parse_options", "#0.ftp_client", "#0.local", "#0.local.boat", "#0.local.boat.launch_exit", "#0.local.boat.water", "#0.local.boat.water.churning_depths", "#0.local.boat.water.ship_to_water", "#0.local.boat.water.ship_to_water.water_to_ship_exit", "#0.local.dictionary", "#0.local.vehicle", "#0.local.rpg", "#0.local.rpg.doll", "#0.local.rpg.options", "#0.local.coastal_path_room", "#0.local.coastal_path_room.path_zone", "#0.local.room_matching_utils", "#0.local.room_matching_utils.party_feature", "#0.local.room_matching_utils.ship_room", "#0.local.zone", "#0.local.time", "#0.local.time.sun", "#0.local.time.sun.events", "#0.local.water_exit", "#0.local.peril", "#0.local.peril.army", "#0.local.peril.army_namebuilder", "#0.local.magic_number_dispenser", "#0.local.idle_watcher", "#0.local.wetness", "#0.local.character_request_list", "#0.local.dmz", "#0.local.srpg", "#0.local.srpg.npc_fo", "#0.local.srpg.reincarnation_room", "#0.local.srpg.whos_feature", "#0.local.weather", "#0.local.party", "#0.local.emoticon", "#0.local.abby", "#0.local.abby.brain", "#0.local.abby.brain.van", "#0.local.abby.home", "#0.local.abby.a_brain", "#0.local.abby.pasting_feature", "#0.local.abby.matcher", "#0.local.abby.parrot", "#0.local.abby.generic_message", "#0.local.httpd", "#0.local.httpd.root", "#0.local.httpd.root.object", "#0.local.httpd.root.tree", "#0.local.httpd.root.page", "#0.local.httpd.root_page", "#0.local.ocean", "#0.local.ocean.events", "#0.local.ocean.events.heartbeat", "#0.local.ocean.events.collision", "#0.local.ocean.island", "#0.local.ocean.waterpoint_island", "#0.local.ocean.visibility", "#0.local.ocean.dock", "#0.local.ocean.ferry", "#0.local.ocean.ferry.room", "#0.local.ocean.ship", "#0.local.ocean.room_zone", "#0.local.ocean.errors", "#0.local.ocean.water_connection_exit", "#0.local.ocean.gps", "#0.local.ocean.gps.entity", "#0.local.ocean.gps.span", "#0.local.ocean.gps.waypoint", "#0.local.ocean.gps.map", "#0.local.ocean.gps.map.entity", "#0.local.ocean.gps.map.bounds", "#0.local.ocean.gps.map.scaleinfo", "#0.local.ocean.gps.map.jsentity", "#0.local.ocean.dock_boat", "#0.local.ocean.reckoning", "#0.local.coordinate_space", "#0.local.coordinate_space.generic_object", "#0.local.collectable", "#0.local.spammy", "#0.local.stars", "#0.local.welcome_messages", "#0.local.welcome_messages.welcome_message_waif", "#0.local.account", "#0.local.account.request", "#0.local.group_waif", "#0.local.resolver", "#0.local.resolver.header", "#0.local.resolver.header.query", "#0.local.resolver.header.resource", "#0.local.sema", "#0.local.cane", "#0.local.server_group", "#0.local.measurement_utils", "#0.local.xml", "#0.local.xml.node", "#0.local.shareable_note", "#0.local.systran", "#0.local.welcome_messages_recipient", "#0.local.condition", "#0.local.food", "#0.local.comp_utils", "#0.local.comp_utils.chart_waif", "#0.local.comp_utils.namebuilder_represent", "#0.local.comp_utils.coll_namebuilder_i", "#0.local.measure_utils", "#0.local.fire", "#0.local.welcome_message_group", "#0.local.person", "#0.local.error", "#0.local.sexpr", "#0.local.room_shell", "#0.local.fetcher", "#0.local.fetcher.ocean_object", "#0.local.fetcher.adaptor", "#0.local.fetcher.water_room", "#0.local.fetcher.home", "#0.local.fetcher.police_box", "#0.local.fetcher.police_box.shell", "#0.local.fetcher.police_box.shell.vortex", "#0.local.fetcher.police_box.shell.last_island", "#0.local.xmlrpc", "#0.local.xmlrpc.struct_waif", "#0.local.xmlrpc.dateTime_waif", "#0.local.xmlrpc.registry", "#0.local.xmlrpc.server_proxy_waif", "#0.local.xmlrpc.module_proxy_waif", "#0.local.bignum_utils", "#0.local.quicksilver_utils", "#0.local.quicksilver_utils.pez", "#0.local.quicksilver_utils.namebuilder_d", "#0.local.sql", "#0.local.lexicon", "#0.local.lexicon.game_waif", "#0.local.lexicon.feature", "#0.local.lexicon.feature.options_package", "#0.local.lexicon.game_registry", "#0.local.lexicon.game_registry_book", "#0.local.lexicon.twin_player", "#0.local.lexicon.twin_words", "#0.local.lexicon.unknown_player", "#0.local.lexicon.twin_generic", "#0.local.lexicon.twin_history", "#0.local.lexicon.registry_range_iterator", "#0.local.lexicon.registry_rule_match_iterator", "#0.local.workspace", "#0.local.workspace.feature", "#0.local.foodstuff", "#0.local.forwarder", "#0.local.getopt", "#0.local.packrat", "#0.local.packrat.scrapheap", "#0.local.packrat.black_hole_of_despair", "#0.local.packrat.cheese", "#0.local.matrix", "#0.local.progress", "#0.local.macaw", "#0.local.cell", "#0.local.geometry", "#0.local.geometry.rcd", "#0.local.geometry.ocean_object", "#0.local.tinyurl", "#0.local.tinyurl.feature", "#0.local.dict", "#0.local.csdict", "#0.local.type", "#0.local.rdf", "#0.local.rdf.store_waif", "#0.local.rdf.rdfxml_loader", "#0.local.mars_utils", "#0.local.crypto", "#0.local.uli", "#0.local.word_server", "#0.local.material", "#0.local.material.water", "#0.local.material.black_sand", "#0.local.name_builder", "#0.local.topo_utils", "#0.local.action", "#0.local.action.generic", "#0.local.action.put", "#0.local.jabber", "#0.local.jabber.buddy", "#0.local.jabber.feature", "#0.local.jabber.feature.options", "#0.local.magic", "#0.local.magic.generic_legs", "#0.local.xmlweather", "#0.local.xmlweather.options", "#0.local.xmlweather.trophy", "#0.local.xmlweather.trophy.winner", "#0.local.xmlweather.trophy.engine", "#0.local.urlutils", "#0.building_group", "#0.waif", "#0.documentation_group", "#0.policy_help", "#0.admin_help", "#0.jhcore_help", "#0.dict", "#0.dict._waif_class", "#0.namebuilder_i", "#0.namebuilder_d"}}
=> {{#4, #10, #11, #12, #13, #14, #35, #15, #16, #17, #20, #21, #22, #23, #24, #25, #26, #27, #28, #29, #30, #31, #163, #36, #32, #33, #34, #79, #37, #6, #70, #78, #39, #38, #40, #41, #42, #43, #44, #45, #46, #47, #48, #251, #49, #50, #51, #52, #53, #54, #175, #119, #134, #19, #18, #146, #9, #130, #5, #7, #3, #1, #55, #56, #57, #58, #59, #60, #61, #66, #109, #62, #63, #65, #156, #6216, #69, #77, #73, #71, #84, #76, #72, #187, #105, #144, #74, #83, #95, #93, #94, #127, #147, #106, #96, #92, #98, #104, #97, #85, #87, #103, #99, #132, #133, #124, #143, #118, #129, #123, #139, #108, #102, #114, #112, #135, #91, #122, #148, #149, #178, #115, #120, #117, #126, #159, #81, #80, #165, #168, #2, #142, #153, #152, #170, #154, #169, #110, #111, #113, #128, #8, #150, #151, #86, #177, #179, #100, #131, #145, #90, #137, #141, #161, #162, #164, #166, #167, #171, #64, #172, #185, #160, #183, #136, #4607, #174, #121, #176, #191, #125, #3953, #180, #7044, #186, #196, #189, #181, #198, #190, #75, #88, #1716, #230, #1747, #1743, #1683, #1753, #1425, #1650, #1136, #1606, #1620, #1752, #1484, #2884, #2839, #1915, #1912, #1942, #1721, #1918, #1917, #1784, #1920, #4454, #4725, #1943, #1921, #1922, #1306, #1902, #1930, #1677, #2315, #1897, #1907, #1987, #2285, #2367, #2250, #2355, #307, #1051, #2313, #2351, #1811, #2247, #2370, #2220, #2382, #2331, #2277, #2457, #2215, #1911, #2270, #2168, #2345, #2352, #2325, #2307, #1661, #2372, #2401, #1717, #2383, #2264, #2348, #2289, #2440, #2306, #1477, #1630, #2310, #2358, #2284, #2442, #2467, #2330, #2350, #1855, #2282, #703, #2347, #2267, #2379, #2109, #1524, #2463, #1782, #2361, #2195, #2380, #1468, #715, #2217, #1609, #1813, #2374, #1453, #2360, #2464, #2433, #1036, #1196, #1365, #2443, #2292, #2422, #2342, #2182, #1303, #1734, #2288, #2261, #990, #2368, #2391, #2296, #1249, #2254, #2327, #2251, #2381, #2446, #2271, #2272, #2253, #2266, #2354, #2399, #1954, #2262, #2097, #2447, #2175, #4966, #5107, #5115, #2822, #1887, #1807, #2004, #3670, #67, #68, #1937, #1959, #1830, #1905, #1944, #674, #2878, #848, #637, #823, #414, #460, #671, #1197, #333, #395, #666, #808, #874, #474, #668, #444, #206, #563, #931, #412, #606, #3814, #559, #1016, #1044, #4826, #802, #1079, #1680, #1578, #1600, #743, #1527, #504, #436, #1087, #1913, #1114, #400, #830, #1111, #827, #826, #212, #940, #742, #1604, #2017, #2022, #2459, #2194, #522, #2414, #1893, #1541, #1983, #2014, #1703, #2005, #2045, #1552, #2056, #2059, #467, #1133, #4245, #4271, #2187, #4281, #3921, #4191, #2000, #3025, #4283, #4188, #4323, #2042, #5874, #1587, #262, #355, #993, #2323, #780, #4031, #1927, #2530, #1011, #2402, #2462, #2438, #2603, #2611, #2777, #2835, #2785, #2844, #667, #775, #2824, #2208, #996, #974, #3334, #6836, #6934, #6981, #3555, #3394, #2290, #3737, #4256, #3507, #4430, #3065, #6424, #4861, #7038, #2561, #4730, #4706, #5402, #2600, #4924, #4899, #4931, #4716, #4938, #3517, #2865, #4682, #4914, #5536, #5327, #5117, #2256, #5193, #4397, #3575, #5401, #5472, #5397, #3048, #5530, #5549, #3961, #4952, #5418, #5437, #3360, #3638, #4870, #5442, #3056, #560, #4409, #4921, #4891, #5796, #4995, #6006, #2069, #1636, #3968, #5082, #5721, #3571, #6174, #6011, #5731, #2236, #4555, #5416, #5080, #1989, #5025, #3464, #5717, #6123, #3748, #3335, #3336, #6727, #5269, #2500, #7000, #6864, #3444, #6454, #750, #6079, #6096, #275, #2929, #6780, #813, #302, #2901, #4536, #4723, #4715, #3610, #5203, #2709, #5081}, {"$builder", "$login", "$last_huh", "$guest_log", "$biglist", "$big_mail_recipient", "$big_mail_recipient.mowner", "$limbo", "$registration_db", "$new_player_log", "$verb_help", "$core_help", "$prog_help", "$wiz_help", "$wiz_utils", "$site_db", "$math_utils", "$set_utils", "$builtin_function_help", "$new_prog_log", "$generic_help", "$guest", "$guest.default_gender", "$guest.known_player", "$seq_utils", "$quota_log", "$you", "$generic_db", "$player_db", "$player_class", "$player_class.home", "$player_class.pronoun_sub_style", "$player_class.timezone", "$gender_utils", "$editor_help", "$mail_recipient", "$mail_agent", "$mail_editor", "$note_editor", "$verb_editor", "$generic_editor", "$object_utils", "$lock_utils", "$lock_utils.player", "$list_utils", "$command_utils", "$wiz", "$prog", "$code_utils", "$help", "$help.author_feature", "$help.author_feature.generic_personal_db", "$perm_utils", "$building_utils", "$string_utils", "$news", "$note", "$container", "$thing", "$exit", "$room", "$root_class", "$recycler", "$garbage", "$mail_options", "$edit_options", "$display_options", "$generic_options", "$list_options", "$error", "$newt_log", "$toad_log", "$housekeeper", "$feature", "$feature.registry", "$feature.registry.open", "$pronoun_sub", "$pronoun_sub.lambdacore", "$pronoun_sub.generic", "$they", "$login_watcher", "$login_watcher.options", "$english", "$english.here", "$english.all", "$english.everything", "$integration_utils", "$network", "$country_db", "$jtext", "$jtext.hgroup", "$jtext.link", "$jtext.link.preceding", "$jtext.link.root", "$jtext.link.browser", "$jtext.root", "$jtext.vgroup", "$jtext.header", "$jtext.title", "$jtext.string", "$jtext.list_of_strings", "$jtext.paragraph", "$jtext.dlist", "$jtext.plaintext", "$jtext.list", "$jtext.index", "$jtext.itemize", "$jtext.itemize_unnumbered", "$jtext.itemize_numbered", "$jtext.isindex", "$jtext.hr", "$list_editor", "$feature_help", "$jaddress", "$jaddress.root", "$jaddress.help", "$jaddress.browser_object", "$jaddress.note", "$jaddress.browser_verb", "$jaddress.browser_inherited_properties", "$jaddress.resolved_help", "$misc_options", "$client_options", "$out_of_band", "$building_options", "$it", "$furniture", "$sittable", "$I", "$admin_group", "$admin_group.leader", "$steering_committee", "$db_group", "$unix_group", "$community_group", "$community_group.feature", "$tech_group", "$admin_mail_recipient", "$registrar", "$event_dispatcher", "$prog_group", "$openable_container", "$containing_object", "$utils", "$boot_log", "$help_editor", "$object_help", "$tester", "$failed_help", "$failed_help.help_recipient", "$who_options", "$event_handler", "$eval_options", "$he", "$she", "$we", "$plural_you", "$either", "$splat", "$gender", "$none", "$topic", "$builder_help", "$name_utils", "$name_utils.dummy", "$name_utils.dummy_builder", "$guest_help", "$parse_utils", "$admin", "$core_wizard", "$door", "$ftp", "$quota_utils", "$quota_utils.working", "$window", "$server_options", "$walking_utils", "$checkpointer", "$startup", "$syslog", "$generic_biglist_home", "$http", "$module", "$review_group", "$property_farm", "$modules", "$modules.module", "$modules.module.obj_sink_player", "$modules.module.obj_sink_note", "$modules.module.obj_source_generic", "$modules.module.obj_source_http", "$modules.module.obj_source_player", "$modules.module.obj_sink_generic_spam", "$modules.module.obj_sink_generic", "$modules.module.obj_generic_source_or_sink", "$modules.module.obj_ftp_sink", "$modules.module.obj_ftp_source", "$modules.mcp", "$modules.mcp.obj_mcp", "$modules.mcp.obj_mcp.parser", "$modules.mcp.obj_mcp.session", "$modules.mcp.obj_mcp.package", "$modules.mcp.obj_mcp.negotiate", "$modules.mcp.obj_mcp.registry", "$modules.mcp.obj_mcp.cord", "$modules.mcp.obj_mcp.supplementary_listener", "$modules.mcp.obj_mcp.supplementary_listener.twin_login", "$modules.mcp.obj_cord_stub", "$modules.mcp.obj_type_root", "$modules.mcp.obj_message_dispatcher", "$modules.macmoose", "$modules.macmoose.obj_macmoose_utils", "$modules.simpleedit", "$modules.simpleedit.obj_simpleedit_package", "$modules.smtp", "$modules.smtp.obj_smtp", "$modules.TWin", "$modules.TWin.obj_local_generic_listener", "$modules.TWin.obj_twin", "$modules.TWin.obj_twin.form", "$modules.TWin.obj_twin.form.cord_type", "$modules.TWin.obj_twin.state_manager", "$modules.TWin.obj_twin.parser", "$modules.TWin.obj_twin.parser.root_widget", "$modules.TWin.obj_twin.help", "$modules.TWin.obj_twin.connection", "$modules.TWin.obj_twin.listener", "$modules.TWin.obj_twin.packages", "$modules.TWin.obj_twin.packages.window", "$modules.TWin.obj_twin.form_dialog", "$modules.TWin.obj_widget_Window", "$modules.TWin.obj_widget_Label", "$modules.TWin.obj_widget_VBox", "$modules.TWin.obj_widget_HBox", "$modules.TWin.obj_widget_Space", "$modules.TWin.obj_widget_TypeIn", "$modules.TWin.obj_widget_Button", "$modules.TWin.obj_widget_Fill", "$modules.TWin.obj_widget_Separator", "$modules.TWin.obj_widget_TextEdit", "$modules.TWin.obj_widget_ListBox", "$modules.TWin.obj_widget_Checkbox", "$modules.TWin.obj_widget_Shape", "$modules.TWin.obj_widget_Frame", "$modules.TWin.obj_widget_Radio", "$modules.TWin.obj_widget_RadioButton", "$modules.TWin.obj_widget_Numeric", "$modules.TWin.obj_widget_MenuBar", "$modules.TWin.obj_widget_Menu", "$modules.TWin.obj_widget_MenuSeparator", "$modules.TWin.obj_widget_MenuButton", "$modules.TWin.obj_widget_MenuCheckbox", "$modules.TWin.obj_attribute_Title", "$modules.TWin.obj_attribute_FirstFocus", "$modules.TWin.obj_attribute_DefaultButton", "$modules.TWin.obj_attribute_Main", "$modules.TWin.obj_attribute_Center", "$modules.TWin.obj_attribute_LeftAlign", "$modules.TWin.obj_attribute_RightAlign", "$modules.TWin.obj_attribute_Margin", "$modules.TWin.obj_attribute_Main_Size", "$modules.TWin.obj_attribute_Value_String", "$modules.TWin.obj_attribute_ReadOnly", "$modules.TWin.obj_attribute_Value_StringList", "$modules.TWin.obj_attribute_Wrap", "$modules.TWin.obj_attribute_Items", "$modules.TWin.obj_attribute_Value_IntegerList", "$modules.TWin.obj_attribute_Multiple", "$modules.TWin.obj_attribute_Value_Boolean", "$modules.TWin.obj_attribute_Height", "$modules.TWin.obj_attribute_Width", "$modules.TWin.obj_attribute_Raised", "$modules.TWin.obj_attribute_Lowered", "$modules.TWin.obj_attribute_Groove", "$modules.TWin.obj_attribute_Value_Subwidget", "$modules.TWin.obj_attribute_Value_Integer", "$modules.TWin.obj_attribute_Min", "$modules.TWin.obj_attribute_Max", "$modules.TWin.obj_attribute_Slider", "$modules.TWin.obj_attribute_Name", "$modules.TWin.obj_attribute_Font", "$modules.TWin.obj_attribute_LabelFont", "$modules.TWin.obj_attribute_Private", "$modules.TWin.obj_attribute_BgColor", "$modules.TWin.obj_attribute_FgColor", "$modules.TWin.obj_type_String", "$modules.TWin.obj_type_Subwidget", "$modules.TWin.obj_type_Boolean", "$modules.TWin.obj_type_Integer", "$modules.TWin.obj_type_Size", "$modules.TWin.obj_type_Widget", "$modules.TWin.obj_type_StringList", "$modules.TWin.obj_type_IntegerList", "$modules.TWin.obj_type_Symbol", "$modules.TWin.obj_type_Font", "$modules.TWin.obj_type_Color", "$modules.TWin.obj_filter", "$modules.TWin.obj_leaf", "$modules.TWin.obj_split", "$modules.TWin.obj_component", "$modules.TWin.obj_attribute", "$modules.TWin.obj_type", "$modules.TWin.obj_type_list", "$modules.TWin.obj_attribute_Password", "$modules.TWin.obj_obj_attribute_Flat", "$modules.TWin.obj_widget_TypeOut", "$modules.TWin.obj_attribute_TypeOut", "$modules.TWin.obj_event_set", "$modules.TWin.obj_event_invoke", "$modules.TWin.obj_attribute_Source", "$modules.TWin.obj_widget_Image", "$modules.TWin.obj_event_invoke_listbox", "$modules.TWin.obj_event_invoke_listbox.null_event", "$modules.TWin.obj_event_set_simple", "$modules.TWin.obj_event", "$modules.TWin.obj_cord_twin_window", "$modules.TWin.obj_event_invoke_typein", "$modules.TWin.obj_widget_tab", "$modules.TWin.obj_widget_tabbed", "$modules.TWin.obj_attribute_tabto", "$modules.listeners", "$modules.listeners.obj_daemon", "$modules.listeners.obj_daemon_handler", "$modules.listeners.obj_redlist_daemon", "$modules.core_features", "$modules.core_features.obj_stage_talk", "$modules.core_features.obj_thinking", "$modules.httpd", "$modules.httpd.obj_http_handler", "$modules.httpd.obj_auth_http_handler", "$modules.httpd.http_daemon", "$cord", "$parse_options", "$ftp_client", "$local", "$local.boat", "$local.boat.launch_exit", "$local.boat.water", "$local.boat.water.churning_depths", "$local.boat.water.ship_to_water", "$local.boat.water.ship_to_water.water_to_ship_exit", "$local.dictionary", "$local.vehicle", "$local.rpg", "$local.rpg.doll", "$local.rpg.options", "$local.coastal_path_room", "$local.coastal_path_room.path_zone", "$local.room_matching_utils", "$local.room_matching_utils.party_feature", "$local.room_matching_utils.ship_room", "$local.zone", "$local.time", "$local.time.sun", "$local.time.sun.events", "$local.water_exit", "$local.peril", "$local.peril.army", "$local.peril.army_namebuilder", "$local.magic_number_dispenser", "$local.idle_watcher", "$local.wetness", "$local.character_request_list", "$local.dmz", "$local.srpg", "$local.srpg.npc_fo", "$local.srpg.reincarnation_room", "$local.srpg.whos_feature", "$local.weather", "$local.party", "$local.emoticon", "$local.abby", "$local.abby.brain", "$local.abby.brain.van", "$local.abby.home", "$local.abby.a_brain", "$local.abby.pasting_feature", "$local.abby.matcher", "$local.abby.parrot", "$local.abby.generic_message", "$local.httpd", "$local.httpd.root", "$local.httpd.root.object", "$local.httpd.root.tree", "$local.httpd.root.page", "$local.httpd.root_page", "$local.ocean", "$local.ocean.events", "$local.ocean.events.heartbeat", "$local.ocean.events.collision", "$local.ocean.island", "$local.ocean.waterpoint_island", "$local.ocean.visibility", "$local.ocean.dock", "$local.ocean.ferry", "$local.ocean.ferry.room", "$local.ocean.ship", "$local.ocean.room_zone", "$local.ocean.errors", "$local.ocean.water_connection_exit", "$local.ocean.gps", "$local.ocean.gps.entity", "$local.ocean.gps.span", "$local.ocean.gps.waypoint", "$local.ocean.gps.map", "$local.ocean.gps.map.entity", "$local.ocean.gps.map.bounds", "$local.ocean.gps.map.scaleinfo", "$local.ocean.gps.map.jsentity", "$local.ocean.dock_boat", "$local.ocean.reckoning", "$local.coordinate_space", "$local.coordinate_space.generic_object", "$local.collectable", "$local.spammy", "$local.stars", "$local.welcome_messages", "$local.welcome_messages.welcome_message_waif", "$local.account", "$local.account.request", "$local.group_waif", "$local.resolver", "$local.resolver.header", "$local.resolver.header.query", "$local.resolver.header.resource", "$local.sema", "$local.cane", "$local.server_group", "$local.measurement_utils", "$local.xml", "$local.xml.node", "$local.shareable_note", "$local.systran", "$local.welcome_messages_recipient", "$local.condition", "$local.food", "$local.comp_utils", "$local.comp_utils.chart_waif", "$local.comp_utils.namebuilder_represent", "$local.comp_utils.coll_namebuilder_i", "$local.measure_utils", "$local.fire", "$local.welcome_message_group", "$local.person", "$local.error", "$local.sexpr", "$local.room_shell", "$local.fetcher", "$local.fetcher.ocean_object", "$local.fetcher.adaptor", "$local.fetcher.water_room", "$local.fetcher.home", "$local.fetcher.police_box", "$local.fetcher.police_box.shell", "$local.fetcher.police_box.shell.vortex", "$local.fetcher.police_box.shell.last_island", "$local.xmlrpc", "$local.xmlrpc.struct_waif", "$local.xmlrpc.dateTime_waif", "$local.xmlrpc.registry", "$local.xmlrpc.server_proxy_waif", "$local.xmlrpc.module_proxy_waif", "$local.bignum_utils", "$local.quicksilver_utils", "$local.quicksilver_utils.pez", "$local.quicksilver_utils.namebuilder_d", "$local.sql", "$local.lexicon", "$local.lexicon.game_waif", "$local.lexicon.feature", "$local.lexicon.feature.options_package", "$local.lexicon.game_registry", "$local.lexicon.game_registry_book", "$local.lexicon.twin_player", "$local.lexicon.twin_words", "$local.lexicon.unknown_player", "$local.lexicon.twin_generic", "$local.lexicon.twin_history", "$local.lexicon.registry_range_iterator", "$local.lexicon.registry_rule_match_iterator", "$local.workspace", "$local.workspace.feature", "$local.foodstuff", "$local.forwarder", "$local.getopt", "$local.packrat", "$local.packrat.scrapheap", "$local.packrat.black_hole_of_despair", "$local.packrat.cheese", "$local.matrix", "$local.progress", "$local.macaw", "$local.cell", "$local.geometry", "$local.geometry.rcd", "$local.geometry.ocean_object", "$local.tinyurl", "$local.tinyurl.feature", "$local.dict", "$local.csdict", "$local.type", "$local.rdf", "$local.rdf.store_waif", "$local.rdf.rdfxml_loader", "$local.mars_utils", "$local.crypto", "$local.uli", "$local.word_server", "$local.material", "$local.material.water", "$local.material.black_sand", "$local.name_builder", "$local.topo_utils", "$local.action", "$local.action.generic", "$local.action.put", "$local.jabber", "$local.jabber.buddy", "$local.jabber.feature", "$local.jabber.feature.options", "$local.magic", "$local.magic.generic_legs", "$local.xmlweather", "$local.xmlweather.options", "$local.xmlweather.trophy", "$local.xmlweather.trophy.winner", "$local.xmlweather.trophy.engine", "$local.urlutils", "$building_group", "$waif", "$documentation_group", "$policy_help", "$admin_help", "$jhcore_help", "$dict", "$dict._waif_class", "$namebuilder_i", "$namebuilder_d"}}
Object #289 does not define that verb, but its ancestor #4 does.
#4:"@kids" any none none
 1:  "'@kids <obj>' - List the children of an object. This is handy for seeing whether anybody's actually using your carefully-wrought public objects.";
 2:  thing = player:my_match_object(dobjstr);
 3:  if (!$command_utils:object_match_failed(thing, dobjstr))
 4:    kids = children(thing);
 5:    if (kids)
 6:      player:notify(tostr(thing:dnamec(), "(", thing, ") has ", length(kids), " kid", length(kids) == 1 ? "" | "s", "."));
 7:      player:notify(tostr($string_utils:names_of(kids)));
 8:    else
 9:      player:notify(tostr(thing:dnamec(), "(", thing, ") has no kids."));
10:    endif
11:  endif
-----
`HELP $STRING_UTILS:' NOT FOUND
===============================

Sorry, but no help is available on `$string_utils:'.  If you can't find what you're looking for, you may want to send mail (see `help mail'[1]) to *Bug-reports.

-----
GENERAL INFORMATION ON $STRING_UTILS[1]
=======================================

For a complete description of a given verb, do `help $string_utils:verbname'[2]

    Conversion routines:

:char_list    (string)                               => {"a", "b", "c"}
:to_list      (string)                               => {"a", "foo", "bear"}
 (see also :explode, below)

:from_list    (list [,sep])                          => "foo1foo2foo3"
:english_list (str-list[,none-str[,and-str[, sep]]]) => "foo1, foo2, and foo3"
:title_list*c (obj-list[,none-str[,and-str[, sep]]]) => "foo1, foo2, and foo3"
                                                  or => "Foo1, foo2, and foo3"

:[i|d]name[c]_and_number                             => "foo (#123)"
:[i|d]name[c]_list (obj-list, name-args)             => english list of names
                                                        in appropriate style
:[i|d]name[c]_and_number_list(obj-list, name-args)   => same, plus " (#123)"
:names_of     (obj-list)  => "foo1 (#123)   foo2 (#456)   foo3 (#789)"

:to_value       (string)                             => {1, value}
                                                  or => {0, error message}
:prefix_to_value(string)                             => {rest-of-string, value}
                                                  or => {0, error message}
:end_expression (string)                             => index of expression

:from_value[_suspended] (value [,quoteflag [,maxlistdepth]])
                                                     => "{foo1, foo2, foo3}"
:print[_suspended] (value)                           => "{foo1, foo2, foo3}"
:print_truncated   (value, length, suffix)           => "{foo1, fo.."
:print_with_names  (value)                           => "{foo1, foo2 (#123)}"

:english_number(42 [,zero])  => "forty-two"
:english_ordinal(42)         => "forty-second"
:ordinal(42)                 => "42nd"
:group_number(42135 [,sep])  => "42,135"
:from_seconds (num)          => "an hour" or "3 days" or "15 seconds"

:glob_to_regexp("foo*b?r")   => "^foo.*b.r$"
:xglob_to_regexp("f*ba[rz]") => "^f.*ba[rz]$"

    Type checking:

:is_numeric   (string) => return true if string is composed entirely of digits

    String Matching:

:match_string(string, pattern, options) => * wildcard matching
:find_prefix(prefix, string-list)       => list index of element starting
                                           with prefix
:match_stringlist(string, string-list)  => index/$ambiguous_match/$failed_match
:index_delimited(string,target[, case]) => index of delimited string occurrence
:index_all(string, target[, delimited]) => all occurrences of target in string
:next_index(str1, str2, prev[, case])   => index, after index `prev'

    Object Matching (see also $command_utils):

:literal_object(string)                        => object match independent
                                                  of location
:match        (string, [obj-list, prop-name]+) => matching object
:match_player (string-list[,me-object])        => list of matching players
:match_object (string, location)               => default object match
:match_player_or_object(@string-list)          => matching object or player
:match_room   (string)                         => matching room object

    Parsing:

:explode (string,char) -- string => list of words delimited by char
 (see also :to_list, above)
:words   (string)      -- string => list of words (as with command line parser)
:word_start (string)   -- string => list of start-end pairs.
:first_word (string)   -- string => {first word, rest of string} or {}

:parse_command(cmd_line[, player]) -- string => parsed command info

    Pretty printing:

:space         (n/string[,filler])     => n spaces
:left          (string,width[,filler]) => left justified string in field 
:right         (string,width[,filler]) => right justified string in field
:center/re     (string,width[,filler]) => centered string in field
:columnize/se[_suspended](list,n[,width])
                                       => list of strings in n columns
:columnize/se_no_truncate(list,n[,linelen])
                                       => same, but will not truncate items
:columnize/se_with_headers(headers, fields) => columnize, plus headers

    Substitutions

:substitute (string, subst_list [,case])  -- general substitutions.
:substitute_delimited(...)                -- same, but with word boundaries.
:pronoun_sub (string/list[,who[,thing[,location]]])
                                          -- pronoun substitutions.
:pronoun_sub_secure (string[,who[,thing[,location]]],default)
                                          -- substitute and check for names.
:pronoun_quote (string/list/subst_list)   -- quoting for pronoun substitutions.
:regexp_quote(string)                     -- quoting for regexps.

    Miscellaneous string munging:

:trim         (string)       => string with outside whitespace removed.
:triml        (string)       => string with leading whitespace removed.
:trimr        (string)       => string with trailing whitespace removed.
:strip_chars  (string,chars) => string with all chars in `chars' removed.
:strip_all_but(string,chars) => string with all chars not in `chars' removed.
:capitalize/se(string)       => string with first letter capitalized.
:uppercase/lowercase(string) => string with all letters upper or lowercase.
:reverse      (string)       => string, backwards.

:common(string1, string2)    => length of longest common prefix.
:is_uppercase (string)       => true iff no lowercase letters in string
:is_lowercase (string)       => true iff no uppercase letters in string
:nonblank     (string)       => true iff any non-whitespace characters

:connection_hostname(string) => hostname part of connection identifier.

    Conversions to and from common string formats:

:character_to_ascii(char)    => integer ASCII rep of char
:character_to_hex_ascii(char) => two-digit hexadecimal string ASCII rep of char
:ascii_to_character(num)     => character represented in ASCII by num
:hex_ascii_to_character(hex) => ASCII character represented by two-character hexadecimal string hex

    A few useful properties:

alphabet                    => "abcdefghijklmnopqrstuvwxyz"
tab                         => a single tab character

-----
$STRING_UTILS:COLUMNIZE
=======================

columnize (items, n [, width]) - Turn a one-column list of items into an n-column list. 'width' is the last character position that may be occupied; it defaults to a standard screen width. Example: To tell the player a list of numbers in three columns, do 'player:tell_lines ($string_utils:columnize ({1, 2, 3, 4, 5, 6, 7}, 3));'.

#18:"columnize columnise" this none this
 1:  "columnize (items, n [, width]) - Turn a one-column list of items into an n-column list. 'width' is the last character position that may be occupied; it defaults to a standard screen width. Example: To tell the player a list of numbers in three columns, do 'player:tell_lines ($string_utils:columnize ({1, 2, 3, 4, 5, 6, 7}, 3));'.";
 2:  {items, n, ?width = 79} = args;
 3:  height = (length(items) + n - 1) / n;
 4:  items = {@items, @$list_utils:make(height * n - length(items), "")};
 5:  colwidths = {};
 6:  for col in [1..n - 1]
 7:    colwidths = listappend(colwidths, 1 - (width + 1) * col / n);
 8:  endfor
 9:  result = {};
10:  for row in [1..height]
11:    line = tostr(items[row]);
12:    for col in [1..n - 1]
13:      line = tostr(this:left(line, colwidths[col]), " ", items[row + col * height]);
14:    endfor
15:    result = listappend(result, line[1..min(length(line), width)]);
16:  endfor
17:  return result;
You see no "player" here.
generic player (#6) [ readable fertile ]
  Owned by Core-Wizard (#191).
  Child of generic containing object (#150).
  Location generic room (#3).
    #6:init_for_core            Core-Wizard (#191)   rxd    this none this
    #6:confunc                  Core-Wizard (#191)   rxd    this none this
    #6:disfunc                  Core-Wizard (#191)   rxd    this none this
    #6:initialize               Core-Wizard (#191)   rxd    this none this
    #6:recycle                  Core-Wizard (#191)   rxd    this none this
    #6:my_huh                   Core-Wizard (#191)   rxd    this none this
    #6:last_huh                 Core-Wizard (#191)   rxd    this none this
    #6:my_match_object          Core-Wizard (#191)   rxd    this none this
    #6:tell_contents            Core-Wizard (#191)   rxd    this none this
    #6:notify                   Core-Wizard (#191)   rxd    this none this
    #6:notify_lines             Core-Wizard (#191)   rxd    this none this
    #6:linesplit                Core-Wizard (#191)   rxd    this none this
    #6:linelen                  unknown hacker (#35) rxd    this none this
    #6:@more                    Core-Wizard (#191)   r d    any none none
    #6:@wrap                    unknown hacker (#35) r d    none any none
    #6:@linelen*gth             unknown hacker (#35) r d    any none none
    #6:@pagelen*gth             Core-Wizard (#191)   r d    any none none
    #6:tell                     Core-Wizard (#191)   rxd    this none this
    #6:gag_p                    Core-Wizard (#191)   rxd    this none this
    #6:"set_gaglist set_gaglist_noisy" Core-Wizard (#191) rxd this none this
    #6:@gag                     Core-Wizard (#191)   r d    any any any
    #6:"@listgag @gaglist @gagged" Core-Wizard (#191) rxd   none none none
    #6:@ungag                   Core-Wizard (#191)   rxd    any none none
    #6:whodunnit                Core-Wizard (#191)   rxd    this none this
    #6:@paranoid                Core-Wizard (#191)   r d    any any any
    #6:@sw*eep                  Core-Wizard (#191)   r d    none none none
    #6:wh*isper                 Core-Wizard (#191)   rxd    any at/to this
    #6:receive_page             Core-Wizard (#191)   rxd    this none this
    #6:"page_origin_msg page_echo_msg page_absent_msg" unknown hacker (#35) rxd this none this
    #6:"i inv*entory"           Core-Wizard (#191)   r d    none none none
    #6:look_self                Core-Wizard (#191)   rxd    this none this
    #6:home                     Core-Wizard (#191)   r d    none none none
    #6:@sethome                 Core-Wizard (#191)   r d    none none none
    #6:"g*et take"              Core-Wizard (#191)   rxd    this none none
    #6:@eject                   Core-Wizard (#191)   r d    any out of/from inside/from any
    #6:"where*is @where*is"     Core-Wizard (#191)   rxd    any any any
    #6:@wizards                 Core-Wizard (#191)   rxd    any none none
    #6:"mail_forward mail_notify" Core-Wizard (#191) rxd    this none this
    #6:receive_message          Core-Wizard (#191)   rxd    this none this
    #6:display_message          Core-Wizard (#191)   rxd    this none this
    #6:"parse_message_seq from_msg_seq %from_msg_seq to_msg_seq %to_msg_seq subject_msg_seq body_msg_seq display_seq_headers display_seq_full messages_in_seq list_rmm new_message_num length_num_le length_date_le length_date_gt length_all_msgs exists_num_eq rm_message_seq undo_rmm expunge_rmm renumber" Core-Wizard (#191) rxd this none this
    #6:msg_summary_line         unknown hacker (#35) rxd    this none this
    #6:msg_text                 Core-Wizard (#191)   rxd    this none this
    #6:notify_mail              Core-Wizard (#191)   rxd    this none this
    #6:current_message          Core-Wizard (#191)   rxd    this none this
    #6:get_current_message      Core-Wizard (#191)   rxd    this none this
    #6:set_current_message      Core-Wizard (#191)   rxd    this none this
    #6:make_current_message     Core-Wizard (#191)   rxd    this none this
    #6:kill_current_message     Core-Wizard (#191)   rxd    this none this
    #6:current_folder           Core-Wizard (#191)   rxd    this none this
    #6:set_current_folder       Core-Wizard (#191)   rxd    this none this
    #6:parse_folder_spec        Core-Wizard (#191)   rxd    this none this
    #6:parse_mailread_cmd       Core-Wizard (#191)   rxd    this none this
    #6:@mail                    Core-Wizard (#191)   rxd    any any any
    #6:"@read @peek"            Core-Wizard (#191)   rxd    any any any
    #6:"@next @prev"            Core-Wizard (#191)   r d    any any any
    #6:@rmm*ail                 Core-Wizard (#191)   r d    any any any
    #6:@renumber                Core-Wizard (#191)   r d    any none none
    #6:@unrmm*ail               Core-Wizard (#191)   r d    any any any
    #6:@send                    Core-Wizard (#191)   rxd    any any any
    #6:"@answer @repl*y"        Core-Wizard (#191)   r d    any any any
    #6:@forward                 Core-Wizard (#191)   rxd    any any any
    #6:@gripe                   Core-Wizard (#191)   r d    any any any
    #6:"@typo @bug @suggest*ion @idea @comment" Core-Wizard (#191) r d any any any
    #6:"@skip @unsub*scribe"    Core-Wizard (#191)   r d    any any any
    #6:@subscribe               Core-Wizard (#191)   r d    any any any
    #6:mail_catch_up            Core-Wizard (#191)   rxd    this none this
    #6:"@rn check_mail_lists @subscribed" Core-Wizard (#191) rx none none none
    #6:mail_option              Core-Wizard (#191)   rxd    this none this
    #6:edit_option              Core-Wizard (#191)   rxd    this none this
    #6:"set_mail_option set_edit_option set_misc_option set_client_option set_who_option set_parse_option" Core-Wizard (#191) rxd this none this
    #6:"@mailo*ptions @mail-o*ptions @edito*ptions @edit-o*ptions @misco*ptions @misc-o*ptions @cliento*ptions @client-o*ptions @whoo*ptions @who-o*ptions @parseo*ptions @parse-o*ptions" Core-Wizard (#191) r d any any any
    #6:set_name                 Core-Wizard (#191)   rxd    this none this
    #6:set_aliases              Core-Wizard (#191)   rxd    this none this
    #6:@rename*#                Core-Wizard (#191)   r d    any at/to any
    #6:"@add-alias*# @addalias*# @add_alias*#" Core-Wizard (#191) r d any at/to any
    #6:"@rmalias*# @rm-alias*#" Core-Wizard (#191)   r d    any out of/from inside/from any
    #6:@desc*ribe               Core-Wizard (#191)   r d    any as any
    #6:@mess*ages               Core-Wizard (#191)   r d    any none none
    #6:@notedit                 unknown hacker (#35) r d    any none none
    #6:@password                Core-Wizard (#191)   r d    any any any
    #6:@last-c*onnection        Core-Wizard (#191)   rxd    any none none
    #6:"set_gender set_gender_name set_gender_obj" Core-Wizard (#191) rxd this none this
    #6:@gender                  Core-Wizard (#191)   r d    any none none
    #6:@ex*amine                Core-Wizard (#191)   rxd    any none none
    #6:ex*amine                 Core-Wizard (#191)   r d    any none none
    #6:add_feature              unknown hacker (#35) rx     this none this
    #6:remove_feature           unknown hacker (#35) rxd    this none this
    #6:"@add-feature @addfeature" Core-Wizard (#191) r d    any none none
    #6:"@remove-feature @rmfeature @rm-feature" Core-Wizard (#191) r d any none none
    #6:@features                Core-Wizard (#191)   rxd    any for/about any
    #6:@features                Core-Wizard (#191)   r d    any none none
    #6:@memory                  unknown hacker (#35) r d    none none none
    #6:@version                 unknown hacker (#35) r d    none none none
    #6:@uptime                  unknown hacker (#35) r d    none none none
    #6:@quit                    Core-Wizard (#191)   r d    none none none
    #6:QUIT-IN-ALL-CAPS         Core-Wizard (#191)   r d    none none none
    #6:notify(new)              Core-Wizard (#191)   r d    this none this
    #6:examine_commands_ok      Core-Wizard (#191)   rxd    this none this
    #6:is_listening             Core-Wizard (#191)   rxd    this none this
    #6:"@quicksend @qsend"      Core-Wizard (#191)   r d    any any any
    #6:!*                       unknown hacker (#35) r d    any any any
    #6:'*                       unknown hacker (#35) r      any any any
    #6:"@pronoun_sub @pronoun-sub" Core-Wizard (#191) r d   none with/using any
    #6:"@set-note-string @set-note-text @set-note-value" Core-Wizard (#191) r d any none none
    #6:description              unknown hacker (#35) rxd    this none this
    #6:@nn                      Core-Wizard (#191)   r d    none none none
    #6:mu*rmur                  Core-Wizard (#191)   r d    any any any
    #6:look_in                  Core-Wizard (#191)   rxd    this none this
    #6:@option*s                Core-Wizard (#191)   r d    any any any
    #6:options_packages         Core-Wizard (#191)   rxd    this none this
    #6:options_command          Core-Wizard (#191)   rxd    this none this
    #6:contribute_partial       Core-Wizard (#191)   rxd    this none this
    #6:contribute_reset         Core-Wizard (#191)   rxd    this none this
    #6:contribute_link          Core-Wizard (#191)   rxd    this none this
    #6:receive_vbox             unknown hacker (#35) rxd    this none this
    #6:contribute_title         Core-Wizard (#191)   rxd    this none this
    #6:moveto                   Core-Wizard (#191)   rxd    this none this
    #6:ok_to_integrate          unknown hacker (#35) rxd    this none this
    #6:visible_of               unknown hacker (#35) rxd    this none this
    #6:@set-jtext-form          Core-Wizard (#191)   r d    any none none
    #6:idle_suffix              Core-Wizard (#191)   rxd    this none this
    #6:modname_v                Core-Wizard (#191)   rxd    this none this
    #6:@edit*#                  Core-Wizard (#191)   r d    any any any
    #6:set_focus_object         Core-Wizard (#191)   rxd    this none this
    #6:email_address            Core-Wizard (#191)   rxd    this none this
    #6:"misc_option client_option who_option parse_option" Core-Wizard (#191) rxd this none this
    #6:"@forward-me @forwardme" Core-Wizard (#191)   r d    any any any
    #6:ownership_quota          Core-Wizard (#191)   rxd    this none this
    #6:contribute_newline       Core-Wizard (#191)   rxd    this none this
    #6:"set_current_object set_current_object_stack set_authentication_key" Core-Wizard (#191) rxd this none this
    #6:client_notify(old)       Core-Wizard (#191)   rxd    this none this
    #6:client_notify            Xythian (#199)       rxd    this none this
    #6:brief                    Core-Wizard (#191)   rxd    this none this
    #6:picknew                  unknown hacker (#35) r d    any none none
    #6:"walk go"                unknown hacker (#35) rxd    none at/to any
    #6:lookup_room(old)         unknown hacker (#35) r d    this none this
    #6:_find_path               Core-Wizard (#191)   rxd    this none this
    #6:_move_by_exits(old)      Core-Wizard (#191)   r      this none this
    #6:join                     Core-Wizard (#191)   rxd    any none none
    #6:pick                     unknown hacker (#35) rxd    any on top of/on/onto/upon this
    #6:pop                      unknown hacker (#35) rxd    none on top of/on/onto/upon this
    #6:match_command            unknown hacker (#35) rxd    this none this
    #6:my_match_room            Core-Wizard (#191)   rxd    this none this
    #6:features                 Core-Wizard (#191)   rxd    this none this
    #6:receive_document         Core-Wizard (#191)   rxd    this none this
    #6:"@co @currentobject @current-object" Core-Wizard (#191) r d any none none
    #6:parse_current_object     unknown hacker (#35) rxd    this none this
    #6:@pusho*bject             Core-Wizard (#191)   r d    any none none
    #6:@popo*object             Core-Wizard (#191)   r d    none none none
    #6:@swapo*bject             Core-Wizard (#191)   r d    none none none
    #6:jdetails                 Core-Wizard (#191)   r d    any none none
    #6:@@sendmail               Core-Wizard (#191)   r d    any any any
    #6:fol*low                  unknown hacker (#35) r d    this none none
    #6:unfol*low                unknown hacker (#35) r d    any any any
    #6:followers                unknown hacker (#35) r d    any any any
    #6:following                unknown hacker (#35) r d    none none none
    #6:my_match_player          Core-Wizard (#191)   rxd    this none this
    #6:news                     Core-Wizard (#191)   r d    any none none
    #6:"@helpme @911"           Core-Wizard (#191)   r d    any any any
    #6:"@admin*istrators @admins" Core-Wizard (#191) rxd    any none none
    #6:"parse_message unparse_message" Core-Wizard (#191) rxd this none this
    #6:@url                     Core-Wizard (#191)   r d    any any any
    #6:@read-all-new*-mail      Core-Wizard (#191)   rxd    any none none
    #6:send_self_netmail        Core-Wizard (#191)   rxd    this none this
    #6:@add-help-db             Core-Wizard (#191)   r d    any none none
    #6:@rm-help-db              Core-Wizard (#191)   r d    any none none
    #6:@unsubscribed            Core-Wizard (#191)   r d    none none none
    #6:reconfunc                Core-Wizard (#191)   rxd    this none this
    #6:@resend                  Core-Wizard (#191)   r d    any any any
    #6:"help ?*"                Core-Wizard (#191)   rxd    any any any
    #6:match_help_object        unknown hacker (#35) rxd    this none this
    #6:@aliases                 Core-Wizard (#191)   r d    any none none
    #6:idle_suffix(old)         Core-Wizard (#191)   r      this none this
    #6:contribute_newline_maybe Core-Wizard (#191)   rxd    this none this
    #6:contribute_hr            Core-Wizard (#191)   rxd    this none this
    #6:set_last_player_paged    Core-Wizard (#191)   rxd    this none this
    #6:visible                  unknown hacker (#35) rxd    this none this
    #6:set_number               unknown hacker (#35) rxd    this none this
    #6:you                      unknown hacker (#35) rxd    this none this
    #6:page                     Core-Wizard (#191)   rxd    any any any
    #6:is_idle                  Core-Wizard (#191)   rxd    none none none
    #6:start_dozing             Core-Wizard (#191)   rxd    this none this
    #6:start_idling             Core-Wizard (#191)   rxd    this none this
    #6:"idle reidle"            Core-Wizard (#191)   rxd    any any any
    #6:idle_msg                 Core-Wizard (#191)   rxd    this none this
    #6:dozing_msg               Core-Wizard (#191)   rxd    this none this
    #6:start_doing              unknown hacker (#35) rxd    this none this
    #6:doing_msg                Core-Wizard (#191)   rxd    this none this
    #6:"doing undoing"          Core-Wizard (#191)   r d    any any any
    #6:@who                     Core-Wizard (#191)   rxd    any any any
    #6:debug_if_player          Core-Wizard (#191)   rxd    this none this
    #6:match_type_object        Core-Wizard (#191)   rxd    this none this
    #6:dependents_event_really_disconnected Core-Wizard (#191) rxd this none this
    #6:event_really_disconnected Core-Wizard (#191)  rxd    this none this
    #6:maybe_really_disconnected Core-Wizard (#191)  rxd    this none this
    #6:modname_c                unknown hacker (#35) rxd    this none this
    #6:@desc*ribe               Core-Wizard (#191)   r d    any none none
    #6:@netforw*ard             Core-Wizard (#191)   r d    any any any
    #6:@register                Core-Wizard (#191)   r d    any as any
    #6:"@register @email-address" Core-Wizard (#191) r      any none none
    #6:more_string              Core-Wizard (#191)   rxd    this none this
    #6:desc_idle_msg            Core-Wizard (#191)   rxd    this none this
    #6:nominate_for_core        Core-Wizard (#191)   rxd    this none this
    #6:sit                      Core-Wizard (#191)   r d    none with/using this
    #6:acceptable               Core-Wizard (#191)   rxd    this none this
    #6:@shout                   Core-Wizard (#191)   r d    any any any
    #6:set_home                 unknown hacker (#35) rx     this none this
    #6:anyconfunc               Core-Wizard (#191)   rxd    this none this
    #6:@ch*eck-full             Core-Wizard (#191)   r d    any any any
    #6:"@add-handler @addhandler" Core-Wizard (#191) r d    any none none
    #6:handlers                 Core-Wizard (#191)   rxd    this none this
    #6:"@remove-handler @rmhandler @rm-handler" Core-Wizard (#191) r d any none none
    #6:@handlers                Core-Wizard (#191)   rx     any for/about any
    #6:@handlers                Core-Wizard (#191)   r      any none none
    #6:total_connect_times      Xplat (#4014)        rxd    this none this
    #6:_set_mail_task           Core-Wizard (#191)   rxd    this none this
    #6:add_handler              unknown hacker (#35) rxd    this none this
    #6:remove_handler           unknown hacker (#35) rxd    this none this
    #6:"set_walking_dest set_walking_task" unknown hacker (#35) rx this none this
    #6:move_by_exits            unknown hacker (#35) rxd    this none this
    #6:walking_step             unknown hacker (#35) rxd    this none this
    #6:begin_walking            unknown hacker (#35) rxd    this none this
    #6:end_walking              unknown hacker (#35) rxd    this none this
    #6:"walkto walkto_blocking" unknown hacker (#35) rxd    this none this
    #6:find_path                unknown hacker (#35) rxd    this none this
    #6:stop                     unknown hacker (#35) r d    none none none
    #6:timestamp_string         Core-Wizard (#191)   rxd    this none this
    #6:@age                     Core-Wizard (#191)   r d    any none none
    #6:+*                       Xythian (#199)       rxd    any any any
    #6:set_client_protocols(old) Xythian (#199)      r      this none this
    #6:client_add_protocol(old) Xythian (#199)       r d    this none this
    #6:clear_protocols(old)     Xythian (#199)       r d    this none this
    #6:handles_client_protocol(old) Xythian (#199)   r d    this none this
    #6:set_proper               Xythian (#199)       rxd    this none this
    #6:lose                     unknown hacker (#35) rxd    any any any
    #6:display_current_object   Xplat (#4014)        rxd    this none this
    #6:current_object_string    Xplat (#4014)        rxd    this none this
    #6:edit_set_note_value      Xythian (#199)       rxd    this none this
    #6:edit_sendmail            Xythian (#199)       rxd    this none this
    #6:absent_for_page          Ken (#200)           rxd    this none this
    #6:send_forwarded_moomail   Xythian (#199)       rxd    this none this
    #6:walking_delay            Ken (#200)           rxd    this none this
    #6:walk_failed              Xythian (#199)       rxd    this none this
    #6:@quit(core)              Core-Wizard (#191)   r d    none none none
    #6:confunc(core)            Core-Wizard (#191)   rxd    this none this
    #6:my_walk_failed           Xeric (#999)         rxd    this none this
    #6:@sethome(core)           Core-Wizard (#191)   r d    none none none
    #6:dwim_objects             Xplat (#4014)        rxd    this none this
    #6:@listgag(core)           Core-Wizard (#191)   rxd    none none none
    #6:best_home                Xplat (#4014)        rxd    this none this
    #6:@room*s                  James (#316)         rxd    any any any
    #6:walk_failed(core)        James (#316)         rxd    this none this
    #6:set_timezone             Ken (#200)           rxd    this none this
    #6:ctime                    Ken (#200)           rxd    this none this
    #6:time_sub                 Ken (#200)           rxd    this none this
    #6:@lastlog                 unknown hacker (#35) rxd    any none none
-------------------------------- finished ---------------------------------
Object #289 does not define that verb, but its ancestor #6 does.
#6:"@linelen*gth" any none none
 1:  if (player != this)
 2:    "... somebody is being sneaky ...";
 3:    return;
 4:  endif
 5:  curlen = player.linelen;
 6:  wrap = curlen > 0;
 7:  wrapstr = wrap ? "on" | "off";
 8:  if (!dobjstr)
 9:    player:notify(tostr("Usage:  ", verb, " <number>"));
10:    player:notify(tostr("Current line length is ", abs(curlen), ".  Word wrapping is ", wrapstr, "."));
11:    return;
12:  endif
13:  newlen = tonum(dobjstr);
14:  if (newlen < 0)
15:    player:notify("Line length can't be a negative number.");
16:    return;
17:  elseif (newlen < 10)
18:    player:notify("You don't want your linelength that small.  Setting it to 10.");
19:    newlen = 10;
20:  endif
21:  player.linelen = wrap ? newlen | -newlen;
22:  player:notify(tostr("Line length is now ", abs(player.linelen), ".  Word wrapping is ", wrapstr, "."));
23:  if (!wrap)
24:    player:notify("To enable word wrapping, type `@wrap on'.");
25:  endif
    #6:@linelen*gth             unknown hacker (#35) r d    any none none
-------------------------------- finished ---------------------------------
   #18:"columnize columnise"    unknown hacker (#35) rxd    this none this
-------------------------------- finished ---------------------------------
Now programming Crag:^kids[1](0).
[Type lines of input; use `.' to end or `@abort' to abort the command.]
Line 2:  parse error
1 error(s).
Verb not programmed.
Now programming Crag:^kids[1](0).
[Type lines of input; use `.' to end or `@abort' to abort the command.]
Line 47:  parse error
1 error(s).
Verb not programmed.
Now programming Crag:^kids[1](0).
[Type lines of input; use `.' to end or `@abort' to abort the command.]
0 errors.
Verb programmed.
Crag (#289) [ (player) programmer ]
  Child of generic programmer (#52).
  Location meadow (#1106).
  #289:^kids                    Crag (#289)          r d    any none none
  #289:core_objects             Crag (#289)          rx     this none this
-------------------------------- finished ---------------------------------
-----
`HELP ^' NOT FOUND
==================

Sorry, but no help is available on `^'.  If you can't find what you're looking for, you may want to send mail (see `help mail'[1]) to *Bug-reports.

The verb :^ is nowhere to be found.
The verb :^kids is on   Crag(#289)
=> #1 (root class)
Now programming Crag:^kids[1](0).
[Type lines of input; use `.' to end or `@abort' to abort the command.]
0 errors.
Verb programmed.
-----
$COMMAND_UTILS:OBJECT_MATCH_FAILED
==================================

Usage: object_match_failed(object, string)

Prints a message if string does not match object.  Generally used after object is derived from a :match_object(string).

=> 0
Now programming Crag:^kids[1](0).
[Type lines of input; use `.' to end or `@abort' to abort the command.]
0 errors.
Verb programmed.
Try this instead:  @rename me:^kids me:kids to
(You probably meant `@rename me:^kids to kids'.)
Verb name changed.
#289:kids, line 17:  Type mismatch
(End of traceback)
#289:kids, line 17:  Type mismatch
(End of traceback)
Now programming Crag:kids[1](0).
[Type lines of input; use `.' to end or `@abort' to abort the command.]
0 errors.
Verb programmed.
The root class(#1) has 189 kid(s)
  71 with core name:
    $mail_agent (The Mail Distribution Center, #42)
    $mail_recipient (The Generic Mail Recipient, #41)
    $gender (Generic gender object, #64)
    $generic_help (Generic Help Database, #30)
    $limbo (Limbo, #15)
    $guest_log (The Guest Log, #12)
    $last_huh (The Player Last_huh Verbs, #11)
    $login (The Login Commands, #10)
    $generic_options (The Generic Option Package, #60)
    $feature (The Generic Feature Object, #65)
    $error (The Error Generator, #66)
    $pronoun_sub (Pronoun substitution, #69)
    $pronoun_sub.generic (The Generic Pronoun_sub Translator, #73)
    $jtext.root (The Tag Root, #92)
    $jaddress.root (The Address Root, #112)
    $out_of_band (The Out Of Band Commands, #117)
    $jtext.link (The link dispatcher tag, #127)
    $admin_group (The generic admin group, #168)
    $event_dispatcher (The generic event dispatching object, #113)
    $utils (The generic utilities, #151)
    $event_handler (The generic event handler, #137)
    $english.everything (Everything, #144)
    $english.all (All, #105)
    $thing (The generic thing, #5)
    $english.here (Here, #187)
    $admin (The administration, #176)
    $server_options (The server options, #196)
    $name_utils.dummy (Name-subbing dummy object, #136)
    $startup (The startup handler, #198)
    $checkpointer (The checkpointer, #181)
    $syslog (The syslog, #190)
    $generic_biglist_home (The Generic BigList Resident, #75)
    $http (The http, #88)
    $generic_db (The New Generic Database, #79)
    $local.boat.water.churning_depths (The churning depths, #460)
    $local.abby.a_brain (The generic brain, #826)
    $local.time (The waterpoint time, #412)
    $local.time.sun (The sun, #606)
    $local.rpg.doll (Nobody's RPG Doll, #808)
    $local.idle_watcher (The idle watcher, #1079)
    $property_farm (The generic property farm, #1747)
    $modules.module.obj_generic_source_or_sink (The generic source or sink, #1484)
    $modules.mcp.obj_mcp (The MCP 2.1, #1912)
    $modules.mcp.obj_mcp.parser (The MCP 2.1 parser, #1942)
    $modules.mcp.obj_mcp.session (The generic MCP 2.1 session, #1721)
    $modules.mcp.obj_mcp.registry (The MCP package registry, #1784)
    $cord (The Cord Dispatcher, #1944)
    $modules.mcp.obj_cord_stub (The generic cord stub, #1943)
    $modules.mcp.obj_message_dispatcher (The generic message dispatch object, #1922)
    $local.party (The party utils, #1913)
    $modules.TWin.obj_local_generic_listener (The generic listener, #1987)
    $modules.listeners.obj_daemon_handler (The generic daemon service handler, #1807)
    $local.ocean.visibility (The ocean visibility, #2045)
    $local.stars (The stars master, #2323)
    $modules.smtp.obj_smtp (The SMTP, #1897)
    $modules.TWin.obj_twin.form (The Generic TWin form, #2367)
    $modules.TWin.obj_component (The generic TWin parser component, #2296)
    $modules.TWin.obj_twin.connection (The generic TWin connection, #2351)
    $modules.TWin.obj_event (The generic widget event type, #2097)
    $local.account (Waterpoint character creation, #1927)
    $local.account.request (The generic deferred character request, #2530)
    $waif (The root waif, #302)
    $local.systran (The systran, #2824)
    $ftp_client (The FTP, #2878)
    $local.ocean.errors (The Ocean Error Property Farm, #4245)
    $local.sexpr (The s-expression parser, #3507)
    $local.workspace (The generic workspace, #5418)
    $local.geometry.rcd (The room coordinate database, #2069)
    $local.type (The data type class, #6174)
    $local.material (The materials namespace, #5025)
    $local.name_builder (The generic name builder, #6123)
  14 fertile:
  104 other:
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
-----
$STRING_UTILS:COLUMNIZE
=======================

columnize (items, n [, width]) - Turn a one-column list of items into an n-column list. 'width' is the last character position that may be occupied; it defaults to a standard screen width. Example: To tell the player a list of numbers in three columns, do 'player:tell_lines ($string_utils:columnize ({1, 2, 3, 4, 5, 6, 7}, 3));'.

#-1:Input to EVAL, line 4:  Verb not found
... called from built-in function eval()
... called from #52:eval_cmd_string (this == #289), line 21
... called from #52:eval eval-d eval+d (this == #289), line 16
(End of traceback)
1                         3                          5
2                         4                          7
=> 0
1                         4                          7
2                         5                          
3                         6                          
=> 0
-----
GENERAL INFORMATION ON $STRING_UTILS[1]
=======================================

For a complete description of a given verb, do `help $string_utils:verbname'[2]

    Conversion routines:

:char_list    (string)                               => {"a", "b", "c"}
:to_list      (string)                               => {"a", "foo", "bear"}
 (see also :explode, below)

:from_list    (list [,sep])                          => "foo1foo2foo3"
:english_list (str-list[,none-str[,and-str[, sep]]]) => "foo1, foo2, and foo3"
:title_list*c (obj-list[,none-str[,and-str[, sep]]]) => "foo1, foo2, and foo3"
                                                  or => "Foo1, foo2, and foo3"

:[i|d]name[c]_and_number                             => "foo (#123)"
:[i|d]name[c]_list (obj-list, name-args)             => english list of names
                                                        in appropriate style
:[i|d]name[c]_and_number_list(obj-list, name-args)   => same, plus " (#123)"
:names_of     (obj-list)  => "foo1 (#123)   foo2 (#456)   foo3 (#789)"

:to_value       (string)                             => {1, value}
                                                  or => {0, error message}
:prefix_to_value(string)                             => {rest-of-string, value}
                                                  or => {0, error message}
:end_expression (string)                             => index of expression

:from_value[_suspended] (value [,quoteflag [,maxlistdepth]])
                                                     => "{foo1, foo2, foo3}"
:print[_suspended] (value)                           => "{foo1, foo2, foo3}"
:print_truncated   (value, length, suffix)           => "{foo1, fo.."
:print_with_names  (value)                           => "{foo1, foo2 (#123)}"

:english_number(42 [,zero])  => "forty-two"
:english_ordinal(42)         => "forty-second"
:ordinal(42)                 => "42nd"
:group_number(42135 [,sep])  => "42,135"
:from_seconds (num)          => "an hour" or "3 days" or "15 seconds"

:glob_to_regexp("foo*b?r")   => "^foo.*b.r$"
:xglob_to_regexp("f*ba[rz]") => "^f.*ba[rz]$"

    Type checking:

:is_numeric   (string) => return true if string is composed entirely of digits

    String Matching:

:match_string(string, pattern, options) => * wildcard matching
:find_prefix(prefix, string-list)       => list index of element starting
                                           with prefix
:match_stringlist(string, string-list)  => index/$ambiguous_match/$failed_match
:index_delimited(string,target[, case]) => index of delimited string occurrence
:index_all(string, target[, delimited]) => all occurrences of target in string
:next_index(str1, str2, prev[, case])   => index, after index `prev'

    Object Matching (see also $command_utils):

:literal_object(string)                        => object match independent
                                                  of location
:match        (string, [obj-list, prop-name]+) => matching object
:match_player (string-list[,me-object])        => list of matching players
:match_object (string, location)               => default object match
:match_player_or_object(@string-list)          => matching object or player
:match_room   (string)                         => matching room object

    Parsing:

:explode (string,char) -- string => list of words delimited by char
 (see also :to_list, above)
:words   (string)      -- string => list of words (as with command line parser)
:word_start (string)   -- string => list of start-end pairs.
:first_word (string)   -- string => {first word, rest of string} or {}

:parse_command(cmd_line[, player]) -- string => parsed command info

    Pretty printing:

:space         (n/string[,filler])     => n spaces
:left          (string,width[,filler]) => left justified string in field 
:right         (string,width[,filler]) => right justified string in field
:center/re     (string,width[,filler]) => centered string in field
:columnize/se[_suspended](list,n[,width])
                                       => list of strings in n columns
:columnize/se_no_truncate(list,n[,linelen])
                                       => same, but will not truncate items
:columnize/se_with_headers(headers, fields) => columnize, plus headers

    Substitutions

:substitute (string, subst_list [,case])  -- general substitutions.
:substitute_delimited(...)                -- same, but with word boundaries.
:pronoun_sub (string/list[,who[,thing[,location]]])
                                          -- pronoun substitutions.
:pronoun_sub_secure (string[,who[,thing[,location]]],default)
                                          -- substitute and check for names.
:pronoun_quote (string/list/subst_list)   -- quoting for pronoun substitutions.
:regexp_quote(string)                     -- quoting for regexps.

    Miscellaneous string munging:

:trim         (string)       => string with outside whitespace removed.
:triml        (string)       => string with leading whitespace removed.
:trimr        (string)       => string with trailing whitespace removed.
:strip_chars  (string,chars) => string with all chars in `chars' removed.
:strip_all_but(string,chars) => string with all chars not in `chars' removed.
:capitalize/se(string)       => string with first letter capitalized.
:uppercase/lowercase(string) => string with all letters upper or lowercase.
:reverse      (string)       => string, backwards.

:common(string1, string2)    => length of longest common prefix.
:is_uppercase (string)       => true iff no lowercase letters in string
:is_lowercase (string)       => true iff no uppercase letters in string
:nonblank     (string)       => true iff any non-whitespace characters

:connection_hostname(string) => hostname part of connection identifier.

    Conversions to and from common string formats:

:character_to_ascii(char)    => integer ASCII rep of char
:character_to_hex_ascii(char) => two-digit hexadecimal string ASCII rep of char
:ascii_to_character(num)     => character represented in ASCII by num
:hex_ascii_to_character(hex) => ASCII character represented by two-character hexadecimal string hex

    A few useful properties:

alphabet                    => "abcdefghijklmnopqrstuvwxyz"
tab                         => a single tab character

-----
$STRING_UTILS:COLUMNIZE_WITH_HEADERS
====================================

Usage: columnize_with_headers(headers, fields) => lines

Format the m * n array of strings under n headers.

Doesn't truncate strings.

-----
$STRING_UTILS:COLUMNIZE
=======================

columnize (items, n [, width]) - Turn a one-column list of items into an n-column list. 'width' is the last character position that may be occupied; it defaults to a standard screen width. Example: To tell the player a list of numbers in three columns, do 'player:tell_lines ($string_utils:columnize ({1, 2, 3, 4, 5, 6, 7}, 3));'.

#18:"columnize_with_headers columnise_with_headers" (headers, fields)
 1:  "Usage: columnize_with_headers(headers, fields) => lines";
 2:  "Format the m * n array of strings under n headers.";
 3:  "Doesn't truncate strings.";
 6:  bars = {};
 7:  maxlens = {};
 8:  lines = {};
 9:  for h in [1..length(headers)]
10:    header = headers[h];
11:    maxlen = length(header);
12:    bars = {@bars, $string_utils:space(maxlen, "-")};
13:    for row in (fields)
14:      maxlen = max(maxlen, length(row[h]));
15:    endfor
16:    maxlens = {@maxlens, maxlen};
17:  endfor
18:  for row in ({headers, bars, @fields, bars})
19:    line = "";
20:    for i in [1..length(headers)]
21:      line = tostr(line, $string_utils:left(row[i], maxlens[i]), "  ");
22:    endfor
23:    lines = {@lines, $string_utils:trimr(line)};
24:  endfor
25:  return lines;
That object does not have that verb definition.
Now ignoring code for me:obj_table.
[Type lines of input; use `.' to end or `@abort' to abort the command.]
Verb code ignored.
#-1:Input to EVAL, line 4:  Verb not found
... called from built-in function eval()
... called from #52:eval_cmd_string (this == #289), line 21
... called from #52:eval eval-d eval+d (this == #289), line 16
(End of traceback)
Verb added [3] (2).
Now programming Crag:obj_table[3](2).
[Type lines of input; use `.' to end or `@abort' to abort the command.]
Line 5:  parse error
1 error(s).
Verb not programmed.
0
=> 0
Now programming Crag:obj_table[3](2).
[Type lines of input; use `.' to end or `@abort' to abort the command.]
0 errors.
Verb programmed.
#289:obj_table, line 8:  Variable not found
... called from #-1:Input to EVAL, line 4
... called from built-in function eval()
... called from #52:eval_cmd_string (this == #289), line 21
... called from #52:eval eval-d eval+d (this == #289), line 16
(End of traceback)
Last modified Fri Aug  4 15:54:02 2006 PDT by Crag (#289).
#289:"obj_table" this none this
 1:  "obj_table(objlist, objnames) => list of strings:";
 2:  "   objname, dnamec, dbref";
 3:  {drefs, names} = args;
 4:  rows = {};
 5:  for idx in [1..length(drefs)]
 6:    or = drefs[idx];
 7:    on = names[idx];
 8:    rows = {@rows, {"    " + on, o:dnamec(), tostr(or)}};
 9:  endfor
10:  return $string_utils:columnize_with_headers(headers, rows);
Now programming Crag:obj_table[3](2).
[Type lines of input; use `.' to end or `@abort' to abort the command.]
0 errors.
Verb programmed.
#289:obj_table, line 10:  Variable not found
... called from #-1:Input to EVAL, line 4
... called from built-in function eval()
... called from #52:eval_cmd_string (this == #289), line 21
... called from #52:eval eval-d eval+d (this == #289), line 16
(End of traceback)
Now programming Crag:obj_table[3](2).
[Type lines of input; use `.' to end or `@abort' to abort the command.]
0 errors.
Verb programmed.
    Name  dnamec  dbref
--------  ------  -----
    Me!   Crag    #289
--------  ------  -----
=> 0
The root class(#1) has 189 kid(s)
  71 with core name:
    $mail_agent (The Mail Distribution Center, #42)
    $mail_recipient (The Generic Mail Recipient, #41)
    $gender (Generic gender object, #64)
    $generic_help (Generic Help Database, #30)
    $limbo (Limbo, #15)
    $guest_log (The Guest Log, #12)
    $last_huh (The Player Last_huh Verbs, #11)
    $login (The Login Commands, #10)
    $generic_options (The Generic Option Package, #60)
    $feature (The Generic Feature Object, #65)
    $error (The Error Generator, #66)
    $pronoun_sub (Pronoun substitution, #69)
    $pronoun_sub.generic (The Generic Pronoun_sub Translator, #73)
    $jtext.root (The Tag Root, #92)
    $jaddress.root (The Address Root, #112)
    $out_of_band (The Out Of Band Commands, #117)
    $jtext.link (The link dispatcher tag, #127)
    $admin_group (The generic admin group, #168)
    $event_dispatcher (The generic event dispatching object, #113)
    $utils (The generic utilities, #151)
    $event_handler (The generic event handler, #137)
    $english.everything (Everything, #144)
    $english.all (All, #105)
    $thing (The generic thing, #5)
    $english.here (Here, #187)
    $admin (The administration, #176)
    $server_options (The server options, #196)
    $name_utils.dummy (Name-subbing dummy object, #136)
    $startup (The startup handler, #198)
    $checkpointer (The checkpointer, #181)
    $syslog (The syslog, #190)
    $generic_biglist_home (The Generic BigList Resident, #75)
    $http (The http, #88)
    $generic_db (The New Generic Database, #79)
    $local.boat.water.churning_depths (The churning depths, #460)
    $local.abby.a_brain (The generic brain, #826)
    $local.time (The waterpoint time, #412)
    $local.time.sun (The sun, #606)
    $local.rpg.doll (Nobody's RPG Doll, #808)
    $local.idle_watcher (The idle watcher, #1079)
    $property_farm (The generic property farm, #1747)
    $modules.module.obj_generic_source_or_sink (The generic source or sink, #1484)
    $modules.mcp.obj_mcp (The MCP 2.1, #1912)
    $modules.mcp.obj_mcp.parser (The MCP 2.1 parser, #1942)
    $modules.mcp.obj_mcp.session (The generic MCP 2.1 session, #1721)
    $modules.mcp.obj_mcp.registry (The MCP package registry, #1784)
    $cord (The Cord Dispatcher, #1944)
    $modules.mcp.obj_cord_stub (The generic cord stub, #1943)
    $modules.mcp.obj_message_dispatcher (The generic message dispatch object, #1922)
    $local.party (The party utils, #1913)
    $modules.TWin.obj_local_generic_listener (The generic listener, #1987)
    $modules.listeners.obj_daemon_handler (The generic daemon service handler, #1807)
    $local.ocean.visibility (The ocean visibility, #2045)
    $local.stars (The stars master, #2323)
    $modules.smtp.obj_smtp (The SMTP, #1897)
    $modules.TWin.obj_twin.form (The Generic TWin form, #2367)
    $modules.TWin.obj_component (The generic TWin parser component, #2296)
    $modules.TWin.obj_twin.connection (The generic TWin connection, #2351)
    $modules.TWin.obj_event (The generic widget event type, #2097)
    $local.account (Waterpoint character creation, #1927)
    $local.account.request (The generic deferred character request, #2530)
    $waif (The root waif, #302)
    $local.systran (The systran, #2824)
    $ftp_client (The FTP, #2878)
    $local.ocean.errors (The Ocean Error Property Farm, #4245)
    $local.sexpr (The s-expression parser, #3507)
    $local.workspace (The generic workspace, #5418)
    $local.geometry.rcd (The room coordinate database, #2069)
    $local.type (The data type class, #6174)
    $local.material (The materials namespace, #5025)
    $local.name_builder (The generic name builder, #6123)
  14 fertile:
  104 other:
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    Name  dnamec  dbref
--------  ------  -----
--------  ------  -----
=> 0
    Name                                                dnamec                                         dbref
--------                                                ------                                         -----
    $local.boat                                         The generic boat                               #637
    $local.boat.launch_exit                             The generic land to water exit                 #823
    $local.boat.water                                   The generic water room                         #414
    $local.boat.water.churning_depths                   The churning depths                            #460
    $local.boat.water.ship_to_water                     The generic ship to water exit                 #671
    $local.boat.water.ship_to_water.water_to_ship_exit  The generic water to ship exit                 #1197
    $local.dictionary                                   The Merriam-Webster Dictionary                 #333
    $local.vehicle                                      The generic furniture vehicle                  #395
    $local.rpg                                          The Waterpoint RPG                             #666
    $local.rpg.doll                                     Nobody's RPG Doll                              #808
    $local.rpg.options                                  The RPG Options                                #874
    $local.coastal_path_room                            The generic coastal path room                  #474
    $local.coastal_path_room.path_zone                  The coastal path                               #668
    $local.room_matching_utils                          The room matching utilities                    #444
    $local.room_matching_utils.party_feature            The PARTY TIME WOO WOO FEATURE                 #206
    $local.room_matching_utils.ship_room                The generic room in a generic ship             #563
    $local.zone                                         The generic zone                               #931
    $local.time                                         The waterpoint time                            #412
    $local.time.sun                                     The sun                                        #606
    $local.time.sun.events                              The sun events                                 #3814
    $local.water_exit                                   The generic water exit                         #559
    $local.peril                                        The MOO PERIL game box                         #1016
    $local.peril.army                                   One of nobody's generic PERIL armies           #1044
    $local.peril.army_namebuilder                       The article namebuilder for MOO PERIL armies   #4826
    $local.magic_number_dispenser                       The magic number dispenser                     #802
    $local.idle_watcher                                 The idle watcher                               #1079
    $local.wetness                                      The generic wetness                            #1680
    $local.character_request_list                       The deferred character request list            #1578
    $local.dmz                                          The demilitarized zone                         #1600
    $local.srpg                                         The SpoofRPG Feature Object                    #743
    $local.srpg.npc_fo                                  The SpoofRPG NPC Management FO                 #1527
    $local.srpg.reincarnation_room                      The eastern edge of the pine forest            #504
    $local.srpg.whos_feature                            The Who's Feature                              #436
    $local.weather                                      The waterpoint weather                         #1087
    $local.party                                        The party utils                                #1913
    $local.emoticon                                     The generic emoticon                           #1114
    $local.abby                                         Abby                                           #400
    $local.abby.brain                                   The rock stupid brain                          #830
    $local.abby.brain.van                               Van                                            #1111
    $local.abby.home                                    Abby's dog house                               #827
    $local.abby.a_brain                                 The generic brain                              #826
    $local.abby.pasting_feature                         The Pasting Feature                            #212
    $local.abby.matcher                                 Abby's command processor                       #940
    $local.abby.parrot                                  The parrot                                     #742
    $local.abby.parrot.brain                            Button                                         #2270
    $local.abby.generic_message                         The generic message                            #1604
    $local.httpd                                        The Waterpoint httpd                           #2017
    $local.httpd.root                                   Web/                                           #2022
    $local.httpd.root.object                            The generic web object                         #2459
    $local.httpd.root.tree                              Generic web tree/                              #2194
    $local.httpd.root.page                              Generic web page                               #522
    $local.httpd.root_page                              Root page (Waterpoint non-root)                #2414
    $local.ocean                                        The ocean                                      #1893
    $local.ocean.events                                 The ocean events                               #1541
    $local.ocean.events.heartbeat                       The ocean heartbeat                            #1983
    $local.ocean.events.collision                       The ocean collision                            #2014
    $local.ocean.island                                 The generic island                             #1703
    $local.ocean.waterpoint_island                      Waterpoint island                              #2005
    $local.ocean.visibility                             The ocean visibility                           #2045
    $local.ocean.dock                                   The generic dock                               #1552
    $local.ocean.ferry                                  The generic high-speed light ferry boat        #2056
    $local.ocean.ferry.room                             The zone for Ferry #2                          #2059
    $local.ocean.ship                                   The generic ship                               #467
    $local.ocean.room_zone                              The generic ocean object room zone             #1133
    $local.ocean.errors                                 The Ocean Error Property Farm                  #4245
    $local.ocean.water_connection_exit                  The generic water connection exit              #4271
    $local.ocean.gps                                    Ken's generic gps unit                         #2187
    $local.ocean.gps.entity                             The GPS tick map entity                        #4281
    $local.ocean.gps.span                               The gps span waif                              #3921
    $local.ocean.gps.waypoint                           The gps waypoint waif                          #4191
    $local.ocean.gps.map                                The html test map                              #2000
    $local.ocean.gps.map.entity                         The map entity                                 #3025
    $local.ocean.gps.map.bounds                         The bounds waif                                #4283
    $local.ocean.gps.map.scaleinfo                      The scaleinfo waif                             #4188
    $local.ocean.gps.map.jsentity                       The JSentity                                   #4323
    $local.ocean.dock_boat                              The generic harbor based oceangoing boat       #2042
    $local.ocean.reckoning                              The reckoning utilities                        #5874
    $local.coordinate_space                             The generic coordinate space                   #1587
    $local.coordinate_space.generic_object              The generic object in a coordinate space       #262
    $local.collectable                                  The generic collectable                        #355
    $local.spammy                                       The generic spammy thing                       #993
    $local.stars                                        The stars master                               #2323
    $local.welcome_messages                             The welcome messages                           #780
    $local.welcome_messages.welcome_message_waif        The welcome message record                     #4031
    $local.account                                      Waterpoint character creation                  #1927
    $local.account.request                              The generic deferred character request         #2530
    $local.group_waif                                   The group of objects                           #1011
    $local.resolver                                     The resolver utils                             #2402
    $local.resolver.header                              The dns header waif                            #2462
    $local.resolver.header.query                        The dns query waif                             #2438
    $local.resolver.header.resource                     The dns resource record waif                   #2603
    $local.sema                                         The semaphore waif                             #2611
    $local.cane                                         The generic cane                               #2777
    $local.server_group                                 The MOO Server Maintainers                     #2835
    $local.measurement_utils                            The measurement utilities                      #2785
    $local.xml                                          The xml utilities                              #2844
    $local.xml.node                                     The XML tree node                              #667
    $local.shareable_note                               The generic shareable note                     #775
    $local.systran                                      The systran                                    #2824
    $local.welcome_messages_recipient                   The welcome-messages                           #2208
    $local.condition                                    The generic condition                          #996
    $local.food                                         The Generic Food Item                          #974
    $local.comp_utils                                   The compositing utilities                      #3334
    $local.comp_utils.chart_waif                        The chart waif                                 #6836
    $local.comp_utils.namebuilder_represent             The namebuilder_represent for collectibles     #6934
    $local.comp_utils.coll_namebuilder_i                The namebuilder_i for collectables             #6981
    $local.measure_utils                                The measurement utilities                      #3555
    $local.fire                                         The generic fire                               #3394
    $local.welcome_message_group                        The welcome message group                      #2290
    $local.person                                       The generic personlike object                  #3737
    $local.person.gender                                It                                             #159
    $local.error                                        The error waif                                 #4256
    $local.sexpr                                        The s-expression parser                        #3507
    $local.mcp_listener                                 The generic MCP listener                       #4454
    $local.mcp_listener.twin_login                      The MCP listener login                         #4725
    $local.room_shell                                   The generic portable room exterior             #4430
    $local.fetcher                                      The fetcher                                    #3065
    $local.fetcher.ocean_object                         Recyclable #6424                               #6424
    $local.fetcher.adaptor                              The adaptor for fetcher                        #4861
    $local.fetcher.water_room                           The In front of the priory                     #7038
    $local.fetcher.home                                 The Summit                                     #2561
    $local.fetcher.police_box                           Inside a police box                            #4730
    $local.fetcher.police_box.shell                     The blue police box                            #4706
    $local.fetcher.police_box.shell.vortex              The space-time vortex                          #5402
    $local.fetcher.police_box.shell.last_island         Woodpoint island                               #2600
    $local.xmlrpc                                       Xmlrpc                                         #4924
    $local.xmlrpc.struct_waif                           The plist waif                                 #4899
    $local.xmlrpc.dateTime_waif                         The XML-RPC dateTime waif                      #4931
    $local.xmlrpc.registry                              The XML-RPC registry                           #4716
    $local.xmlrpc.server_proxy_waif                     The XML-RPC server proxy waif                  #4938
    $local.xmlrpc.module_proxy_waif                     The XML-RPC module proxy waif                  #3517
    $local.bignum_utils                                 The bignum utilities                           #2865
    $local.quicksilver_utils                            The quicksilver utilities                      #4682
    $local.quicksilver_utils.pez                        The generic runaway pez                        #4914
    $local.quicksilver_utils.namebuilder_d              The namebuilder_d for runaway pez              #5536
    $local.sql                                          The SQL Query Feature and Utilities            #5327
    $local.lexicon                                      The Lexicon utilities                          #5117
    $local.lexicon.game_waif                            The Lexicon game waif                          #2256
    $local.lexicon.feature                              The Lexicon game feature                       #5193
    $local.lexicon.feature.options_package              The Lexicon Feature options                    #4397
    $local.lexicon.game_registry                        The official Lexicon game registry             #3575
    $local.lexicon.game_registry_book                   The Lexicon history book                       #5401
    $local.lexicon.twin_player                          The Lexicon player interface                   #5472
    $local.lexicon.twin_words                           The Lexicon game viewer                        #5397
    $local.lexicon.unknown_player                       The unknown Lexicon player                     #3048
    $local.lexicon.twin_generic                         The generic Lexicon TWin form                  #5530
    $local.lexicon.twin_history                         The Lexicon history                            #5549
    $local.lexicon.registry_range_iterator              The lexicon registry range iterator waif       #3961
    $local.lexicon.registry_rule_match_iterator         The lexicon registry rule match iterator waif  #4952
    $local.workspace                                    The generic workspace                          #5418
    $local.workspace.feature                            The workspace eval feature                     #5437
    $local.foodstuff                                    The generic indiscrete food                    #3360
    $local.forwarder                                    The tagging forwarder waif                     #3638
    $local.getopt                                       The getopt utils                               #4870
    $local.packrat                                      The packrat                                    #5442
    $local.packrat.scrapheap                            The scrap heap                                 #3056
    $local.packrat.black_hole_of_despair                The black hole of despair                      #560
    $local.packrat.cheese                               The generic cheese                             #4409
    $local.matrix                                       The matrix waif                                #4921
    $local.progress                                     The TWin progress bar form                     #4891
    $local.macaw                                        The macaw                                      #5796
    $local.cell                                         The cell waif                                  #4995
    $local.geometry                                     The geometry utilities                         #6006
    $local.geometry.rcd                                 The room coordinate database                   #2069
    $local.geometry.ocean_object                        The generic ocean object                       #1636
    $local.tinyurl                                      Tu                                             #3968
    $local.tinyurl.feature                              The URL pasting feature                        #5082
    $local.dict                                         The dictionary data type                       #5721
    $local.csdict                                       The case sensitive dictionary data type        #3571
    $local.type                                         The data type class                            #6174
    $local.rdf                                          The RDF utilities                              #6011
    $local.rdf.store_waif                               The RDF store waif                             #5731
    $local.rdf.rdfxml_loader                            The RDF/XML loader                             #2236
    $local.mars_utils                                   The mars_utils                                 #4555
    $local.crypto                                       The crypto utilities                           #5416
    $local.uli                                          The ULI utilities                              #5080
    $local.word_server                                  The word server                                #1989
    $local.material                                     The materials namespace                        #5025
    $local.material.water                               The generic water                              #3464
    $local.material.black_sand                          The generic quantity of black sand             #5717
    $local.name_builder                                 The generic name builder                       #6123
    $local.topo_utils                                   The topography utilities                       #3748
    $local.action                                       The action namespace                           #3335
    $local.action.generic                               The generic action type                        #3336
    $local.action.put                                   The put action class                           #6727
    $local.jabber                                       The Jabber daemon                              #5269
    $local.jabber.buddy                                 The Jabber buddy                               #2500
    $local.jabber.feature                               The Jabber/XMPP Feature                        #7000
    $local.jabber.feature.options                       The Jabber options                             #6864
    $local.magic                                        The generic magic                              #3444
    $local.magic.generic_legs                           The generic teeny legs                         #6454
    $local.xmlweather                                   The Weather XML Feature                        #750
    $local.xmlweather.options                           The Weather XML feature options                #6079
    $local.xmlweather.trophy                            The Weather Trophy                             #6096
    $local.xmlweather.trophy.winner                     Wayne                                          #275
    $local.xmlweather.trophy.engine                     The Weather Feature                            #2929
    $local.urlutils                                     The URL utilities                              #6780
--------                                                ------                                         -----
=> 0
Now programming Crag:obj_table[3](2).
[Type lines of input; use `.' to end or `@abort' to abort the command.]
0 errors.
Verb programmed.
    Name                                                dnamec
--------                                                ------
    $local.boat                                         The generic boat
    $local.boat.launch_exit                             The generic land to water exit
    $local.boat.water                                   The generic water room
    $local.boat.water.churning_depths                   The churning depths
    $local.boat.water.ship_to_water                     The generic ship to water exit
    $local.boat.water.ship_to_water.water_to_ship_exit  The generic water to ship exit
    $local.dictionary                                   The Merriam-Webster Dictionary
    $local.vehicle                                      The generic furniture vehicle
    $local.rpg                                          The Waterpoint RPG
    $local.rpg.doll                                     Nobody's RPG Doll
    $local.rpg.options                                  The RPG Options
    $local.coastal_path_room                            The generic coastal path room
    $local.coastal_path_room.path_zone                  The coastal path
    $local.room_matching_utils                          The room matching utilities
    $local.room_matching_utils.party_feature            The PARTY TIME WOO WOO FEATURE
    $local.room_matching_utils.ship_room                The generic room in a generic ship
    $local.zone                                         The generic zone
    $local.time                                         The waterpoint time
    $local.time.sun                                     The sun
    $local.time.sun.events                              The sun events
    $local.water_exit                                   The generic water exit
    $local.peril                                        The MOO PERIL game box
    $local.peril.army                                   One of nobody's generic PERIL armies
    $local.peril.army_namebuilder                       The article namebuilder for MOO PERIL armies
    $local.magic_number_dispenser                       The magic number dispenser
    $local.idle_watcher                                 The idle watcher
    $local.wetness                                      The generic wetness
    $local.character_request_list                       The deferred character request list
    $local.dmz                                          The demilitarized zone
    $local.srpg                                         The SpoofRPG Feature Object
    $local.srpg.npc_fo                                  The SpoofRPG NPC Management FO
    $local.srpg.reincarnation_room                      The eastern edge of the pine forest
    $local.srpg.whos_feature                            The Who's Feature
    $local.weather                                      The waterpoint weather
    $local.party                                        The party utils
    $local.emoticon                                     The generic emoticon
    $local.abby                                         Abby
    $local.abby.brain                                   The rock stupid brain
    $local.abby.brain.van                               Van
    $local.abby.home                                    Abby's dog house
    $local.abby.a_brain                                 The generic brain
    $local.abby.pasting_feature                         The Pasting Feature
    $local.abby.matcher                                 Abby's command processor
    $local.abby.parrot                                  The parrot
    $local.abby.parrot.brain                            Button
    $local.abby.generic_message                         The generic message
    $local.httpd                                        The Waterpoint httpd
    $local.httpd.root                                   Web/
    $local.httpd.root.object                            The generic web object
    $local.httpd.root.tree                              Generic web tree/
    $local.httpd.root.page                              Generic web page
    $local.httpd.root_page                              Root page (Waterpoint non-root)
    $local.ocean                                        The ocean
    $local.ocean.events                                 The ocean events
    $local.ocean.events.heartbeat                       The ocean heartbeat
    $local.ocean.events.collision                       The ocean collision
    $local.ocean.island                                 The generic island
    $local.ocean.waterpoint_island                      Waterpoint island
    $local.ocean.visibility                             The ocean visibility
    $local.ocean.dock                                   The generic dock
    $local.ocean.ferry                                  The generic high-speed light ferry boat
    $local.ocean.ferry.room                             The zone for Ferry #2
    $local.ocean.ship                                   The generic ship
    $local.ocean.room_zone                              The generic ocean object room zone
    $local.ocean.errors                                 The Ocean Error Property Farm
    $local.ocean.water_connection_exit                  The generic water connection exit
    $local.ocean.gps                                    Ken's generic gps unit
    $local.ocean.gps.entity                             The GPS tick map entity
    $local.ocean.gps.span                               The gps span waif
    $local.ocean.gps.waypoint                           The gps waypoint waif
    $local.ocean.gps.map                                The html test map
    $local.ocean.gps.map.entity                         The map entity
    $local.ocean.gps.map.bounds                         The bounds waif
    $local.ocean.gps.map.scaleinfo                      The scaleinfo waif
    $local.ocean.gps.map.jsentity                       The JSentity
    $local.ocean.dock_boat                              The generic harbor based oceangoing boat
    $local.ocean.reckoning                              The reckoning utilities
    $local.coordinate_space                             The generic coordinate space
    $local.coordinate_space.generic_object              The generic object in a coordinate space
    $local.collectable                                  The generic collectable
    $local.spammy                                       The generic spammy thing
    $local.stars                                        The stars master
    $local.welcome_messages                             The welcome messages
    $local.welcome_messages.welcome_message_waif        The welcome message record
    $local.account                                      Waterpoint character creation
    $local.account.request                              The generic deferred character request
    $local.group_waif                                   The group of objects
    $local.resolver                                     The resolver utils
    $local.resolver.header                              The dns header waif
    $local.resolver.header.query                        The dns query waif
    $local.resolver.header.resource                     The dns resource record waif
    $local.sema                                         The semaphore waif
    $local.cane                                         The generic cane
    $local.server_group                                 The MOO Server Maintainers
    $local.measurement_utils                            The measurement utilities
    $local.xml                                          The xml utilities
    $local.xml.node                                     The XML tree node
    $local.shareable_note                               The generic shareable note
    $local.systran                                      The systran
    $local.welcome_messages_recipient                   The welcome-messages
    $local.condition                                    The generic condition
    $local.food                                         The Generic Food Item
    $local.comp_utils                                   The compositing utilities
    $local.comp_utils.chart_waif                        The chart waif
    $local.comp_utils.namebuilder_represent             The namebuilder_represent for collectibles
    $local.comp_utils.coll_namebuilder_i                The namebuilder_i for collectables
    $local.measure_utils                                The measurement utilities
    $local.fire                                         The generic fire
    $local.welcome_message_group                        The welcome message group
    $local.person                                       The generic personlike object
    $local.person.gender                                It
    $local.error                                        The error waif
    $local.sexpr                                        The s-expression parser
    $local.mcp_listener                                 The generic MCP listener
    $local.mcp_listener.twin_login                      The MCP listener login
    $local.room_shell                                   The generic portable room exterior
    $local.fetcher                                      The fetcher
    $local.fetcher.ocean_object                         Recyclable #6424
    $local.fetcher.adaptor                              The adaptor for fetcher
    $local.fetcher.water_room                           The In front of the priory
    $local.fetcher.home                                 The Summit
    $local.fetcher.police_box                           Inside a police box
    $local.fetcher.police_box.shell                     The blue police box
    $local.fetcher.police_box.shell.vortex              The space-time vortex
    $local.fetcher.police_box.shell.last_island         Woodpoint island
    $local.xmlrpc                                       Xmlrpc
    $local.xmlrpc.struct_waif                           The plist waif
    $local.xmlrpc.dateTime_waif                         The XML-RPC dateTime waif
    $local.xmlrpc.registry                              The XML-RPC registry
    $local.xmlrpc.server_proxy_waif                     The XML-RPC server proxy waif
    $local.xmlrpc.module_proxy_waif                     The XML-RPC module proxy waif
    $local.bignum_utils                                 The bignum utilities
    $local.quicksilver_utils                            The quicksilver utilities
    $local.quicksilver_utils.pez                        The generic runaway pez
    $local.quicksilver_utils.namebuilder_d              The namebuilder_d for runaway pez
    $local.sql                                          The SQL Query Feature and Utilities
    $local.lexicon                                      The Lexicon utilities
    $local.lexicon.game_waif                            The Lexicon game waif
    $local.lexicon.feature                              The Lexicon game feature
    $local.lexicon.feature.options_package              The Lexicon Feature options
    $local.lexicon.game_registry                        The official Lexicon game registry
    $local.lexicon.game_registry_book                   The Lexicon history book
    $local.lexicon.twin_player                          The Lexicon player interface
    $local.lexicon.twin_words                           The Lexicon game viewer
    $local.lexicon.unknown_player                       The unknown Lexicon player
    $local.lexicon.twin_generic                         The generic Lexicon TWin form
    $local.lexicon.twin_history                         The Lexicon history
    $local.lexicon.registry_range_iterator              The lexicon registry range iterator waif
    $local.lexicon.registry_rule_match_iterator         The lexicon registry rule match iterator waif
    $local.workspace                                    The generic workspace
    $local.workspace.feature                            The workspace eval feature
    $local.foodstuff                                    The generic indiscrete food
    $local.forwarder                                    The tagging forwarder waif
    $local.getopt                                       The getopt utils
    $local.packrat                                      The packrat
    $local.packrat.scrapheap                            The scrap heap
    $local.packrat.black_hole_of_despair                The black hole of despair
    $local.packrat.cheese                               The generic cheese
    $local.matrix                                       The matrix waif
    $local.progress                                     The TWin progress bar form
    $local.macaw                                        The macaw
    $local.cell                                         The cell waif
    $local.geometry                                     The geometry utilities
    $local.geometry.rcd                                 The room coordinate database
    $local.geometry.ocean_object                        The generic ocean object
    $local.tinyurl                                      Tu
    $local.tinyurl.feature                              The URL pasting feature
    $local.dict                                         The dictionary data type
    $local.csdict                                       The case sensitive dictionary data type
    $local.type                                         The data type class
    $local.rdf                                          The RDF utilities
    $local.rdf.store_waif                               The RDF store waif
    $local.rdf.rdfxml_loader                            The RDF/XML loader
    $local.mars_utils                                   The mars_utils
    $local.crypto                                       The crypto utilities
    $local.uli                                          The ULI utilities
    $local.word_server                                  The word server
    $local.material                                     The materials namespace
    $local.material.water                               The generic water
    $local.material.black_sand                          The generic quantity of black sand
    $local.name_builder                                 The generic name builder
    $local.topo_utils                                   The topography utilities
    $local.action                                       The action namespace
    $local.action.generic                               The generic action type
    $local.action.put                                   The put action class
    $local.jabber                                       The Jabber daemon
    $local.jabber.buddy                                 The Jabber buddy
    $local.jabber.feature                               The Jabber/XMPP Feature
    $local.jabber.feature.options                       The Jabber options
    $local.magic                                        The generic magic
    $local.magic.generic_legs                           The generic teeny legs
    $local.xmlweather                                   The Weather XML Feature
    $local.xmlweather.options                           The Weather XML feature options
    $local.xmlweather.trophy                            The Weather Trophy
    $local.xmlweather.trophy.winner                     Wayne
    $local.xmlweather.trophy.engine                     The Weather Feature
    $local.urlutils                                     The URL utilities
--------                                                ------
=> 0
You see no "#local.xmlweather.trophy" here.
A clumpy little machine, painted a flat, dull yellow. There's a little bell mounted on top of it. It's got little wheels on the bottom of it, and they're a wee bit crooked; they squeak like they could use a good oiling. A prickly speaker grill, looking a lot like something a cat has sharpened its paws on, is built into the side. A little tape banner is scrolling across the front behind some scratched and dusty glass. It reads:
Wayne is the current winner with an unbearable temperature of 86.
